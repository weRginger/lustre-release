m4trace:/usr/share/aclocal/argz.m4:12: -1- AC_DEFUN([gl_FUNC_ARGZ], [gl_PREREQ_ARGZ

AC_CHECK_HEADERS([argz.h], [], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_TYPES([error_t],
  [],
  [AC_DEFINE([error_t], [int],
   [Define to a type to use for `error_t' if it is not otherwise available.])
   AC_DEFINE([__error_t_defined], [1], [Define so that glibc/gnulib argp.h
    does not typedef error_t.])],
  [#if defined(HAVE_ARGZ_H)
#  include <argz.h>
#endif])

ARGZ_H=
AC_CHECK_FUNCS([argz_add argz_append argz_count argz_create_sep argz_insert \
	argz_next argz_stringify], [], [ARGZ_H=argz.h; AC_LIBOBJ([argz])])

dnl if have system argz functions, allow forced use of
dnl libltdl-supplied implementation (and default to do so
dnl on "known bad" systems). Could use a runtime check, but
dnl (a) detecting malloc issues is notoriously unreliable
dnl (b) only known system that declares argz functions,
dnl     provides them, yet they are broken, is cygwin
dnl     releases prior to 16-Mar-2007 (1.5.24 and earlier)
dnl So, it's more straightforward simply to special case
dnl this for known bad systems.
AS_IF([test -z "$ARGZ_H"],
    [AC_CACHE_CHECK(
        [if argz actually works],
        [lt_cv_sys_argz_works],
        [[case $host_os in #(
	 *cygwin*)
	   lt_cv_sys_argz_works=no
	   if test "$cross_compiling" != no; then
	     lt_cv_sys_argz_works="guessing no"
	   else
	     lt_sed_extract_leading_digits='s/^\([0-9\.]*\).*/\1/'
	     save_IFS=$IFS
	     IFS=-.
	     set x `uname -r | sed -e "$lt_sed_extract_leading_digits"`
	     IFS=$save_IFS
	     lt_os_major=${2-0}
	     lt_os_minor=${3-0}
	     lt_os_micro=${4-0}
	     if test "$lt_os_major" -gt 1 \
		|| { test "$lt_os_major" -eq 1 \
		  && { test "$lt_os_minor" -gt 5 \
		    || { test "$lt_os_minor" -eq 5 \
		      && test "$lt_os_micro" -gt 24; }; }; }; then
	       lt_cv_sys_argz_works=yes
	     fi
	   fi
	   ;; #(
	 *) lt_cv_sys_argz_works=yes ;;
	 esac]])
     AS_IF([test $lt_cv_sys_argz_works = yes],
        [AC_DEFINE([HAVE_WORKING_ARGZ], 1,
                   [This value is set to 1 to indicate that the system argz facility works])],
        [ARGZ_H=argz.h
        AC_LIBOBJ([argz])])])

AC_SUBST([ARGZ_H])
])
m4trace:/usr/share/aclocal/argz.m4:79: -1- AC_DEFUN([gl_PREREQ_ARGZ], [:])
m4trace:/usr/share/aclocal/ltdl.m4:16: -1- AC_DEFUN([LT_CONFIG_LTDL_DIR], [AC_BEFORE([$0], [LTDL_INIT])
_$0($*)
])
m4trace:/usr/share/aclocal/ltdl.m4:68: -1- AC_DEFUN([LTDL_CONVENIENCE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_CONVENIENCE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AU_DEFUN([AC_LIBLTDL_CONVENIENCE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:81: -1- AC_DEFUN([AC_LIBLTDL_CONVENIENCE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_CONVENIENCE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_CONVENIENCE])
m4trace:/usr/share/aclocal/ltdl.m4:124: -1- AC_DEFUN([LTDL_INSTALLABLE], [AC_BEFORE([$0], [LTDL_INIT])dnl
dnl Although the argument is deprecated and no longer documented,
dnl LTDL_INSTALLABLE used to take a DIRECTORY orgument, if we have one
dnl here make sure it is the same as any other declaration of libltdl's
dnl location!  This also ensures lt_ltdl_dir is set when configure.ac is
dnl not yet using an explicit LT_CONFIG_LTDL_DIR.
m4_ifval([$1], [_LT_CONFIG_LTDL_DIR([$1])])dnl
_$0()
])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AU_DEFUN([AC_LIBLTDL_INSTALLABLE], [_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:137: -1- AC_DEFUN([AC_LIBLTDL_INSTALLABLE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBLTDL_INSTALLABLE' is obsolete.
You should run autoupdate.])dnl
_LT_CONFIG_LTDL_DIR([m4_default([$1], [libltdl])])
_LTDL_INSTALLABLE])
m4trace:/usr/share/aclocal/ltdl.m4:213: -1- AC_DEFUN([_LT_LIBOBJ], [
  m4_pattern_allow([^_LT_LIBOBJS$])
  _LT_LIBOBJS="$_LT_LIBOBJS $1.$ac_objext"
])
m4trace:/usr/share/aclocal/ltdl.m4:226: -1- AC_DEFUN([LTDL_INIT], [dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

dnl We need to keep our own list of libobjs separate from our parent project,
dnl and the easiest way to do that is redefine the AC_LIBOBJs macro while
dnl we look for our own LIBOBJs.
m4_pushdef([AC_LIBOBJ], m4_defn([_LT_LIBOBJ]))
m4_pushdef([AC_LIBSOURCES])

dnl If not otherwise defined, default to the 1.5.x compatible subproject mode:
m4_if(_LTDL_MODE, [],
        [m4_define([_LTDL_MODE], m4_default([$2], [subproject]))
        m4_if([-1], [m4_bregexp(_LTDL_MODE, [\(subproject\|\(non\)?recursive\)])],
                [m4_fatal([unknown libltdl mode: ]_LTDL_MODE)])])

AC_ARG_WITH([included_ltdl],
    [AS_HELP_STRING([--with-included-ltdl],
                    [use the GNU ltdl sources included here])])

if test "x$with_included_ltdl" != xyes; then
  # We are not being forced to use the included libltdl sources, so
  # decide whether there is a useful installed version we can use.
  AC_CHECK_HEADER([ltdl.h],
      [AC_CHECK_DECL([lt_dlinterface_register],
	   [AC_CHECK_LIB([ltdl], [lt_dladvise_preload],
	       [with_included_ltdl=no],
	       [with_included_ltdl=yes])],
	   [with_included_ltdl=yes],
	   [AC_INCLUDES_DEFAULT
	    #include <ltdl.h>])],
      [with_included_ltdl=yes],
      [AC_INCLUDES_DEFAULT]
  )
fi

dnl If neither LT_CONFIG_LTDL_DIR, LTDL_CONVENIENCE nor LTDL_INSTALLABLE
dnl was called yet, then for old times' sake, we assume libltdl is in an
dnl eponymous directory:
AC_PROVIDE_IFELSE([LT_CONFIG_LTDL_DIR], [], [_LT_CONFIG_LTDL_DIR([libltdl])])

AC_ARG_WITH([ltdl_include],
    [AS_HELP_STRING([--with-ltdl-include=DIR],
                    [use the ltdl headers installed in DIR])])

if test -n "$with_ltdl_include"; then
  if test -f "$with_ltdl_include/ltdl.h"; then :
  else
    AC_MSG_ERROR([invalid ltdl include directory: `$with_ltdl_include'])
  fi
else
  with_ltdl_include=no
fi

AC_ARG_WITH([ltdl_lib],
    [AS_HELP_STRING([--with-ltdl-lib=DIR],
                    [use the libltdl.la installed in DIR])])

if test -n "$with_ltdl_lib"; then
  if test -f "$with_ltdl_lib/libltdl.la"; then :
  else
    AC_MSG_ERROR([invalid ltdl library directory: `$with_ltdl_lib'])
  fi
else
  with_ltdl_lib=no
fi

case ,$with_included_ltdl,$with_ltdl_include,$with_ltdl_lib, in
  ,yes,no,no,)
	m4_case(m4_default(_LTDL_TYPE, [convenience]),
	    [convenience], [_LTDL_CONVENIENCE],
	    [installable], [_LTDL_INSTALLABLE],
	  [m4_fatal([unknown libltdl build type: ]_LTDL_TYPE)])
	;;
  ,no,no,no,)
	# If the included ltdl is not to be used, then use the
	# preinstalled libltdl we found.
	AC_DEFINE([HAVE_LTDL], [1],
	  [Define this if a modern libltdl is already installed])
	LIBLTDL=-lltdl
	LTDLDEPS=
	LTDLINCL=
	;;
  ,no*,no,*)
	AC_MSG_ERROR([`--with-ltdl-include' and `--with-ltdl-lib' options must be used together])
	;;
  *)	with_included_ltdl=no
	LIBLTDL="-L$with_ltdl_lib -lltdl"
	LTDLDEPS=
	LTDLINCL="-I$with_ltdl_include"
	;;
esac
INCLTDL="$LTDLINCL"

# Report our decision...
AC_MSG_CHECKING([where to find libltdl headers])
AC_MSG_RESULT([$LTDLINCL])
AC_MSG_CHECKING([where to find libltdl library])
AC_MSG_RESULT([$LIBLTDL])

_LTDL_SETUP

dnl restore autoconf definition.
m4_popdef([AC_LIBOBJ])
m4_popdef([AC_LIBSOURCES])

AC_CONFIG_COMMANDS_PRE([
    _ltdl_libobjs=
    _ltdl_ltlibobjs=
    if test -n "$_LT_LIBOBJS"; then
      # Remove the extension.
      _lt_sed_drop_objext='s/\.o$//;s/\.obj$//'
      for i in `for i in $_LT_LIBOBJS; do echo "$i"; done | sed "$_lt_sed_drop_objext" | sort -u`; do
        _ltdl_libobjs="$_ltdl_libobjs $lt_libobj_prefix$i.$ac_objext"
        _ltdl_ltlibobjs="$_ltdl_ltlibobjs $lt_libobj_prefix$i.lo"
      done
    fi
    AC_SUBST([ltdl_LIBOBJS], [$_ltdl_libobjs])
    AC_SUBST([ltdl_LTLIBOBJS], [$_ltdl_ltlibobjs])
])

# Only expand once:
m4_define([LTDL_INIT])
])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AU_DEFUN([AC_LIB_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:352: -1- AC_DEFUN([AC_LIB_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIB_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AU_DEFUN([AC_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:353: -1- AC_DEFUN([AC_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `AC_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AU_DEFUN([LT_WITH_LTDL], [LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:354: -1- AC_DEFUN([LT_WITH_LTDL], [AC_DIAGNOSE([obsolete], [The macro `LT_WITH_LTDL' is obsolete.
You should run autoupdate.])dnl
LTDL_INIT($@)])
m4trace:/usr/share/aclocal/ltdl.m4:367: -1- AC_DEFUN([_LTDL_SETUP], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([LT_SYS_MODULE_EXT])dnl
AC_REQUIRE([LT_SYS_MODULE_PATH])dnl
AC_REQUIRE([LT_SYS_DLSEARCH_PATH])dnl
AC_REQUIRE([LT_LIB_DLLOAD])dnl
AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
AC_REQUIRE([LT_FUNC_DLSYM_USCORE])dnl
AC_REQUIRE([LT_SYS_DLOPEN_DEPLIBS])dnl
AC_REQUIRE([gl_FUNC_ARGZ])dnl

m4_require([_LT_CHECK_OBJDIR])dnl
m4_require([_LT_HEADER_DLFCN])dnl
m4_require([_LT_CHECK_DLPREOPEN])dnl
m4_require([_LT_DECL_SED])dnl

dnl Don't require this, or it will be expanded earlier than the code
dnl that sets the variables it relies on:
_LT_ENABLE_INSTALL

dnl _LTDL_MODE specific code must be called at least once:
_LTDL_MODE_DISPATCH

# In order that ltdl.c can compile, find out the first AC_CONFIG_HEADERS
# the user used.  This is so that ltdl.h can pick up the parent projects
# config.h file, The first file in AC_CONFIG_HEADERS must contain the
# definitions required by ltdl.c.
# FIXME: Remove use of undocumented AC_LIST_HEADERS (2.59 compatibility).
AC_CONFIG_COMMANDS_PRE([dnl
m4_pattern_allow([^LT_CONFIG_H$])dnl
m4_ifset([AH_HEADER],
    [LT_CONFIG_H=AH_HEADER],
    [m4_ifset([AC_LIST_HEADERS],
	    [LT_CONFIG_H=`echo "AC_LIST_HEADERS" | $SED 's,^[[      ]]*,,;s,[[ :]].*$,,'`],
	[])])])
AC_SUBST([LT_CONFIG_H])

AC_CHECK_HEADERS([unistd.h dl.h sys/dl.h dld.h mach-o/dyld.h dirent.h],
	[], [], [AC_INCLUDES_DEFAULT])

AC_CHECK_FUNCS([closedir opendir readdir], [], [AC_LIBOBJ([lt__dirent])])
AC_CHECK_FUNCS([strlcat strlcpy], [], [AC_LIBOBJ([lt__strl])])

AC_DEFINE_UNQUOTED([LT_LIBEXT],["$libext"],[The archive extension])

name=ltdl
LTDLOPEN=`eval "\\$ECHO \"$libname_spec\""`
AC_SUBST([LTDLOPEN])
])
m4trace:/usr/share/aclocal/ltdl.m4:437: -1- AC_DEFUN([LT_SYS_DLOPEN_DEPLIBS], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_CACHE_CHECK([whether deplibs are loaded by dlopen],
  [lt_cv_sys_dlopen_deplibs],
  [# PORTME does your system automatically load deplibs for dlopen?
  # or its logical equivalent (e.g. shl_load for HP-UX < 11)
  # For now, we just catch OSes we know something about -- in the
  # future, we'll try test this programmatically.
  lt_cv_sys_dlopen_deplibs=unknown
  case $host_os in
  aix3*|aix4.1.*|aix4.2.*)
    # Unknown whether this is true for these versions of AIX, but
    # we want this `case' here to explicitly catch those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  aix[[4-9]]*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  amigaos*)
    case $host_cpu in
    powerpc)
      lt_cv_sys_dlopen_deplibs=no
      ;;
    esac
    ;;
  darwin*)
    # Assuming the user has installed a libdl from somewhere, this is true
    # If you are looking for one http://www.opendarwin.org/projects/dlcompat
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  freebsd* | dragonfly*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  gnu* | linux* | k*bsd*-gnu)
    # GNU and its variants, using gnu ld.so (Glibc)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  hpux10*|hpux11*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  interix*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  irix[[12345]]*|irix6.[[01]]*)
    # Catch all versions of IRIX before 6.2, and indicate that we don't
    # know how it worked for any of those versions.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  irix*)
    # The case above catches anything before 6.2, and it's known that
    # at 6.2 and later dlopen does load deplibs.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  netbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  openbsd*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  osf[[1234]]*)
    # dlopen did load deplibs (at least at 4.x), but until the 5.x series,
    # it did *not* use an RPATH in a shared library to find objects the
    # library depends on, so we explicitly say `no'.
    lt_cv_sys_dlopen_deplibs=no
    ;;
  osf5.0|osf5.0a|osf5.1)
    # dlopen *does* load deplibs and with the right loader patch applied
    # it even uses RPATH in a shared library to search for shared objects
    # that the library depends on, but there's no easy way to know if that
    # patch is installed.  Since this is the case, all we can really
    # say is unknown -- it depends on the patch being installed.  If
    # it is, this changes to `yes'.  Without it, it would be `no'.
    lt_cv_sys_dlopen_deplibs=unknown
    ;;
  osf*)
    # the two cases above should catch all versions of osf <= 5.1.  Read
    # the comments above for what we know about them.
    # At > 5.1, deplibs are loaded *and* any RPATH in a shared library
    # is used to find them so we can finally say `yes'.
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  qnx*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  solaris*)
    lt_cv_sys_dlopen_deplibs=yes
    ;;
  sysv5* | sco3.2v5* | sco5v6* | unixware* | OpenUNIX* | sysv4*uw2*)
    libltdl_cv_sys_dlopen_deplibs=yes
    ;;
  esac
  ])
if test "$lt_cv_sys_dlopen_deplibs" != yes; then
 AC_DEFINE([LTDL_DLOPEN_DEPLIBS], [1],
    [Define if the OS needs help to load dependent libraries for dlopen().])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:536: -1- AU_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:536: -1- AC_DEFUN([AC_LTDL_SYS_DLOPEN_DEPLIBS], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYS_DLOPEN_DEPLIBS' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_DEPLIBS], [LT_SYS_DLOPEN_DEPLIBS($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:543: -1- AC_DEFUN([LT_SYS_MODULE_EXT], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([which extension is used for runtime loadable modules],
  [libltdl_cv_shlibext],
[
module=yes
eval libltdl_cv_shlibext=$shrext_cmds
  ])
if test -n "$libltdl_cv_shlibext"; then
  m4_pattern_allow([LT_MODULE_EXT])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_EXT], ["$libltdl_cv_shlibext"],
    [Define to the extension used for runtime loadable modules, say, ".so".])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:559: -1- AU_DEFUN([AC_LTDL_SHLIBEXT], [m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:559: -1- AC_DEFUN([AC_LTDL_SHLIBEXT], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBEXT' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_EXT], [LT_SYS_MODULE_EXT($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:566: -1- AC_DEFUN([LT_SYS_MODULE_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([which variable specifies run-time module search path],
  [lt_cv_module_path_var], [lt_cv_module_path_var="$shlibpath_var"])
if test -n "$lt_cv_module_path_var"; then
  m4_pattern_allow([LT_MODULE_PATH_VAR])dnl
  AC_DEFINE_UNQUOTED([LT_MODULE_PATH_VAR], ["$lt_cv_module_path_var"],
    [Define to the name of the environment variable that determines the run-time module search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:578: -1- AU_DEFUN([AC_LTDL_SHLIBPATH], [m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:578: -1- AC_DEFUN([AC_LTDL_SHLIBPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SHLIBPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_MODULE_PATH], [LT_SYS_MODULE_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:585: -1- AC_DEFUN([LT_SYS_DLSEARCH_PATH], [m4_require([_LT_SYS_DYNAMIC_LINKER])dnl
AC_CACHE_CHECK([for the default library search path],
  [lt_cv_sys_dlsearch_path],
  [lt_cv_sys_dlsearch_path="$sys_lib_dlsearch_path_spec"])
if test -n "$lt_cv_sys_dlsearch_path"; then
  sys_dlsearch_path=
  for dir in $lt_cv_sys_dlsearch_path; do
    if test -z "$sys_dlsearch_path"; then
      sys_dlsearch_path="$dir"
    else
      sys_dlsearch_path="$sys_dlsearch_path$PATH_SEPARATOR$dir"
    fi
  done
  m4_pattern_allow([LT_DLSEARCH_PATH])dnl
  AC_DEFINE_UNQUOTED([LT_DLSEARCH_PATH], ["$sys_dlsearch_path"],
    [Define to the system default library search path.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:606: -1- AU_DEFUN([AC_LTDL_SYSSEARCHPATH], [m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:606: -1- AC_DEFUN([AC_LTDL_SYSSEARCHPATH], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYSSEARCHPATH' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLSEARCH_PATH], [LT_SYS_DLSEARCH_PATH($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:632: -1- AC_DEFUN([LT_LIB_DLLOAD], [m4_pattern_allow([^LT_DLLOADERS$])
LT_DLLOADERS=
AC_SUBST([LT_DLLOADERS])

AC_LANG_PUSH([C])

LIBADD_DLOPEN=
AC_SEARCH_LIBS([dlopen], [dl],
	[AC_DEFINE([HAVE_LIBDL], [1],
		   [Define if you have the libdl library or equivalent.])
	if test "$ac_cv_search_dlopen" != "none required" ; then
	  LIBADD_DLOPEN="-ldl"
	fi
	libltdl_cv_lib_dl_dlopen="yes"
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
    [AC_LINK_IFELSE([AC_LANG_PROGRAM([[#if HAVE_DLFCN_H
#  include <dlfcn.h>
#endif
    ]], [[dlopen(0, 0);]])],
	    [AC_DEFINE([HAVE_LIBDL], [1],
		       [Define if you have the libdl library or equivalent.])
	    libltdl_cv_func_dlopen="yes"
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"],
	[AC_CHECK_LIB([svld], [dlopen],
		[AC_DEFINE([HAVE_LIBDL], [1],
			 [Define if you have the libdl library or equivalent.])
	        LIBADD_DLOPEN="-lsvld" libltdl_cv_func_dlopen="yes"
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dlopen.la"])])])
if test x"$libltdl_cv_func_dlopen" = xyes || test x"$libltdl_cv_lib_dl_dlopen" = xyes
then
  lt_save_LIBS="$LIBS"
  LIBS="$LIBS $LIBADD_DLOPEN"
  AC_CHECK_FUNCS([dlerror])
  LIBS="$lt_save_LIBS"
fi
AC_SUBST([LIBADD_DLOPEN])

LIBADD_SHL_LOAD=
AC_CHECK_FUNC([shl_load],
	[AC_DEFINE([HAVE_SHL_LOAD], [1],
		   [Define if you have the shl_load function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"],
    [AC_CHECK_LIB([dld], [shl_load],
	    [AC_DEFINE([HAVE_SHL_LOAD], [1],
		       [Define if you have the shl_load function.])
	    LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}shl_load.la"
	    LIBADD_SHL_LOAD="-ldld"])])
AC_SUBST([LIBADD_SHL_LOAD])

case $host_os in
darwin[[1567]].*)
# We only want this for pre-Mac OS X 10.4.
  AC_CHECK_FUNC([_dyld_func_lookup],
	[AC_DEFINE([HAVE_DYLD], [1],
		   [Define if you have the _dyld_func_lookup function.])
	LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dyld.la"])
  ;;
beos*)
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}load_add_on.la"
  ;;
cygwin* | mingw* | os2* | pw32*)
  AC_CHECK_DECLS([cygwin_conv_path], [], [], [[#include <sys/cygwin.h>]])
  LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}loadlibrary.la"
  ;;
esac

AC_CHECK_LIB([dld], [dld_link],
	[AC_DEFINE([HAVE_DLD], [1],
		   [Define if you have the GNU dld library.])
		LT_DLLOADERS="$LT_DLLOADERS ${lt_dlopen_dir+$lt_dlopen_dir/}dld_link.la"])
AC_SUBST([LIBADD_DLD_LINK])

m4_pattern_allow([^LT_DLPREOPEN$])
LT_DLPREOPEN=
if test -n "$LT_DLLOADERS"
then
  for lt_loader in $LT_DLLOADERS; do
    LT_DLPREOPEN="$LT_DLPREOPEN-dlpreopen $lt_loader "
  done
  AC_DEFINE([HAVE_LIBDLLOADER], [1],
            [Define if libdlloader will be built on this platform])
fi
AC_SUBST([LT_DLPREOPEN])

dnl This isn't used anymore, but set it for backwards compatibility
LIBADD_DL="$LIBADD_DLOPEN $LIBADD_SHL_LOAD"
AC_SUBST([LIBADD_DL])

AC_LANG_POP
])
m4trace:/usr/share/aclocal/ltdl.m4:725: -1- AU_DEFUN([AC_LTDL_DLLIB], [m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:725: -1- AC_DEFUN([AC_LTDL_DLLIB], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLLIB' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_DLLOAD], [LT_LIB_DLLOAD($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:733: -1- AC_DEFUN([LT_SYS_SYMBOL_USCORE], [m4_require([_LT_CMD_GLOBAL_SYMBOLS])dnl
AC_CACHE_CHECK([for _ prefix in compiled symbols],
  [lt_cv_sys_symbol_underscore],
  [lt_cv_sys_symbol_underscore=no
  cat > conftest.$ac_ext <<_LT_EOF
void nm_test_func(){}
int main(){nm_test_func;return 0;}
_LT_EOF
  if AC_TRY_EVAL(ac_compile); then
    # Now try to grab the symbols.
    ac_nlist=conftest.nm
    if AC_TRY_EVAL(NM conftest.$ac_objext \| $lt_cv_sys_global_symbol_pipe \> $ac_nlist) && test -s "$ac_nlist"; then
      # See whether the symbols have a leading underscore.
      if grep '^. _nm_test_func' "$ac_nlist" >/dev/null; then
        lt_cv_sys_symbol_underscore=yes
      else
        if grep '^. nm_test_func ' "$ac_nlist" >/dev/null; then
	  :
        else
	  echo "configure: cannot find nm_test_func in $ac_nlist" >&AS_MESSAGE_LOG_FD
        fi
      fi
    else
      echo "configure: cannot run $lt_cv_sys_global_symbol_pipe" >&AS_MESSAGE_LOG_FD
    fi
  else
    echo "configure: failed program was:" >&AS_MESSAGE_LOG_FD
    cat conftest.c >&AS_MESSAGE_LOG_FD
  fi
  rm -rf conftest*
  ])
  sys_symbol_underscore=$lt_cv_sys_symbol_underscore
  AC_SUBST([sys_symbol_underscore])
])
m4trace:/usr/share/aclocal/ltdl.m4:770: -1- AU_DEFUN([AC_LTDL_SYMBOL_USCORE], [m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:770: -1- AC_DEFUN([AC_LTDL_SYMBOL_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_SYMBOL_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_SYMBOL_USCORE], [LT_SYS_SYMBOL_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:777: -1- AC_DEFUN([LT_FUNC_DLSYM_USCORE], [AC_REQUIRE([LT_SYS_SYMBOL_USCORE])dnl
if test x"$lt_cv_sys_symbol_underscore" = xyes; then
  if test x"$libltdl_cv_func_dlopen" = xyes ||
     test x"$libltdl_cv_lib_dl_dlopen" = xyes ; then
	AC_CACHE_CHECK([whether we have to add an underscore for dlsym],
	  [libltdl_cv_need_uscore],
	  [libltdl_cv_need_uscore=unknown
          save_LIBS="$LIBS"
          LIBS="$LIBS $LIBADD_DLOPEN"
	  _LT_TRY_DLOPEN_SELF(
	    [libltdl_cv_need_uscore=no], [libltdl_cv_need_uscore=yes],
	    [],				 [libltdl_cv_need_uscore=cross])
	  LIBS="$save_LIBS"
	])
  fi
fi

if test x"$libltdl_cv_need_uscore" = xyes; then
  AC_DEFINE([NEED_USCORE], [1],
    [Define if dlsym() requires a leading underscore in symbol names.])
fi
])
m4trace:/usr/share/aclocal/ltdl.m4:802: -1- AU_DEFUN([AC_LTDL_DLSYM_USCORE], [m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal/ltdl.m4:802: -1- AC_DEFUN([AC_LTDL_DLSYM_USCORE], [AC_DIAGNOSE([obsolete], [The macro `AC_LTDL_DLSYM_USCORE' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_FUNC_DLSYM_USCORE], [LT_FUNC_DLSYM_USCORE($@)])])
m4trace:/usr/share/aclocal-1.11/amversion.m4:14: -1- AC_DEFUN([AM_AUTOMAKE_VERSION], [am__api_version='1.11'
dnl Some users find AM_AUTOMAKE_VERSION and mistake it for a way to
dnl require some minimum version.  Point them to the right macro.
m4_if([$1], [1.11.1], [],
      [AC_FATAL([Do not call $0, use AM_INIT_AUTOMAKE([$1]).])])dnl
])
m4trace:/usr/share/aclocal-1.11/amversion.m4:33: -1- AC_DEFUN([AM_SET_CURRENT_AUTOMAKE_VERSION], [AM_AUTOMAKE_VERSION([1.11.1])dnl
m4_ifndef([AC_AUTOCONF_VERSION],
  [m4_copy([m4_PACKAGE_VERSION], [AC_AUTOCONF_VERSION])])dnl
_AM_AUTOCONF_VERSION(m4_defn([AC_AUTOCONF_VERSION]))])
m4trace:/usr/share/aclocal-1.11/as.m4:13: -1- AC_DEFUN([AM_PROG_AS], [# By default we simply use the C compiler to build assembly code.
AC_REQUIRE([AC_PROG_CC])
test "${CCAS+set}" = set || CCAS=$CC
test "${CCASFLAGS+set}" = set || CCASFLAGS=$CFLAGS
AC_ARG_VAR([CCAS],      [assembler compiler command (defaults to CC)])
AC_ARG_VAR([CCASFLAGS], [assembler compiler flags (defaults to CFLAGS)])
_AM_IF_OPTION([no-dependencies],, [_AM_DEPENDENCIES([CCAS])])dnl
])
m4trace:/usr/share/aclocal-1.11/auxdir.m4:47: -1- AC_DEFUN([AM_AUX_DIR_EXPAND], [dnl Rely on autoconf to set up CDPATH properly.
AC_PREREQ([2.50])dnl
# expand $ac_aux_dir to an absolute path
am_aux_dir=`cd $ac_aux_dir && pwd`
])
m4trace:/usr/share/aclocal-1.11/cond.m4:15: -1- AC_DEFUN([AM_CONDITIONAL], [AC_PREREQ(2.52)dnl
 ifelse([$1], [TRUE],  [AC_FATAL([$0: invalid condition: $1])],
	[$1], [FALSE], [AC_FATAL([$0: invalid condition: $1])])dnl
AC_SUBST([$1_TRUE])dnl
AC_SUBST([$1_FALSE])dnl
_AM_SUBST_NOTMAKE([$1_TRUE])dnl
_AM_SUBST_NOTMAKE([$1_FALSE])dnl
m4_define([_AM_COND_VALUE_$1], [$2])dnl
if $2; then
  $1_TRUE=
  $1_FALSE='#'
else
  $1_TRUE='#'
  $1_FALSE=
fi
AC_CONFIG_COMMANDS_PRE(
[if test -z "${$1_TRUE}" && test -z "${$1_FALSE}"; then
  AC_MSG_ERROR([[conditional "$1" was never defined.
Usually this means the macro was only invoked conditionally.]])
fi])])
m4trace:/usr/share/aclocal-1.11/depend.m4:28: -1- AC_DEFUN([_AM_DEPENDENCIES], [AC_REQUIRE([AM_SET_DEPDIR])dnl
AC_REQUIRE([AM_OUTPUT_DEPENDENCY_COMMANDS])dnl
AC_REQUIRE([AM_MAKE_INCLUDE])dnl
AC_REQUIRE([AM_DEP_TRACK])dnl

ifelse([$1], CC,   [depcc="$CC"   am_compiler_list=],
       [$1], CXX,  [depcc="$CXX"  am_compiler_list=],
       [$1], OBJC, [depcc="$OBJC" am_compiler_list='gcc3 gcc'],
       [$1], UPC,  [depcc="$UPC"  am_compiler_list=],
       [$1], GCJ,  [depcc="$GCJ"  am_compiler_list='gcc3 gcc'],
                   [depcc="$$1"   am_compiler_list=])

AC_CACHE_CHECK([dependency style of $depcc],
               [am_cv_$1_dependencies_compiler_type],
[if test -z "$AMDEP_TRUE" && test -f "$am_depcomp"; then
  # We make a subdir and do the tests there.  Otherwise we can end up
  # making bogus files that we don't know about and never remove.  For
  # instance it was reported that on HP-UX the gcc test will end up
  # making a dummy file named `D' -- because `-MD' means `put the output
  # in D'.
  mkdir conftest.dir
  # Copy depcomp to subdir because otherwise we won't find it if we're
  # using a relative directory.
  cp "$am_depcomp" conftest.dir
  cd conftest.dir
  # We will build objects and dependencies in a subdirectory because
  # it helps to detect inapplicable dependency modes.  For instance
  # both Tru64's cc and ICC support -MD to output dependencies as a
  # side effect of compilation, but ICC will put the dependencies in
  # the current directory while Tru64 will put them in the object
  # directory.
  mkdir sub

  am_cv_$1_dependencies_compiler_type=none
  if test "$am_compiler_list" = ""; then
     am_compiler_list=`sed -n ['s/^#*\([a-zA-Z0-9]*\))$/\1/p'] < ./depcomp`
  fi
  am__universal=false
  m4_case([$1], [CC],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac],
    [CXX],
    [case " $depcc " in #(
     *\ -arch\ *\ -arch\ *) am__universal=true ;;
     esac])

  for depmode in $am_compiler_list; do
    # Setup a source with many dependencies, because some compilers
    # like to wrap large dependency lists on column 80 (with \), and
    # we should not choose a depcomp mode which is confused by this.
    #
    # We need to recreate these files for each test, as the compiler may
    # overwrite some of them when testing with obscure command lines.
    # This happens at least with the AIX C compiler.
    : > sub/conftest.c
    for i in 1 2 3 4 5 6; do
      echo '#include "conftst'$i'.h"' >> sub/conftest.c
      # Using `: > sub/conftst$i.h' creates only sub/conftst1.h with
      # Solaris 8's {/usr,}/bin/sh.
      touch sub/conftst$i.h
    done
    echo "${am__include} ${am__quote}sub/conftest.Po${am__quote}" > confmf

    # We check with `-c' and `-o' for the sake of the "dashmstdout"
    # mode.  It turns out that the SunPro C++ compiler does not properly
    # handle `-M -o', and we need to detect this.  Also, some Intel
    # versions had trouble with output in subdirs
    am__obj=sub/conftest.${OBJEXT-o}
    am__minus_obj="-o $am__obj"
    case $depmode in
    gcc)
      # This depmode causes a compiler race in universal mode.
      test "$am__universal" = false || continue
      ;;
    nosideeffect)
      # after this tag, mechanisms are not by side-effect, so they'll
      # only be used when explicitly requested
      if test "x$enable_dependency_tracking" = xyes; then
	continue
      else
	break
      fi
      ;;
    msvisualcpp | msvcmsys)
      # This compiler won't grok `-c -o', but also, the minuso test has
      # not run yet.  These depmodes are late enough in the game, and
      # so weak that their functioning should not be impacted.
      am__obj=conftest.${OBJEXT-o}
      am__minus_obj=
      ;;
    none) break ;;
    esac
    if depmode=$depmode \
       source=sub/conftest.c object=$am__obj \
       depfile=sub/conftest.Po tmpdepfile=sub/conftest.TPo \
       $SHELL ./depcomp $depcc -c $am__minus_obj sub/conftest.c \
         >/dev/null 2>conftest.err &&
       grep sub/conftst1.h sub/conftest.Po > /dev/null 2>&1 &&
       grep sub/conftst6.h sub/conftest.Po > /dev/null 2>&1 &&
       grep $am__obj sub/conftest.Po > /dev/null 2>&1 &&
       ${MAKE-make} -s -f confmf > /dev/null 2>&1; then
      # icc doesn't choke on unknown options, it will just issue warnings
      # or remarks (even with -Werror).  So we grep stderr for any message
      # that says an option was ignored or not supported.
      # When given -MP, icc 7.0 and 7.1 complain thusly:
      #   icc: Command line warning: ignoring option '-M'; no argument required
      # The diagnosis changed in icc 8.0:
      #   icc: Command line remark: option '-MP' not supported
      if (grep 'ignoring option' conftest.err ||
          grep 'not supported' conftest.err) >/dev/null 2>&1; then :; else
        am_cv_$1_dependencies_compiler_type=$depmode
        break
      fi
    fi
  done

  cd ..
  rm -rf conftest.dir
else
  am_cv_$1_dependencies_compiler_type=none
fi
])
AC_SUBST([$1DEPMODE], [depmode=$am_cv_$1_dependencies_compiler_type])
AM_CONDITIONAL([am__fastdep$1], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_$1_dependencies_compiler_type" = gcc3])
])
m4trace:/usr/share/aclocal-1.11/depend.m4:163: -1- AC_DEFUN([AM_SET_DEPDIR], [AC_REQUIRE([AM_SET_LEADING_DOT])dnl
AC_SUBST([DEPDIR], ["${am__leading_dot}deps"])dnl
])
m4trace:/usr/share/aclocal-1.11/depend.m4:171: -1- AC_DEFUN([AM_DEP_TRACK], [AC_ARG_ENABLE(dependency-tracking,
[  --disable-dependency-tracking  speeds up one-time build
  --enable-dependency-tracking   do not reject slow dependency extractors])
if test "x$enable_dependency_tracking" != xno; then
  am_depcomp="$ac_aux_dir/depcomp"
  AMDEPBACKSLASH='\'
fi
AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
AC_SUBST([AMDEPBACKSLASH])dnl
_AM_SUBST_NOTMAKE([AMDEPBACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/depout.m4:14: -1- AC_DEFUN([_AM_OUTPUT_DEPENDENCY_COMMANDS], [{
  # Autoconf 2.62 quotes --file arguments for eval, but not when files
  # are listed without --file.  Let's play safe and only enable the eval
  # if we detect the quoting.
  case $CONFIG_FILES in
  *\'*) eval set x "$CONFIG_FILES" ;;
  *)   set x $CONFIG_FILES ;;
  esac
  shift
  for mf
  do
    # Strip MF so we end up with the name of the file.
    mf=`echo "$mf" | sed -e 's/:.*$//'`
    # Check whether this is an Automake generated Makefile or not.
    # We used to match only the files named `Makefile.in', but
    # some people rename them; so instead we look at the file content.
    # Grep'ing the first line is not enough: some people post-process
    # each Makefile.in and add a new line on top of each file to say so.
    # Grep'ing the whole file is not good either: AIX grep has a line
    # limit of 2048, but all sed's we know have understand at least 4000.
    if sed -n 's,^#.*generated by automake.*,X,p' "$mf" | grep X >/dev/null 2>&1; then
      dirpart=`AS_DIRNAME("$mf")`
    else
      continue
    fi
    # Extract the definition of DEPDIR, am__include, and am__quote
    # from the Makefile without running `make'.
    DEPDIR=`sed -n 's/^DEPDIR = //p' < "$mf"`
    test -z "$DEPDIR" && continue
    am__include=`sed -n 's/^am__include = //p' < "$mf"`
    test -z "am__include" && continue
    am__quote=`sed -n 's/^am__quote = //p' < "$mf"`
    # When using ansi2knr, U may be empty or an underscore; expand it
    U=`sed -n 's/^U = //p' < "$mf"`
    # Find all dependency output files, they are included files with
    # $(DEPDIR) in their names.  We invoke sed twice because it is the
    # simplest approach to changing $(DEPDIR) to its actual value in the
    # expansion.
    for file in `sed -n "
      s/^$am__include $am__quote\(.*(DEPDIR).*\)$am__quote"'$/\1/p' <"$mf" | \
	 sed -e 's/\$(DEPDIR)/'"$DEPDIR"'/g' -e 's/\$U/'"$U"'/g'`; do
      # Make sure the directory exists.
      test -f "$dirpart/$file" && continue
      fdir=`AS_DIRNAME(["$file"])`
      AS_MKDIR_P([$dirpart/$fdir])
      # echo "creating $dirpart/$file"
      echo '# dummy' > "$dirpart/$file"
    done
  done
}
])
m4trace:/usr/share/aclocal-1.11/depout.m4:75: -1- AC_DEFUN([AM_OUTPUT_DEPENDENCY_COMMANDS], [AC_CONFIG_COMMANDS([depfiles],
     [test x"$AMDEP_TRUE" != x"" || _AM_OUTPUT_DEPENDENCY_COMMANDS],
     [AMDEP_TRUE="$AMDEP_TRUE" ac_aux_dir="$ac_aux_dir"])
])
m4trace:/usr/share/aclocal-1.11/init.m4:26: -1- AC_DEFUN([AM_INIT_AUTOMAKE], [AC_PREREQ([2.62])dnl
dnl Autoconf wants to disallow AM_ names.  We explicitly allow
dnl the ones we care about.
m4_pattern_allow([^AM_[A-Z]+FLAGS$])dnl
AC_REQUIRE([AM_SET_CURRENT_AUTOMAKE_VERSION])dnl
AC_REQUIRE([AC_PROG_INSTALL])dnl
if test "`cd $srcdir && pwd`" != "`pwd`"; then
  # Use -I$(srcdir) only when $(srcdir) != ., so that make's output
  # is not polluted with repeated "-I."
  AC_SUBST([am__isrc], [' -I$(srcdir)'])_AM_SUBST_NOTMAKE([am__isrc])dnl
  # test to see if srcdir already configured
  if test -f $srcdir/config.status; then
    AC_MSG_ERROR([source directory already configured; run "make distclean" there first])
  fi
fi

# test whether we have cygpath
if test -z "$CYGPATH_W"; then
  if (cygpath --version) >/dev/null 2>/dev/null; then
    CYGPATH_W='cygpath -w'
  else
    CYGPATH_W=echo
  fi
fi
AC_SUBST([CYGPATH_W])

# Define the identity of the package.
dnl Distinguish between old-style and new-style calls.
m4_ifval([$2],
[m4_ifval([$3], [_AM_SET_OPTION([no-define])])dnl
 AC_SUBST([PACKAGE], [$1])dnl
 AC_SUBST([VERSION], [$2])],
[_AM_SET_OPTIONS([$1])dnl
dnl Diagnose old-style AC_INIT with new-style AM_AUTOMAKE_INIT.
m4_if(m4_ifdef([AC_PACKAGE_NAME], 1)m4_ifdef([AC_PACKAGE_VERSION], 1), 11,,
  [m4_fatal([AC_INIT should be called with package and version arguments])])dnl
 AC_SUBST([PACKAGE], ['AC_PACKAGE_TARNAME'])dnl
 AC_SUBST([VERSION], ['AC_PACKAGE_VERSION'])])dnl

_AM_IF_OPTION([no-define],,
[AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])dnl

# Some tools Automake needs.
AC_REQUIRE([AM_SANITY_CHECK])dnl
AC_REQUIRE([AC_ARG_PROGRAM])dnl
AM_MISSING_PROG(ACLOCAL, aclocal-${am__api_version})
AM_MISSING_PROG(AUTOCONF, autoconf)
AM_MISSING_PROG(AUTOMAKE, automake-${am__api_version})
AM_MISSING_PROG(AUTOHEADER, autoheader)
AM_MISSING_PROG(MAKEINFO, makeinfo)
AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
AC_REQUIRE([AM_PROG_INSTALL_STRIP])dnl
AC_REQUIRE([AM_PROG_MKDIR_P])dnl
# We need awk for the "check" target.  The system "awk" is bad on
# some platforms.
AC_REQUIRE([AC_PROG_AWK])dnl
AC_REQUIRE([AC_PROG_MAKE_SET])dnl
AC_REQUIRE([AM_SET_LEADING_DOT])dnl
_AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])],
	      [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
_AM_IF_OPTION([no-dependencies],,
[AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
_AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])dnl
dnl The `parallel-tests' driver may need to know about EXEEXT, so add the
dnl `am__EXEEXT' conditional if _AM_COMPILER_EXEEXT was seen.  This macro
dnl is hooked onto _AC_COMPILER_EXEEXT early, see below.
AC_CONFIG_COMMANDS_PRE(dnl
[m4_provide_if([_AM_COMPILER_EXEEXT],
  [AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])])])dnl
])
m4trace:/usr/share/aclocal-1.11/init.m4:126: -1- AC_DEFUN([_AC_AM_CONFIG_HEADER_HOOK], [# Compute $1's index in $config_headers.
_am_arg=$1
_am_stamp_count=1
for _am_header in $config_headers :; do
  case $_am_header in
    $_am_arg | $_am_arg:* )
      break ;;
    * )
      _am_stamp_count=`expr $_am_stamp_count + 1` ;;
  esac
done
echo "timestamp for $_am_arg" >`AS_DIRNAME(["$_am_arg"])`/stamp-h[]$_am_stamp_count])
m4trace:/usr/share/aclocal-1.11/install-sh.m4:11: -1- AC_DEFUN([AM_PROG_INSTALL_SH], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
if test x"${install_sh}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    install_sh="\${SHELL} '$am_aux_dir/install-sh'" ;;
  *)
    install_sh="\${SHELL} $am_aux_dir/install-sh"
  esac
fi
AC_SUBST(install_sh)])
m4trace:/usr/share/aclocal-1.11/lead-dot.m4:12: -1- AC_DEFUN([AM_SET_LEADING_DOT], [rm -rf .tst 2>/dev/null
mkdir .tst 2>/dev/null
if test -d .tst; then
  am__leading_dot=.
else
  am__leading_dot=_
fi
rmdir .tst 2>/dev/null
AC_SUBST([am__leading_dot])])
m4trace:/usr/share/aclocal-1.11/maintainer.m4:19: -1- AC_DEFUN([AM_MAINTAINER_MODE], [m4_case(m4_default([$1], [disable]),
       [enable], [m4_define([am_maintainer_other], [disable])],
       [disable], [m4_define([am_maintainer_other], [enable])],
       [m4_define([am_maintainer_other], [enable])
        m4_warn([syntax], [unexpected argument to AM@&t@_MAINTAINER_MODE: $1])])
AC_MSG_CHECKING([whether to am_maintainer_other maintainer-specific portions of Makefiles])
  dnl maintainer-mode's default is 'disable' unless 'enable' is passed
  AC_ARG_ENABLE([maintainer-mode],
[  --][am_maintainer_other][-maintainer-mode  am_maintainer_other make rules and dependencies not useful
			  (and sometimes confusing) to the casual installer],
      [USE_MAINTAINER_MODE=$enableval],
      [USE_MAINTAINER_MODE=]m4_if(am_maintainer_other, [enable], [no], [yes]))
  AC_MSG_RESULT([$USE_MAINTAINER_MODE])
  AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
  MAINT=$MAINTAINER_MODE_TRUE
  AC_SUBST([MAINT])dnl

])
m4trace:/usr/share/aclocal-1.11/maintainer.m4:39: -1- AU_DEFUN([jm_MAINTAINER_MODE], [AM_MAINTAINER_MODE])
m4trace:/usr/share/aclocal-1.11/maintainer.m4:39: -1- AC_DEFUN([jm_MAINTAINER_MODE], [AC_DIAGNOSE([obsolete], [The macro `jm_MAINTAINER_MODE' is obsolete.
You should run autoupdate.])dnl
AM_MAINTAINER_MODE])
m4trace:/usr/share/aclocal-1.11/make.m4:14: -1- AC_DEFUN([AM_MAKE_INCLUDE], [am_make=${MAKE-make}
cat > confinc << 'END'
am__doit:
	@echo this is the am__doit target
.PHONY: am__doit
END
# If we don't find an include directive, just comment out the code.
AC_MSG_CHECKING([for style of include used by $am_make])
am__include="#"
am__quote=
_am_result=none
# First try GNU make style include.
echo "include confinc" > confmf
# Ignore all kinds of additional output from `make'.
case `$am_make -s -f confmf 2> /dev/null` in #(
*the\ am__doit\ target*)
  am__include=include
  am__quote=
  _am_result=GNU
  ;;
esac
# Now try BSD make style include.
if test "$am__include" = "#"; then
   echo '.include "confinc"' > confmf
   case `$am_make -s -f confmf 2> /dev/null` in #(
   *the\ am__doit\ target*)
     am__include=.include
     am__quote="\""
     _am_result=BSD
     ;;
   esac
fi
AC_SUBST([am__include])
AC_SUBST([am__quote])
AC_MSG_RESULT([$_am_result])
rm -f confinc confmf
])
m4trace:/usr/share/aclocal-1.11/missing.m4:14: -1- AC_DEFUN([AM_MISSING_PROG], [AC_REQUIRE([AM_MISSING_HAS_RUN])
$1=${$1-"${am_missing_run}$2"}
AC_SUBST($1)])
m4trace:/usr/share/aclocal-1.11/missing.m4:24: -1- AC_DEFUN([AM_MISSING_HAS_RUN], [AC_REQUIRE([AM_AUX_DIR_EXPAND])dnl
AC_REQUIRE_AUX_FILE([missing])dnl
if test x"${MISSING+set}" != xset; then
  case $am_aux_dir in
  *\ * | *\	*)
    MISSING="\${SHELL} \"$am_aux_dir/missing\"" ;;
  *)
    MISSING="\${SHELL} $am_aux_dir/missing" ;;
  esac
fi
# Use eval to expand $SHELL
if eval "$MISSING --run true"; then
  am_missing_run="$MISSING --run "
else
  am_missing_run=
  AC_MSG_WARN([`missing' script is too old or missing])
fi
])
m4trace:/usr/share/aclocal-1.11/mkdirp.m4:11: -1- AC_DEFUN([AM_PROG_MKDIR_P], [AC_PREREQ([2.60])dnl
AC_REQUIRE([AC_PROG_MKDIR_P])dnl
dnl Automake 1.8 to 1.9.6 used to define mkdir_p.  We now use MKDIR_P,
dnl while keeping a definition of mkdir_p for backward compatibility.
dnl @MKDIR_P@ is magic: AC_OUTPUT adjusts its value for each Makefile.
dnl However we cannot define mkdir_p as $(MKDIR_P) for the sake of
dnl Makefile.ins that do not define MKDIR_P, so we do our own
dnl adjustment using top_builddir (which is defined more often than
dnl MKDIR_P).
AC_SUBST([mkdir_p], ["$MKDIR_P"])dnl
case $mkdir_p in
  [[\\/$]]* | ?:[[\\/]]*) ;;
  */*) mkdir_p="\$(top_builddir)/$mkdir_p" ;;
esac
])
m4trace:/usr/share/aclocal-1.11/options.m4:13: -1- AC_DEFUN([_AM_MANGLE_OPTION], [[_AM_OPTION_]m4_bpatsubst($1, [[^a-zA-Z0-9_]], [_])])
m4trace:/usr/share/aclocal-1.11/options.m4:19: -1- AC_DEFUN([_AM_SET_OPTION], [m4_define(_AM_MANGLE_OPTION([$1]), 1)])
m4trace:/usr/share/aclocal-1.11/options.m4:25: -1- AC_DEFUN([_AM_SET_OPTIONS], [m4_foreach_w([_AM_Option], [$1], [_AM_SET_OPTION(_AM_Option)])])
m4trace:/usr/share/aclocal-1.11/options.m4:31: -1- AC_DEFUN([_AM_IF_OPTION], [m4_ifset(_AM_MANGLE_OPTION([$1]), [$2], [$3])])
m4trace:/usr/share/aclocal-1.11/runlog.m4:12: -1- AC_DEFUN([AM_RUN_LOG], [{ echo "$as_me:$LINENO: $1" >&AS_MESSAGE_LOG_FD
   ($1) >&AS_MESSAGE_LOG_FD 2>&AS_MESSAGE_LOG_FD
   ac_status=$?
   echo "$as_me:$LINENO: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   (exit $ac_status); }])
m4trace:/usr/share/aclocal-1.11/sanity.m4:14: -1- AC_DEFUN([AM_SANITY_CHECK], [AC_MSG_CHECKING([whether build environment is sane])
# Just in case
sleep 1
echo timestamp > conftest.file
# Reject unsafe characters in $srcdir or the absolute working directory
# name.  Accept space and tab only in the latter.
am_lf='
'
case `pwd` in
  *[[\\\"\#\$\&\'\`$am_lf]]*)
    AC_MSG_ERROR([unsafe absolute working directory name]);;
esac
case $srcdir in
  *[[\\\"\#\$\&\'\`$am_lf\ \	]]*)
    AC_MSG_ERROR([unsafe srcdir value: `$srcdir']);;
esac

# Do `set' in a subshell so we don't clobber the current shell's
# arguments.  Must try -L first in case configure is actually a
# symlink; some systems play weird games with the mod time of symlinks
# (eg FreeBSD returns the mod time of the symlink's containing
# directory).
if (
   set X `ls -Lt "$srcdir/configure" conftest.file 2> /dev/null`
   if test "$[*]" = "X"; then
      # -L didn't work.
      set X `ls -t "$srcdir/configure" conftest.file`
   fi
   rm -f conftest.file
   if test "$[*]" != "X $srcdir/configure conftest.file" \
      && test "$[*]" != "X conftest.file $srcdir/configure"; then

      # If neither matched, then we have a broken ls.  This can happen
      # if, for instance, CONFIG_SHELL is bash and it inherits a
      # broken ls alias from the environment.  This has actually
      # happened.  Such a system could not be considered "sane".
      AC_MSG_ERROR([ls -t appears to fail.  Make sure there is not a broken
alias in your environment])
   fi

   test "$[2]" = conftest.file
   )
then
   # Ok.
   :
else
   AC_MSG_ERROR([newly created file is older than distributed files!
Check your system clock])
fi
AC_MSG_RESULT(yes)])
m4trace:/usr/share/aclocal-1.11/silent.m4:14: -1- AC_DEFUN([AM_SILENT_RULES], [AC_ARG_ENABLE([silent-rules],
[  --enable-silent-rules          less verbose build output (undo: `make V=1')
  --disable-silent-rules         verbose build output (undo: `make V=0')])
case $enable_silent_rules in
yes) AM_DEFAULT_VERBOSITY=0;;
no)  AM_DEFAULT_VERBOSITY=1;;
*)   AM_DEFAULT_VERBOSITY=m4_if([$1], [yes], [0], [1]);;
esac
AC_SUBST([AM_DEFAULT_VERBOSITY])dnl
AM_BACKSLASH='\'
AC_SUBST([AM_BACKSLASH])dnl
_AM_SUBST_NOTMAKE([AM_BACKSLASH])dnl
])
m4trace:/usr/share/aclocal-1.11/strip.m4:17: -1- AC_DEFUN([AM_PROG_INSTALL_STRIP], [AC_REQUIRE([AM_PROG_INSTALL_SH])dnl
# Installed binaries are usually stripped using `strip' when the user
# run `make install-strip'.  However `strip' might not be the right
# tool to use in cross-compilation environments, therefore Automake
# will honor the `STRIP' environment variable to overrule this program.
dnl Don't test for $cross_compiling = yes, because it might be `maybe'.
if test "$cross_compiling" != no; then
  AC_CHECK_TOOL([STRIP], [strip], :)
fi
INSTALL_STRIP_PROGRAM="\$(install_sh) -c -s"
AC_SUBST([INSTALL_STRIP_PROGRAM])])
m4trace:/usr/share/aclocal-1.11/substnot.m4:14: -1- AC_DEFUN([_AM_SUBST_NOTMAKE])
m4trace:/usr/share/aclocal-1.11/substnot.m4:19: -1- AC_DEFUN([AM_SUBST_NOTMAKE], [_AM_SUBST_NOTMAKE($@)])
m4trace:/usr/share/aclocal-1.11/tar.m4:24: -1- AC_DEFUN([_AM_PROG_TAR], [# Always define AMTAR for backward compatibility.
AM_MISSING_PROG([AMTAR], [tar])
m4_if([$1], [v7],
     [am__tar='${AMTAR} chof - "$$tardir"'; am__untar='${AMTAR} xf -'],
     [m4_case([$1], [ustar],, [pax],,
              [m4_fatal([Unknown tar format])])
AC_MSG_CHECKING([how to create a $1 tar archive])
# Loop over all known methods to create a tar archive until one works.
_am_tools='gnutar m4_if([$1], [ustar], [plaintar]) pax cpio none'
_am_tools=${am_cv_prog_tar_$1-$_am_tools}
# Do not fold the above two line into one, because Tru64 sh and
# Solaris sh will not grok spaces in the rhs of `-'.
for _am_tool in $_am_tools
do
  case $_am_tool in
  gnutar)
    for _am_tar in tar gnutar gtar;
    do
      AM_RUN_LOG([$_am_tar --version]) && break
    done
    am__tar="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$$tardir"'
    am__tar_="$_am_tar --format=m4_if([$1], [pax], [posix], [$1]) -chf - "'"$tardir"'
    am__untar="$_am_tar -xf -"
    ;;
  plaintar)
    # Must skip GNU tar: if it does not support --format= it doesn't create
    # ustar tarball either.
    (tar --version) >/dev/null 2>&1 && continue
    am__tar='tar chf - "$$tardir"'
    am__tar_='tar chf - "$tardir"'
    am__untar='tar xf -'
    ;;
  pax)
    am__tar='pax -L -x $1 -w "$$tardir"'
    am__tar_='pax -L -x $1 -w "$tardir"'
    am__untar='pax -r'
    ;;
  cpio)
    am__tar='find "$$tardir" -print | cpio -o -H $1 -L'
    am__tar_='find "$tardir" -print | cpio -o -H $1 -L'
    am__untar='cpio -i -H $1 -d'
    ;;
  none)
    am__tar=false
    am__tar_=false
    am__untar=false
    ;;
  esac

  # If the value was cached, stop now.  We just wanted to have am__tar
  # and am__untar set.
  test -n "${am_cv_prog_tar_$1}" && break

  # tar/untar a dummy directory, and stop if the command works
  rm -rf conftest.dir
  mkdir conftest.dir
  echo GrepMe > conftest.dir/file
  AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
  rm -rf conftest.dir
  if test -s conftest.tar; then
    AM_RUN_LOG([$am__untar <conftest.tar])
    grep GrepMe conftest.dir/file >/dev/null 2>&1 && break
  fi
done
rm -rf conftest.dir

AC_CACHE_VAL([am_cv_prog_tar_$1], [am_cv_prog_tar_$1=$_am_tool])
AC_MSG_RESULT([$am_cv_prog_tar_$1])])
AC_SUBST([am__tar])
AC_SUBST([am__untar])
])
m4trace:/home/build/lustre-release/snmp/autoconf/lustre-snmp.m4:6: -1- AC_DEFUN([LS_CONFIGURE], [
AC_MSG_CHECKING([whether to try to build SNMP support])
AC_ARG_ENABLE([snmp],
	AC_HELP_STRING([--enable-snmp],
		[require SNMP support (default=auto)]),
	[], [enable_snmp="auto"])
AC_MSG_RESULT([$enable_snmp])

if test x$enable_snmp != xno ; then
	AC_CHECK_PROG([NET_SNMP_CONFIG], [net-snmp-config], [net-snmp-config])
	if test "$NET_SNMP_CONFIG" ; then
		NET_SNMP_CFLAGS=$($NET_SNMP_CONFIG --base-cflags)
		NET_SNMP_LIBS=$($NET_SNMP_CONFIG --agent-libs)

		CPPFLAGS_save="$CPPFLAGS"
		CPPFLAGS="$CPPFLAGS $NET_SNMP_CFLAGS"

		LIBS_save="$LIBS"
		LIBS="$LIBS $NET_SNMP_LIBS"

		AC_CHECK_HEADER([net-snmp/net-snmp-config.h],[
			AC_CHECK_FUNC([register_mib],[SNMP_SUBDIR="snmp"],[
				LIBS="$LIBS -lwrap"
				NET_SNMP_LISB="$NET_SNMP_LIBS -lwrap"
				# fail autoconf's cache
				unset ac_cv_func_register_mib
				AC_CHECK_FUNC([register_mib],[SNMP_SUBDIR="snmp"])
			])
		])

		LIBS="$LIBS_save"
		CPPFLAGS="$CPPFLAGS_save"
	fi
	AC_MSG_CHECKING([for SNMP support])
	if test "$SNMP_SUBDIR" ; then
		AC_MSG_RESULT([yes])
	else
		AC_MSG_RESULT([no (see config.log for errors)])
		if test x$enable_snmp = xyes ; then
			AC_MSG_ERROR([SNMP support was requested, but unavailable])
		fi
	fi
fi

agentdir='${pkglibdir}/snmp'
mibdir='${pkgdatadir}/snmp/mibs'

AC_SUBST(NET_SNMP_CFLAGS)
AC_SUBST(NET_SNMP_LIBS)
AC_SUBST(agentdir)
AC_SUBST(mibdir)
])
m4trace:/home/build/lustre-release/snmp/autoconf/lustre-snmp.m4:64: -1- AC_DEFUN([LS_CONFIG_FILES], [
AC_CONFIG_FILES([
snmp/Makefile
snmp/autoconf/Makefile
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/kerberos5.m4:6: -1- AC_DEFUN([AC_KERBEROS_V5], [
  AC_MSG_CHECKING(for Kerberos v5)
  AC_ARG_WITH(krb5,
  [AC_HELP_STRING([--with-krb5=DIR], [use Kerberos v5 installation in DIR])],
  [ case "$withval" in
    yes|no)
       krb5_with=""
       ;;
    *)
       krb5_with="$withval"
       ;;
    esac ]
  )

  for dir in $krb5_with /usr /usr/kerberos /usr/local /usr/local/krb5 \
  	     /usr/krb5 /usr/heimdal /usr/local/heimdal /usr/athena ; do
    dnl This ugly hack brought on by the split installation of
    dnl MIT Kerberos on Fedora Core 1
    K5CONFIG=""
    if test -f $dir/bin/krb5-config; then
      K5CONFIG=$dir/bin/krb5-config
    elif test -f "/usr/kerberos/bin/krb5-config"; then
      K5CONFIG="/usr/kerberos/bin/krb5-config"
    elif test -f "/usr/lib/mit/bin/krb5-config"; then
      K5CONFIG="/usr/lib/mit/bin/krb5-config"
    fi
    if test "$K5CONFIG" != ""; then
      KRBCFLAGS=`$K5CONFIG --cflags`
      KRBLIBS=`$K5CONFIG --libs gssapi`
      K5VERS=`$K5CONFIG --version | head -n 1 | awk '{split($(4),v,"."); if (v@<:@"3"@:>@ == "") v@<:@"3"@:>@ = "0"; print v@<:@"1"@:>@v@<:@"2"@:>@v@<:@"3"@:>@ }'`
      AC_DEFINE_UNQUOTED(KRB5_VERSION, $K5VERS, [Define this as the Kerberos version number])
      if test -f $dir/include/gssapi/gssapi_krb5.h -a \
                \( -f $dir/lib/libgssapi_krb5.a -o \
                   -f $dir/lib64/libgssapi_krb5.a -o \
                   -f $dir/lib64/libgssapi_krb5.so -o \
                   -f $dir/lib/x86_64-linux-gnu/libgssapi_krb5.so -o \
                   -f $dir/lib/libgssapi_krb5.so \) ; then
         KRBDIR="$dir"
  dnl If we are using MIT K5 1.3.1 and before, we *MUST* use the
  dnl private function (gss_krb5_ccache_name) to get correct
  dnl behavior of changing the ccache used by gssapi.
  dnl Starting in 1.3.2, we *DO NOT* want to use
  dnl gss_krb5_ccache_name, instead we want to set KRB5CCNAME
  dnl to get gssapi to use a different ccache
         if test $K5VERS -le 131; then
           AC_DEFINE(USE_GSS_KRB5_CCACHE_NAME, 1, [Define this if the private function, gss_krb5_cache_name, must be used to tell the Kerberos library which credentials cache to use. Otherwise, this is done by setting the KRB5CCNAME environment variable])
         fi
         gssapi_lib=gssapi_krb5
         break
      dnl The following ugly hack brought on by the split installation
      dnl of Heimdal Kerberos on SuSe
      elif test \( -f $dir/include/heim_err.h -o\
      		 -f $dir/include/heimdal/heim_err.h \) -a \
                -f $dir/lib/libroken.a; then
         AC_DEFINE(HAVE_HEIMDAL, 1, [Define this if you have Heimdal Kerberos libraries])
         KRBDIR="$dir"
         gssapi_lib=gssapi
        break
      fi
    fi
  done
  dnl We didn't find a usable Kerberos environment
  if test "x$require_krb5" = "xyes" -a "x$KRBDIR" = "x"; then
    if test "x$krb5_with" = "x"; then
      AC_MSG_ERROR([

Kerberos v5 with GSS support not found: consider --disable-gss or --with-krb5=
])
    else
      AC_MSG_ERROR([

Kerberos v5 with GSS support not found at $krb5_with
])
    fi
  fi

  if test "x$KRBDIR" != "x"; then

    AC_MSG_RESULT($KRBDIR)

    dnl Check if -rpath=$(KRBDIR)/lib is needed
    echo "The current KRBDIR is $KRBDIR"
    if test "$KRBDIR/lib" = "/lib" -o "$KRBDIR/lib" = "/usr/lib" \
         -o "$KRBDIR/lib" = "//lib" -o "$KRBDIR/lib" = "/usr//lib" ; then
      KRBLDFLAGS="";
    elif /sbin/ldconfig -p | grep > /dev/null "=> $KRBDIR/lib/"; then
      KRBLDFLAGS="";
    else
      KRBLDFLAGS="-Wl,-rpath=$KRBDIR/lib"
    fi

    dnl Now check for functions within gssapi library
    AC_CHECK_LIB($gssapi_lib, gss_krb5_export_lucid_sec_context,
      AC_DEFINE(HAVE_LUCID_CONTEXT_SUPPORT, 1, [Define this if the Kerberos GSS library supports gss_krb5_export_lucid_sec_context]), ,$KRBLIBS)
    AC_CHECK_LIB($gssapi_lib, gss_krb5_set_allowable_enctypes,
      AC_DEFINE(HAVE_SET_ALLOWABLE_ENCTYPES, 1, [Define this if the Kerberos GSS library supports gss_krb5_set_allowable_enctypes]), ,$KRBLIBS)
    AC_CHECK_LIB($gssapi_lib, gss_krb5_ccache_name,
      AC_DEFINE(HAVE_GSS_KRB5_CCACHE_NAME, 1, [Define this if the Kerberos GSS library supports gss_krb5_ccache_name]), ,$KRBLIBS)

    dnl Check for newer error message facility
    AC_CHECK_LIB($gssapi_lib, krb5_get_error_message,
      AC_DEFINE(HAVE_KRB5_GET_ERROR_MESSAGE, 1, [Define this if the function krb5_get_error_message is available]), ,$KRBLIBS)

    dnl Check for function to specify addressless tickets
    AC_CHECK_LIB($gssapi_lib, krb5_get_init_creds_opt_set_addressless,
      AC_DEFINE(HAVE_KRB5_GET_INIT_CREDS_OPT_SET_ADDRESSLESS, 1, [Define this if the function krb5_get_init_creds_opt_set_addressless is available]), ,$KRBLIBS)

    dnl Check for krb5int_derive_key
    AC_CHECK_LIB($gssapi_lib, krb5int_derive_key,
      [HAVE_KRB5INT_DERIVE_KEY=1; AC_DEFINE(HAVE_KRB5INT_DERIVE_KEY, 1, [Define this if the function krb5int_derive_key is available])], ,$KRBLIBS)

    dnl Check for krb5_derive_key
    AC_CHECK_LIB($gssapi_lib, krb5_derive_key,
      [HAVE_KRB5_DERIVE_KEY=1; AC_DEFINE(HAVE_KRB5_DERIVE_KEY, 1, [Define this if the function krb5_derive_key is available])], ,$KRBLIBS)

    AS_IF([test "x$HAVE_KRB5INT_DERIVE_KEY" = "x1" -o "x$HAVE_KRB5_DERIVE_KEY" = "x1"],
          [AC_DEFINE(HAVE_KRB5, 1, [Define this if you have MIT Kerberos libraries])],
          [KRBDIR=""; AC_MSG_WARN([

Disable gss/krb5 due to missing both
krb5int_derive_key and krb5_derive_key functions!
])
    ])

    dnl If they specified a directory and it didn't work, give them a warning
    if test "x$krb5_with" != "x" -a "$krb5_with" != "$KRBDIR"; then
      AC_MSG_WARN([

Using $KRBDIR instead of requested value of $krb5_with for Kerberos!
])
    fi

    AC_SUBST([KRBDIR])
    AC_SUBST([KRBLIBS])
    AC_SUBST([KRBCFLAGS])
    AC_SUBST([KRBLDFLAGS])
    AC_SUBST([K5VERS])

  fi # "x$KRBDIR" != "x"

])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:6: -1- AC_DEFUN([LC_CONFIG_SRCDIR], [
AC_CONFIG_SRCDIR([lustre/obdclass/obdo.c])
libcfs_is_module="yes"
ldiskfs_is_ext4="yes"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:17: -1- AC_DEFUN([LC_PATH_DEFAULTS], [
# ptlrpc kernel build requires this
LUSTRE="$PWD/lustre"
AC_SUBST(LUSTRE)

# mount.lustre
rootsbindir='$(CROSS_PATH)/sbin'
AC_SUBST(rootsbindir)

demodir='$(docdir)/demo'
AC_SUBST(demodir)

pkgexampledir='${pkgdatadir}/examples'
AC_SUBST(pkgexampledir)
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:38: -1- AC_DEFUN([LC_TARGET_SUPPORTED], [
case $target_os in
	linux*)
$1
		;;
	*)
$2
		;;
esac
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:54: -1- AC_DEFUN([LC_CONFIG_OBD_BUFFER_SIZE], [
AC_MSG_CHECKING([for maximum OBD ioctl size])
AC_ARG_WITH([obd-buffer-size],
	AC_HELP_STRING([--with-obd-buffer-size=[size]],
		[set lctl ioctl maximum bytes (default=8192)]),
	[OBD_BUFFER_SIZE=$with_obd_buffer_size],
	[OBD_BUFFER_SIZE=8192])
AC_MSG_RESULT([$OBD_BUFFER_SIZE bytes])
AC_DEFINE_UNQUOTED(CONFIG_LUSTRE_OBD_MAX_IOCTL_BUFFER, $OBD_BUFFER_SIZE,
	[IOCTL Buffer Size])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:69: -1- AC_DEFUN([LC_GLIBC_SUPPORT_FHANDLES], [
AC_CHECK_FUNCS([name_to_handle_at],
	[AC_DEFINE(HAVE_FHANDLE_GLIBC_SUPPORT, 1,
		[file handle and related syscalls are supported])],
	[AC_MSG_WARN([file handle and related syscalls are not supported])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:82: -1- AC_DEFUN([LC_FUNC_DEV_SET_RDONLY], [
LB_CHECK_EXPORT([dev_set_rdonly], [block/ll_rw_block.c block/blk-core.c],
	[AC_DEFINE(HAVE_DEV_SET_RDONLY, 1,
		[kernel exports dev_set_rdonly])],
	[AC_MSG_WARN([kernel missing dev_set_rdonly patch for testing])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:94: -1- AC_DEFUN([LC_STACK_SIZE], [
LB_CHECK_COMPILE([if stack size is at least 8k],
stack_size_8k, [
	#include <linux/thread_info.h>
], [
	#if THREAD_SIZE < 8192
	#error "stack size < 8192"
	#endif
], [], [AC_MSG_ERROR([

Lustre requires that Linux is configured with at least a 8KB stack.
])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:113: -1- AC_DEFUN([LC_MDS_MAX_THREADS], [
AC_MSG_CHECKING([for maximum number of MDS threads])
AC_ARG_WITH([mds_max_threads],
	AC_HELP_STRING([--with-mds-max-threads=count],
		[maximum threads available on the MDS: (default=512)]),
	[AC_DEFINE_UNQUOTED(MDS_MAX_THREADS, $with_mds_max_threads,
		[maximum number of MDS threads])])
AC_MSG_RESULT([$with_mds_max_threads])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:128: -1- AC_DEFUN([LC_CONFIG_PINGER], [
AC_MSG_CHECKING([whether to enable Lustre pinger support])
AC_ARG_ENABLE([pinger],
	AC_HELP_STRING([--disable-pinger],
		[disable recovery pinger support]),
	[], [enable_pinger="yes"])
AC_MSG_RESULT([$enable_pinger])
AS_IF([test "x$enable_pinger" != xno],
	[AC_DEFINE(ENABLE_PINGER, 1,[Use the Pinger])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:144: -1- AC_DEFUN([LC_CONFIG_CHECKSUM], [
AC_MSG_CHECKING([whether to enable data checksum support])
AC_ARG_ENABLE([checksum],
	AC_HELP_STRING([--disable-checksum],
		[disable data checksum support]),
	[], [enable_checksum="yes"])
AC_MSG_RESULT([$enable_checksum])
AS_IF([test "x$enable_checksum" != xno],
	[AC_DEFINE(ENABLE_CHECKSUM, 1, [do data checksums])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:160: -1- AC_DEFUN([LC_CONFIG_HEALTH_CHECK_WRITE], [
AC_MSG_CHECKING([whether to enable a write with the health check])
AC_ARG_ENABLE([health_write],
	AC_HELP_STRING([--enable-health_write],
		[enable disk writes when doing health check]),
	[], [enable_health_write="no"])
AC_MSG_RESULT([$enable_health_write])
AS_IF([test "x$enable_health_write" != xno],
	[AC_DEFINE(USE_HEALTH_CHECK_WRITE, 1, [Write when Checking Health])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:174: -1- AC_DEFUN([LC_CONFIG_LRU_RESIZE], [
AC_MSG_CHECKING([whether to enable lru self-adjusting])
AC_ARG_ENABLE([lru_resize],
	AC_HELP_STRING([--enable-lru-resize],
		[enable lru resize support]),
	[], [enable_lru_resize="yes"])
AC_MSG_RESULT([$enable_lru_resize])
AS_IF([test "x$enable_lru_resize" != xno],
	[AC_DEFINE(HAVE_LRU_RESIZE_SUPPORT, 1, [Enable lru resize support])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:190: -1- AC_DEFUN([LC_QUOTA_CONFIG], [
LB_CHECK_CONFIG_IM([QUOTA], [],
	[AC_MSG_ERROR([

Lustre quota requires that CONFIG_QUOTA is enabled in your kernel.
])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:205: -1- AC_DEFUN([LC_EXPORT_TRUNCATE_COMPLETE_PAGE], [
LB_CHECK_EXPORT([truncate_complete_page], [mm/truncate.c],
	[AC_DEFINE(HAVE_TRUNCATE_COMPLETE_PAGE, 1,
		[kernel export truncate_complete_page])])
LB_CHECK_EXPORT([remove_from_page_cache], [mm/filemap.c],
	[AC_DEFINE(HAVE_REMOVE_FROM_PAGE_CACHE, 1,
		[kernel export remove_from_page_cache])])
LB_CHECK_EXPORT([delete_from_page_cache], [mm/filemap.c],
	[AC_DEFINE(HAVE_DELETE_FROM_PAGE_CACHE, 1,
		[kernel export delete_from_page_cache])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:223: -1- AC_DEFUN([LC_CONFIG_RMTCLIENT], [
LB_CHECK_CONFIG_IM([CRYPTO_AES], [],
	[AC_MSG_WARN([

Lustre remote client require that CONFIG_CRYPTO_AES is enabled in your kernel.
])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:237: -1- AC_DEFUN([LC_CONFIG_GSS_KEYRING], [
AC_MSG_CHECKING([whether to enable gss keyring backend])
AC_ARG_ENABLE([gss_keyring],
	[AC_HELP_STRING([--disable-gss-keyring],
		[disable gss keyring backend])],
	[], [enable_gss_keyring="auto"])
AC_MSG_RESULT([$enable_gss_keyring])
AS_IF([test "x$enable_gss_keyring" != xno], [
	LB_CHECK_CONFIG_IM([KEYS], [], [
		gss_keyring_conf_test="fail"
		AC_MSG_WARN([

GSS keyring backend require that CONFIG_KEYS be enabled in your kernel.
])])

	AC_CHECK_LIB([keyutils], [keyctl_search], [], [
		gss_keyring_conf_test="fail"
		AC_MSG_WARN([

libkeyutils is not found, which is required by gss keyring backend
])])

	AS_IF([test "x$gss_keyring_conf_test" != xfail], [
		AC_DEFINE([HAVE_GSS_KEYRING], [1],
			[Define this if you enable gss keyring backend])
		enable_gss_keyring="yes"
	], [
		AS_IF([test "x$enable_gss_keyring" = xyes], [
			AC_MSG_ERROR([

Cannot enable gss_keyring. See above for details.
])
		], [
			AC_MSG_WARN([

Cannot enable gss keyring. See above for details.
])
		])
	])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:284: -1- AC_DEFUN([LC_HAVE_CRED_TGCRED], [
LB_CHECK_COMPILE([if 'struct cred' has member 'tgcred'],
cred_tgcred, [
	#include <linux/cred.h>
],[
	((struct cred *)0)->tgcred = NULL;
],[
	AC_DEFINE(HAVE_CRED_TGCRED, 1,
		[struct cred has member tgcred])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:301: -1- AC_DEFUN([LC_KEY_TYPE_INSTANTIATE_2ARGS], [
LB_CHECK_COMPILE([if 'key_type->instantiate' has two args],
key_type_instantiate_2args, [
	#include <linux/key-type.h>
],[
	((struct key_type *)0)->instantiate(0, NULL);
],[
	AC_DEFINE(HAVE_KEY_TYPE_INSTANTIATE_2ARGS, 1,
		[key_type->instantiate has two args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:316: -1- AC_DEFUN([LC_CONFIG_SUNRPC], [
LB_CHECK_CONFIG_IM([SUNRPC], [], [
	AS_IF([test "x$sunrpc_required" = xyes], [
		AC_MSG_ERROR([

kernel SUNRPC support is required by using GSS.
])
	])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:332: -1- AC_DEFUN([LC_CONFIG_GSS], [
AC_MSG_CHECKING([whether to enable gss/krb5 support])
AC_ARG_ENABLE([gss],
	[AC_HELP_STRING([--enable-gss], [enable gss/krb5 support])],
	[], [enable_gss="auto"])
AC_MSG_RESULT([$enable_gss])

AS_IF([test "x$enable_gss" != xno], [
	LC_CONFIG_GSS_KEYRING
	LC_HAVE_CRED_TGCRED
	LC_KEY_TYPE_INSTANTIATE_2ARGS
	sunrpc_required=$enable_gss
	LC_CONFIG_SUNRPC
	sunrpc_required="no"

	LB_CHECK_CONFIG_IM([CRYPTO_MD5], [],
		[AC_MSG_WARN([kernel MD5 support is recommended by using GSS.])])
	LB_CHECK_CONFIG_IM([CRYPTO_SHA1], [],
		[AC_MSG_WARN([kernel SHA1 support is recommended by using GSS.])])
	LB_CHECK_CONFIG_IM([CRYPTO_SHA256], [],
		[AC_MSG_WARN([kernel SHA256 support is recommended by using GSS.])])
	LB_CHECK_CONFIG_IM([CRYPTO_SHA512], [],
		[AC_MSG_WARN([kernel SHA512 support is recommended by using GSS.])])

	require_krb5=$enable_gss
	AC_KERBEROS_V5
	require_krb5="no"

	AS_IF([test -n "$KRBDIR"], [
		gss_conf_test="success"
	], [
		AC_MSG_WARN([not found!])
		gss_conf_test="failure"
	])

	AS_IF([test "x$gss_conf_test" = xsuccess], [
		AC_DEFINE([HAVE_GSS], [1], [Define this is if you enable gss])
		enable_gss="yes"
	], [
		enable_gss="no"
	])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:384: -1- AC_DEFUN([LC_INODE_PERMISION_2ARGS], [
LB_CHECK_COMPILE([if 'inode_operations->permission' has two args],
inode_ops_permission_2args, [
	#include <linux/fs.h>
],[
	struct inode *inode __attribute__ ((unused));

	inode = NULL;
	inode->i_op->permission(NULL, 0);
],[
	AC_DEFINE(HAVE_INODE_PERMISION_2ARGS, 1,
		[inode_operations->permission has two args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:404: -1- AC_DEFUN([LC_BLK_QUEUE_MAX_SEGMENTS], [
LB_CHECK_COMPILE([if 'blk_queue_max_segments' is defined],
blk_queue_max_segments, [
	#include <linux/blkdev.h>
],[
	blk_queue_max_segments(NULL, 0);
],[
	AC_DEFINE(HAVE_BLK_QUEUE_MAX_SEGMENTS, 1,
		[blk_queue_max_segments is defined])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:421: -1- AC_DEFUN([LC_HAVE_DQUOT_FS_DISK_QUOTA], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'quotactl_ops.set_dqblk' takes struct fs_disk_quota],
fs_disk_quota, [
	#include <linux/fs.h>
	#include <linux/quota.h>
],[
	((struct quotactl_ops *)0)->set_dqblk(NULL, 0, 0, (struct fs_disk_quota*)0);
],[
	AC_DEFINE(HAVE_DQUOT_FS_DISK_QUOTA, 1,
		[quotactl_ops.set_dqblk takes struct fs_disk_quota])
],[
	LB_CHECK_COMPILE([if 'quotactl_ops.set_dqblk' takes struct kqid & fs_disk_quota],
	kqid_fs_disk_quota, [
		#include <linux/fs.h>
		#include <linux/quota.h>
	],[
		((struct quotactl_ops *)0)->set_dqblk((struct super_block*)0, *((struct kqid*)0), (struct fs_disk_quota*)0);
	],[
		AC_DEFINE(HAVE_DQUOT_FS_DISK_QUOTA, 1,
			[quotactl_ops.set_dqblk takes struct fs_disk_quota])
		AC_DEFINE(HAVE_DQUOT_KQID, 1,
			[quotactl_ops.set_dqblk takes struct kqid])
	])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:455: -1- AC_DEFUN([LC_HAVE_DQUOT_SUSPEND], [
LB_CHECK_COMPILE([if 'dquot_suspend' is defined],
dquot_suspend, [
	#include <linux/quotaops.h>
],[
	dquot_suspend(NULL, -1);
],[
	AC_DEFINE(HAVE_DQUOT_SUSPEND, 1, [dquot_suspend is defined])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:474: -1- AC_DEFUN([LC_QUOTA64], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-I$LINUX/fs"
LB_CHECK_COMPILE([if kernel has 64-bit quota limits support],
quota64, [
	#include <linux/kernel.h>
	#include <linux/fs.h>
	#if defined(HAVE_FS_QUOTA_QUOTAIO_H)
	#include <quota/quotaio_v2.h>
	struct v2r1_disk_dqblk dqblk_r1;
	#else
	#include <linux/quota.h>
	int ver = QFMT_VFS_V1;
	#endif
], [], [
	AC_DEFINE(HAVE_QUOTA64, 1, [have quota64])
],[
	LB_CHECK_FILE([$LINUX/include/linux/lustre_version.h],
		[AC_MSG_ERROR([You have got no 64-bit kernel quota support.])])
])
EXTRA_KCFLAGS=$tmp_flags
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:502: -1- AC_DEFUN([LC_HAVE_ADD_WAIT_QUEUE_EXCLUSIVE], [
LB_CHECK_COMPILE([if '__add_wait_queue_exclusive' exists],
__add_wait_queue_exclusive, [
	#include <linux/wait.h>
],[
	wait_queue_head_t queue;
	wait_queue_t	  wait;
	__add_wait_queue_exclusive(&queue, &wait);
],[
	AC_DEFINE(HAVE___ADD_WAIT_QUEUE_EXCLUSIVE, 1,
		  [__add_wait_queue_exclusive exists])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:521: -1- AC_DEFUN([LC_FS_STRUCT_RWLOCK], [
LB_CHECK_COMPILE([if 'fs_struct.lock' use rwlock],
fs_struct_rwlock, [
	#include <asm/atomic.h>
	#include <linux/spinlock.h>
	#include <linux/fs_struct.h>
],[
	((struct fs_struct *)0)->lock = (rwlock_t){ 0 };
],[
	AC_DEFINE(HAVE_FS_STRUCT_RWLOCK, 1, [fs_struct.lock use rwlock])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:540: -1- AC_DEFUN([LC_SBOPS_EVICT_INODE], [
LB_CHECK_COMPILE([if 'super_operations.evict_inode' exist],
super_ops_evict_inode, [
	#include <linux/fs.h>
],[
	((struct super_operations *)0)->evict_inode(NULL);
],[
	AC_DEFINE(HAVE_SBOPS_EVICT_INODE, 1,
		[super_operations.evict_inode() is exist in kernel])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:558: -1- AC_DEFUN([LC_FILE_FSYNC], [
LB_CHECK_COMPILE([if 'file_operations.fsync' takes 4 arguments],
file_ops_fsync_4args, [
	#include <linux/fs.h>
],[
	((struct file_operations *)0)->fsync(NULL, 0, 0, 0);
],[
	AC_DEFINE(HAVE_FILE_FSYNC_4ARGS, 1,
		[file_operations.fsync takes 4 arguments])
],[
	LB_CHECK_COMPILE([if 'file_operations.fsync' takes 2 arguments],
	file_ops_fsync_2args, [
		#include <linux/fs.h>
	],[
		((struct file_operations *)0)->fsync(NULL, 0);
	],[
		AC_DEFINE(HAVE_FILE_FSYNC_2ARGS, 1,
			[file_operations.fsync takes 2 arguments])
	])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:585: -1- AC_DEFUN([LC_KERNEL_LOCKED], [
LB_CHECK_COMPILE([if 'kernel_locked' is defined],
kernel_locked, [
	#include <linux/smp_lock.h>
],[
	kernel_locked();
],[
	AC_DEFINE(HAVE_KERNEL_LOCKED, 1, [kernel_locked is defined])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:601: -1- AC_DEFUN([LC_D_COMPARE_7ARGS], [
LB_CHECK_COMPILE([if 'dentry_operations.d_compare()' taken 7 arguments],
dentry_ops_d_compare_7arg, [
	#include <linux/dcache.h>
],[
	((struct dentry_operations*)0)->d_compare(NULL,NULL,NULL,NULL,0,NULL,NULL);
],[
	AC_DEFINE(HAVE_D_COMPARE_7ARGS, 1, [d_compare need 7 arguments])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:617: -1- AC_DEFUN([LC_D_DELETE_CONST], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'dentry_operations.d_delete()' has const declare on first parameter],
dentry_ops_d_delete_1st_const, [
	#include <linux/dcache.h>
],[
	const struct dentry *d = NULL;
	((struct dentry_operations*)0)->d_delete(d);
],[
	AC_DEFINE(HAVE_D_DELETE_CONST, const,
		[d_delete first parameter declared const])
],[
	AC_DEFINE(HAVE_D_DELETE_CONST, [],
		[d_delete first parameter declared is not const])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:641: -1- AC_DEFUN([LC_DCACHE_LOCK], [
LB_CHECK_COMPILE([if 'dcache_lock' is exist],
dcache_lock, [
	#include <linux/dcache.h>
],[
	spin_lock(&dcache_lock);
],[
	AC_DEFINE(HAVE_DCACHE_LOCK, 1,
		[dcache_lock is exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:658: -1- AC_DEFUN([LC_INODE_I_RCU], [
LB_CHECK_COMPILE([if 'inode.i_rcu' exists],
inode_i_rcu, [
	#include <linux/fs.h>
],[
	struct inode ino;
	struct rcu_head rcu = {};
	ino.i_rcu = rcu;
],[
	AC_DEFINE(HAVE_INODE_I_RCU, 1,
		[inode.i_rcu exists])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:677: -1- AC_DEFUN([LC_BLKDEV_GET_BY_DEV], [
LB_CHECK_EXPORT([blkdev_get_by_dev], [fs/block_dev.c],
	[AC_DEFINE(HAVE_BLKDEV_GET_BY_DEV, 1,
		[blkdev_get_by_dev is exported by the kernel])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:688: -1- AC_DEFUN([LC_EXPORT_SIMPLE_SETATTR], [
LB_CHECK_EXPORT([simple_setattr], [fs/libfs.c],
	[AC_DEFINE(HAVE_SIMPLE_SETATTR, 1,
		[simple_setattr is exported by the kernel])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:699: -1- AC_DEFUN([LC_IOP_TRUNCATE], [
LB_CHECK_COMPILE([if 'inode_operations' has '.truncate' member function],
inode_ops_truncate, [
	#include <linux/fs.h>
],[
	((struct inode_operations *)0)->truncate(NULL);
],[
	AC_DEFINE(HAVE_INODEOPS_TRUNCATE, 1,
		[inode_operations has .truncate member function])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:716: -1- AC_DEFUN([LC_REQUEST_QUEUE_UNPLUG_FN], [
LB_CHECK_COMPILE([if 'request_queue' has 'unplug_fn' field],
request_queue_unplug_fn, [
	#include <linux/blkdev.h>
],[
	do {} while(sizeof(((struct request_queue *)0)->unplug_fn));
],[
	AC_DEFINE(HAVE_REQUEST_QUEUE_UNPLUG_FN, 1,
		[request_queue has unplug_fn field])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:733: -1- AC_DEFUN([LC_HAVE_FSTYPE_MOUNT], [
LB_CHECK_COMPILE([if 'file_system_type' has 'mount' field],
file_system_type_mount, [
	#include <linux/fs.h>
],[
	struct file_system_type fst;
	void *i = (void *) fst.mount;
],[
	AC_DEFINE(HAVE_FSTYPE_MOUNT, 1,
		[struct file_system_type has mount field])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:753: -1- AC_DEFUN([LC_HAVE_FHANDLE_SYSCALLS], [
LB_CHECK_CONFIG_IM([FHANDLE],[
	AC_DEFINE(HAVE_FHANDLE_SYSCALLS, 1,
		[kernel supports fhandles and related syscalls])
	])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:765: -1- AC_DEFUN([LC_HAVE_INODE_OWNER_OR_CAPABLE], [
LB_CHECK_COMPILE([if 'inode_owner_or_capable' exist],
inode_owner_or_capable, [
	#include <linux/fs.h>
],[
	inode_owner_or_capable(NULL);
],[
	AC_DEFINE(HAVE_INODE_OWNER_OR_CAPABLE, 1,
		[inode_owner_or_capable exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:783: -1- AC_DEFUN([LC_DIRTY_INODE_WITH_FLAG], [
LB_CHECK_COMPILE([if 'dirty_inode' super_operation takes flag],
dirty_inode_super_operation_flag, [
	#include <linux/fs.h>
],[
	struct inode *inode;
	inode->i_sb->s_op->dirty_inode(NULL, 0);
],[
	AC_DEFINE(HAVE_DIRTY_INODE_HAS_FLAG, 1,
		[dirty_inode super_operation takes flag])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:805: -1- AC_DEFUN([LC_GENERIC_PERMISSION], [
LB_CHECK_COMPILE([if 'generic_permission' take 2 arguments],
generic_permission_2args, [
	#include <linux/fs.h>
],[
	generic_permission(NULL, 0);
],[
	AC_DEFINE(HAVE_GENERIC_PERMISSION_2ARGS, 1,
		[generic_permission taken 2 arguments])
],[
	LB_CHECK_COMPILE([if 'generic_permission' take 4 arguments],
	generic_permission_4args, [
		#include <linux/fs.h>
	],[
		generic_permission(NULL, 0, 0, NULL);
	],[
		AC_DEFINE(HAVE_GENERIC_PERMISSION_4ARGS, 1,
			[generic_permission taken 4 arguments])
	])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:833: -1- AC_DEFUN([LC_LM_XXX_LOCK_MANAGER_OPS], [
LB_CHECK_COMPILE([if 'lock-manager' ops renamed to 'lm_xxx'],
lock_manager_ops_lm_xxx, [
	#include <linux/fs.h>
],[
	struct lock_manager_operations lm_ops;
	lm_ops.lm_compare_owner = NULL;
],[
	AC_DEFINE(HAVE_LM_XXX_LOCK_MANAGER_OPS, 1,
		[lock-manager ops renamed to lm_xxx])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:853: -1- AC_DEFUN([LC_INODE_DIO_WAIT], [
LB_CHECK_COMPILE([if 'inode->i_alloc_sem' is killed and use inode_dio_wait],
inode_dio_wait, [
	#include <linux/fs.h>
],[
	inode_dio_wait((struct inode *)0);
],[
	AC_DEFINE(HAVE_INODE_DIO_WAIT, 1,
		[inode->i_alloc_sem is killed and use inode_dio_wait])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:871: -1- AC_DEFUN([LC_IOP_GET_ACL], [
LB_CHECK_COMPILE([if 'inode_operations' has '.get_acl' member function],
inode_ops_get_acl, [
	#include <linux/fs.h>
],[
	struct inode_operations iop;
	iop.get_acl = NULL;
],[
	AC_DEFINE(HAVE_IOP_GET_ACL, 1,
		[inode_operations has .get_acl member function])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:889: -1- AC_DEFUN([LC_FILE_LLSEEK_SIZE], [
LB_CHECK_EXPORT([generic_file_llseek_size], [fs/read_write.c],
	[AC_DEFINE(HAVE_FILE_LLSEEK_SIZE, 1,
		[generic_file_llseek_size is exported by the kernel])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:899: -1- AC_DEFUN([LC_RADIX_EXCEPTION_ENTRY], [
LB_CHECK_COMPILE([radix_tree_exceptional_entry exist],
radix_tree_exceptional_entry, [
	#include <linux/radix-tree.h>
],[
	radix_tree_exceptional_entry(NULL);
],[
	AC_DEFINE(HAVE_RADIX_EXCEPTION_ENTRY, 1,
		[radix_tree_exceptional_entry exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:917: -1- AC_DEFUN([LC_HAVE_VOID_MAKE_REQUEST_FN], [
LB_CHECK_COMPILE([if 'request_queue.make_request_fn' returns void but not int],
make_request_fn_void, [
	#include <linux/blkdev.h>
],[
	int ret;
	make_request_fn *mrf;
	ret = mrf(NULL, NULL);
],[],[
	AC_DEFINE(HAVE_VOID_MAKE_REQUEST_FN, 1,
		[request_queue.make_request_fn returns void but not int])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:938: -1- AC_DEFUN([LC_HAVE_PROTECT_I_NLINK], [
LB_CHECK_COMPILE([if 'inode->i_nlink' is protected from direct modification],
inode_i_nlink_protected, [
	#include <linux/fs.h>
],[
	struct inode i;
	set_nlink(&i, 1);
],[
	AC_DEFINE(HAVE_PROTECT_I_NLINK, 1,
		[inode->i_nlink is protected from direct modification])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:956: -1- AC_DEFUN([LC_HAVE_SECURITY_IINITSEC], [
LB_CHECK_COMPILE([if security_inode_init_security takes a callback],
security_inode_init_security_callback, [
	#include <linux/security.h>
],[
	security_inode_init_security(NULL, NULL, NULL, (const initxattrs)NULL, NULL);
],[
	AC_DEFINE(HAVE_SECURITY_IINITSEC_CALLBACK, 1,
		  [security_inode_init_security takes a callback to set xattrs])
],[
	LB_CHECK_COMPILE([if security_inode_init_security takes a 'struct qstr' parameter],
	security_inode_init_security_qstr, [
		#include <linux/security.h>
	],[
		security_inode_init_security(NULL, NULL, (struct qstr *)NULL, NULL, NULL, NULL);
	],[
		AC_DEFINE(HAVE_SECURITY_IINITSEC_QSTR, 1,
			  [security_inode_init_security takes a 'struct qstr' parameter])
	])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:983: -1- AC_DEFUN([LC_HAVE_MIGRATE_HEADER], [
LB_CHECK_FILE([$LINUX/include/linux/migrate.h], [
	AC_DEFINE(HAVE_MIGRATE_H, 1,
		[kernel has include/linux/migrate.h])
],[
	LB_CHECK_FILE([$LINUX/include/linux/migrate_mode.h], [
		AC_DEFINE(HAVE_MIGRATE_MODE_H, 1,
			[kernel has include/linux/migrate_mode.h])
	])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:998: -1- AC_DEFUN([LC_MIGRATEPAGE_4ARGS], [
LB_CHECK_COMPILE([if 'address_space_operations.migratepage' has 4 args],
address_space_ops_migratepage_4args, [
	#include <linux/fs.h>
#ifdef HAVE_MIGRATE_H
	#include <linux/migrate.h>
#elif defined(HAVE_MIGRATE_MODE_H)
	#include <linux/migrate_mode.h>
#endif
],[
	struct address_space_operations aops;
	aops.migratepage(NULL, NULL, NULL, MIGRATE_ASYNC);
],[
	AC_DEFINE(HAVE_MIGRATEPAGE_4ARGS, 1,
		[address_space_operations.migratepage has 4 args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1022: -1- AC_DEFUN([LC_SUPEROPS_USE_DENTRY], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'super_operations' use 'dentry' as parameter],
super_ops_dentry, [
	#include <linux/fs.h>
	int show_options(struct seq_file *seq, struct dentry *root) {
		return 0;
	}
],[
	struct super_operations ops;
	ops.show_options = show_options;
],[
	AC_DEFINE(HAVE_SUPEROPS_USE_DENTRY, 1,
		[super_operations use dentry as parameter])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1047: -1- AC_DEFUN([LC_INODEOPS_USE_UMODE_T], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'inode_operations' use 'umode_t' as parameter],
inode_ops_umode_t, [
	#include <linux/fs.h>
	#include <linux/types.h>
	int my_mknod(struct inode *dir, struct dentry *dchild,
		     umode_t mode, dev_t dev)
	{
		return 0;
	}
],[
	struct inode_operations ops;
	ops.mknod = my_mknod;
],[
	AC_DEFINE(HAVE_INODEOPS_USE_UMODE_T, 1,
		[inode_operations use umode_t as parameter])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1075: -1- AC_DEFUN([LC_KMAP_ATOMIC_HAS_1ARG], [
LB_CHECK_COMPILE([if 'kmap_atomic' has only 1 argument],
kmap_atomic_1arg, [
	#include <linux/highmem.h>
],[
	kmap_atomic(NULL);
],[
	AC_DEFINE(HAVE_KMAP_ATOMIC_HAS_1ARG, 1,
		[have kmap_atomic has only 1 argument])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1093: -1- AC_DEFUN([LC_HAVE_D_MAKE_ROOT], [
LB_CHECK_COMPILE([if have 'd_make_root'],
d_make_root, [
	#include <linux/fs.h>
],[
	d_make_root((struct inode *)NULL);
],[
	AC_DEFINE(HAVE_D_MAKE_ROOT, 1,
		[have d_make_root])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1115: -1- AC_DEFUN([LC_HAVE_CACHE_REGISTER], [
LB_CHECK_COMPILE([if have 'cache_register'],
cache_register, [
	#include <linux/sunrpc/cache.h>
],[
	cache_register(NULL);
],[
	AC_DEFINE(HAVE_CACHE_REGISTER, 1,
		[have cache_register])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1133: -1- AC_DEFUN([LC_HAVE_CLEAR_INODE], [
LB_CHECK_COMPILE([if have 'clear_inode'],
clear_inode, [
	#include <linux/fs.h>
],[
	clear_inode((struct inode *)NULL);
],[
	AC_DEFINE(HAVE_CLEAR_INODE, 1,
		[have clear_inode])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1151: -1- AC_DEFUN([LC_HAVE_ENCODE_FH_PARENT], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'encode_fh' have parent inode as parameter],
encode_fh_parent_inode, [
	#include <linux/exportfs.h>
	#include <linux/fs.h>
	#include <linux/types.h>
	int ll_encode_fh(struct inode *i, __u32 *a, int *b, struct inode *p)
	{
		return 0;
	}
],[
	struct export_operations exp_op;
	exp_op.encode_fh = ll_encode_fh;
],[
	AC_DEFINE(HAVE_ENCODE_FH_PARENT, 1,
		[have parent inode as parameter])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1178: -1- AC_DEFUN([LC_FILE_LLSEEK_SIZE_5ARG], [
LB_CHECK_COMPILE([if Linux kernel has 'generic_file_llseek_size' with 5 args],
generic_file_llseek_size_5args, [
	#include <linux/fs.h>
],[
	generic_file_llseek_size(NULL, 0, 0, 0, 0);
], [
	AC_DEFINE(HAVE_FILE_LLSEEK_SIZE_5ARGS, 1,
		[kernel has generic_file_llseek_size with 5 args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1205: -1- AC_DEFUN([LC_DATA_FOR_LLITE_IS_LIST], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'i_dentry/d_alias' uses 'list'],
i_dentry_d_alias_list, [
	#include <linux/fs.h>
],[
	struct inode inode;
	INIT_LIST_HEAD(&inode.i_dentry);
],[
	AC_DEFINE(DATA_FOR_LLITE_IS_LIST, 1,
		[both i_dentry/d_alias uses list])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1227: -1- AC_DEFUN([LC_DENTRY_OPEN_USE_PATH], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'dentry_open' uses 'struct path' as first argument],
dentry_open_path, [
	#include <linux/fs.h>
	#include <linux/path.h>
],[
	struct path path;
	dentry_open(&path, 0, NULL);
],[
	AC_DEFINE(HAVE_DENTRY_OPEN_USE_PATH, 1,
		[dentry_open uses struct path as first argument])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1249: -1- AC_DEFUN([LC_HAVE_IOP_ATOMIC_OPEN], [
LB_CHECK_COMPILE([if 'iop' has 'atomic_open'],
inode_ops_atomic_open, [
	#include <linux/fs.h>
],[
	struct inode_operations iop;
	iop.atomic_open = NULL;
],[
	AC_DEFINE(HAVE_IOP_ATOMIC_OPEN, 1,
		[have iop atomic_open])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1267: -1- AC_DEFUN([LC_HAVE_POSIXACL_USER_NS], [
LB_CHECK_COMPILE([if 'posix_acl_to_xattr' takes 'struct user_namespace'],
posix_acl_to_xattr_user_namespace, [
	#include <linux/fs.h>
	#include <linux/posix_acl_xattr.h>
],[
	posix_acl_to_xattr((struct user_namespace *)NULL, NULL, NULL, 0);
],[
	AC_DEFINE(HAVE_POSIXACL_USER_NS, 1,
		[posix_acl_to_xattr takes struct user_namespace])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1285: -1- AC_DEFUN([LC_HAVE_FILE_F_INODE], [
LB_CHECK_COMPILE([if 'struct file' has member 'f_inode'],
file_f_inode, [
	#include <linux/fs.h>
],[
	((struct file *)0)->f_inode = NULL;
],[
	AC_DEFINE(HAVE_FILE_F_INODE, 1,
		[struct file has member f_inode])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1300: -1- AC_DEFUN([LC_HAVE_SUNRPC_UPCALL_HAS_3ARGS], [
LB_CHECK_COMPILE([if 'sunrpc_cache_pipe_upcall' takes 3 args],
sunrpc_cache_pipe_upcall_3args, [
	#include <linux/sunrpc/cache.h>
],[
	sunrpc_cache_pipe_upcall(NULL, NULL, NULL);
],[
	AC_DEFINE(HAVE_SUNRPC_UPCALL_HAS_3ARGS, 1,
		[sunrpc_cache_pipe_upcall takes 3 args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1318: -1- AC_DEFUN([LC_HAVE_HLIST_FOR_EACH_3ARG], [
LB_CHECK_COMPILE([if 'hlist_for_each_entry' has 3 args],
hlist_for_each_entry_3args, [
	#include <linux/list.h>
	#include <linux/fs.h>
],[
	struct hlist_head *head = NULL;
	struct inode *inode;

	hlist_for_each_entry(inode, head, i_hash) {
		continue;
	}
],[
	AC_DEFINE(HAVE_HLIST_FOR_EACH_3ARG, 1,
		[hlist_for_each_entry has 3 args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1342: -1- AC_DEFUN([LC_HAVE_BIO_END_SECTOR], [
LB_CHECK_COMPILE([if 'bio_end_sector' is defined],
bio_end_sector, [
	#include <linux/bio.h>
],[
	struct bio bio;

	bio_end_sector(&bio);
],[
	AC_DEFINE(HAVE_BIO_END_SECTOR, 1,
		  [bio_end_sector is defined])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1361: -1- AC_DEFUN([LC_HAVE_REMOVE_PROC_SUBTREE], [
LB_CHECK_COMPILE([if 'remove_proc_subtree' is defined],
remove_proc_subtree, [
	#include <linux/proc_fs.h>
],[
	remove_proc_subtree(NULL, NULL);
], [
	AC_DEFINE(HAVE_REMOVE_PROC_SUBTREE, 1,
		  [remove_proc_subtree is defined])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1378: -1- AC_DEFUN([LC_HAVE_PROC_REMOVE], [
LB_CHECK_COMPILE([if 'proc_remove' is defined],
proc_remove, [
	#include <linux/proc_fs.h>
],[
	proc_remove(NULL);
], [
	AC_DEFINE(HAVE_PROC_REMOVE, 1,
		  [proc_remove is defined])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1395: -1- AC_DEFUN([LC_BLKDEV_RELEASE_RETURN_INT], [
LB_CHECK_COMPILE([if 'block_device_operations' release returns 'int'],
block_device_ops_release_return_int, [
	#include <linux/blkdev.h>
],[
	struct block_device_operations fops;
	int i __attribute__ ((unused));

	i = fops.release(NULL, 0);
],[
	AC_DEFINE(HAVE_BLKDEV_RELEASE_RETURN_INT, 1,
		[block device release returns int])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1415: -1- AC_DEFUN([LC_INVALIDATE_RANGE], [
LB_CHECK_COMPILE([if 'address_space_operations.invalidatepage' requires 3 arguments],
address_space_ops_invalidatepage_3args, [
	#include <linux/fs.h>
],[
	struct address_space_operations a_ops;
	a_ops.invalidatepage(NULL, 0, 0);
],[
	AC_DEFINE(HAVE_INVALIDATE_RANGE, 1,
		[address_space_operations.invalidatepage needs 3 arguments])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1433: -1- AC_DEFUN([LC_HAVE_DIR_CONTEXT], [
LB_CHECK_COMPILE([if 'dir_context' exist],
dir_context, [
	#include <linux/fs.h>
],[
	struct dir_context ctx;
	ctx.pos = 0;
],[
	AC_DEFINE(HAVE_DIR_CONTEXT, 1,
		[dir_context exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1451: -1- AC_DEFUN([LC_D_COMPARE_5ARGS], [
LB_CHECK_COMPILE([if 'd_compare' taken 5 arguments],
d_compare_5args, [
	#include <linux/dcache.h>
],[
	((struct dentry_operations*)0)->d_compare(NULL,NULL,0,NULL,NULL);
],[
	AC_DEFINE(HAVE_D_COMPARE_5ARGS, 1,
		[d_compare need 5 arguments])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1468: -1- AC_DEFUN([LC_HAVE_DCOUNT], [
LB_CHECK_COMPILE([if 'd_count' exist],
d_count, [
	#include <linux/dcache.h>
],[
	struct dentry de;
	d_count(&de);
],[
	AC_DEFINE(HAVE_D_COUNT, 1,
		[d_count exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1486: -1- AC_DEFUN([LC_OLDSIZE_TRUNCATE_PAGECACHE], [
LB_CHECK_COMPILE([if 'truncate_pagecache' with 'old_size' parameter],
truncate_pagecache_old_size, [
	#include <linux/mm.h>
],[
	truncate_pagecache(NULL, 0, 0);
],[
	AC_DEFINE(HAVE_OLDSIZE_TRUNCATE_PAGECACHE, 1,
		[with oldsize])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1505: -1- AC_DEFUN([LC_HAVE_DENTRY_D_U_D_ALIAS], [
AS_IF([test "x$lb_cv_compile_i_dentry_d_alias_list" = xyes], [
	LB_CHECK_COMPILE([if list 'dentry.d_u.d_alias' exist],
	d_alias, [
		#include <linux/list.h>
		#include <linux/dcache.h>
	],[
		struct dentry de;
		INIT_LIST_HEAD(&de.d_u.d_alias);
	],[
		AC_DEFINE(HAVE_DENTRY_D_U_D_ALIAS, 1,
			[list dentry.d_u.d_alias exist])
	])
],[
	LB_CHECK_COMPILE([if hlist 'dentry.d_u.d_alias' exist],
	d_alias, [
		#include <linux/list.h>
		#include <linux/dcache.h>
	],[
		struct dentry de;
		INIT_HLIST_NODE(&de.d_u.d_alias);
	],[
		AC_DEFINE(HAVE_DENTRY_D_U_D_ALIAS, 1,
			[hlist dentry.d_u.d_alias exist])
	])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1539: -1- AC_DEFUN([LC_HAVE_DENTRY_D_CHILD], [
LB_CHECK_COMPILE([if 'dentry.d_child' exist],
d_child, [
	#include <linux/list.h>
	#include <linux/dcache.h>
],[
	struct dentry de;
	INIT_LIST_HEAD(&de.d_child);
],[
	AC_DEFINE(HAVE_DENTRY_D_CHILD, 1,
		[dentry.d_child exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1558: -1- AC_DEFUN([LC_KIOCB_KI_LEFT], [
LB_CHECK_COMPILE([if 'struct kiocb' with 'ki_left' member],
kiocb_ki_left, [
	#include <linux/aio.h>
],[
	((struct kiocb*)0)->ki_left = 0;
],[
	AC_DEFINE(HAVE_KIOCB_KI_LEFT, 1,
		[ki_left exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1575: -1- AC_DEFUN([LC_VFS_RENAME_5ARGS], [
LB_CHECK_COMPILE([if Linux kernel has 'vfs_rename' with 5 args],
vfs_rename_5args, [
	#include <linux/fs.h>
],[
	vfs_rename(NULL, NULL, NULL, NULL, NULL);
], [
	AC_DEFINE(HAVE_VFS_RENAME_5ARGS, 1,
		[kernel has vfs_rename with 5 args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1592: -1- AC_DEFUN([LC_VFS_UNLINK_3ARGS], [
LB_CHECK_COMPILE([if Linux kernel has 'vfs_unlink' with 3 args],
vfs_unlink_3args, [
	#include <linux/fs.h>
],[
	vfs_unlink(NULL, NULL, NULL);
], [
	AC_DEFINE(HAVE_VFS_UNLINK_3ARGS, 1,
		[kernel has vfs_unlink with 3 args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1610: -1- AC_DEFUN([LC_HAVE_BVEC_ITER], [
LB_CHECK_COMPILE([if Linux kernel has struct bvec_iter],
have_bvec_iter, [
	#include <linux/bio.h>
],[
	struct bvec_iter iter;
	iter.bi_bvec_done = 0;
], [
	AC_DEFINE(HAVE_BVEC_ITER, 1,
		[kernel has struct bvec_iter])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1628: -1- AC_DEFUN([LC_HAVE_TRUNCATE_IPAGES_FINAL], [
LB_CHECK_COMPILE([if Linux kernel has truncate_inode_pages_final],
truncate_ipages_final, [
	#include <linux/mm.h>
],[
	truncate_inode_pages_final(NULL);
], [
	AC_DEFINE(HAVE_TRUNCATE_INODE_PAGES_FINAL, 1,
		[kernel has truncate_inode_pages_final])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1645: -1- AC_DEFUN([LC_VFS_RENAME_6ARGS], [
LB_CHECK_COMPILE([if Linux kernel has 'vfs_rename' with 6 args],
vfs_rename_6args, [
	#include <linux/fs.h>
],[
	vfs_rename(NULL, NULL, NULL, NULL, NULL, NULL);
], [
	AC_DEFINE(HAVE_VFS_RENAME_6ARGS, 1,
		[kernel has vfs_rename with 6 args])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1662: -1- AC_DEFUN([LC_DIRECTIO_USE_ITER], [
LB_CHECK_COMPILE([if direct IO uses iov_iter],
direct_io_iter, [
	#include <linux/fs.h>
],[
	struct address_space_operations ops;
	struct iov_iter *iter = NULL;
	loff_t offset = 0;

	ops.direct_IO(0, NULL, iter, offset);
],[
	AC_DEFINE(HAVE_DIRECTIO_ITER, 1,
		[direct IO uses iov_iter])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1686: -1- AC_DEFUN([LC_HAVE_IOV_ITER_INIT_DIRECTION], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'iov_iter_init' takes a tag],
iter_init, [
	#include <linux/uio.h>
	#include <linux/fs.h>
],[
	const struct iovec *iov = NULL;

	iov_iter_init(NULL, READ, iov, 1, 0);
],[
	AC_DEFINE(HAVE_IOV_ITER_INIT_DIRECTION, 1,
		[iov_iter_init handles directional tag])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1709: -1- AC_DEFUN([LC_HAVE_FILE_OPERATIONS_READ_WRITE_ITER], [
LB_CHECK_COMPILE([if 'file_operations.[read|write]_iter' exist],
file_function_iter, [
	#include <linux/fs.h>
],[
	((struct file_operations *)NULL)->read_iter(NULL, NULL);
	((struct file_operations *)NULL)->write_iter(NULL, NULL);
],[
	AC_DEFINE(HAVE_FILE_OPERATIONS_READ_WRITE_ITER, 1,
		[file_operations.[read|write]_iter functions exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1728: -1- AC_DEFUN([LC_KEY_MATCH_DATA], [
LB_CHECK_COMPILE([if struct key_match field exist],
key_match, [
	#include <linux/key-type.h>
],[
	struct key_match_data data;
],[
	AC_DEFINE(HAVE_KEY_MATCH_DATA, 1,
		[struct key_match_data exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1745: -1- AC_DEFUN([LC_NFS_FILLDIR_USE_CTX], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if filldir_t uses struct dir_context],
filldir_ctx, [
	#include <linux/fs.h>
],[
	int filldir(struct dir_context *ctx, const char* name,
		    int i, loff_t off, u64 tmp, unsigned temp)
	{
		return 0;
	}

	struct dir_context ctx = {
		.actor = filldir,
	};

	ctx.actor(NULL, "test", 0, (loff_t) 0, 0, 0);
],[
	AC_DEFINE(HAVE_FILLDIR_USE_CTX, 1,
		[filldir_t needs struct dir_context as argument])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1777: -1- AC_DEFUN([LC_PERCPU_COUNTER_INIT], [
LB_CHECK_COMPILE([if percpu_counter_init uses GFP_* flag as argument],
percpu_counter_init, [
	#include <linux/percpu_counter.h>
],[
	percpu_counter_init(NULL, 0, GFP_KERNEL);
],[
	AC_DEFINE(HAVE_PERCPU_COUNTER_INIT_GFP_FLAG, 1,
		[percpu_counter_init uses GFP_* flag])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1794: -1- AC_DEFUN([LC_KIOCB_HAS_NBYTES], [
LB_CHECK_COMPILE([if struct kiocb has ki_nbytes field],
ki_nbytes, [
	#include <linux/fs.h>
],[
	struct kiocb iocb;

	iocb.ki_nbytes = 0;
],[
	AC_DEFINE(HAVE_KI_NBYTES, 1, [ki_nbytes field exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1812: -1- AC_DEFUN([LC_BACKING_DEV_INFO_REMOVAL], [
LB_CHECK_COMPILE([if struct address_space has backing_dev_info],
backing_dev_info, [
	#include <linux/fs.h>
],[
	struct address_space mapping;

	mapping.backing_dev_info = NULL;
],[
	AC_DEFINE(HAVE_BACKING_DEV_INFO, 1, [backing_dev_info exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1832: -1- AC_DEFUN([LC_HAVE_BDI_CAP_MAP_COPY], [
LB_CHECK_COMPILE([if have 'BDI_CAP_MAP_COPY'],
bdi_cap_map_copy, [
	#include <linux/backing-dev.h>
],[
	struct backing_dev_info info;

	info.capabilities = BDI_CAP_MAP_COPY;
],[
	AC_DEFINE(HAVE_BDI_CAP_MAP_COPY, 1,
		[BDI_CAP_MAP_COPY exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1851: -1- AC_DEFUN([LC_CANCEL_DIRTY_PAGE], [
LB_CHECK_COMPILE([if cancel_dirty_page still exist],
cancel_dirty_page, [
	#include <linux/mm.h>
],[
	cancel_dirty_page(NULL, PAGE_SIZE);
],[
	AC_DEFINE(HAVE_CANCEL_DIRTY_PAGE, 1,
		[cancel_dirty_page is still available])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1868: -1- AC_DEFUN([LC_IOV_ITER_RW], [
LB_CHECK_COMPILE([if iov_iter_rw exist],
iov_iter_rw, [
	#include <linux/fs.h>
	#include <linux/uio.h>
],[
	struct iov_iter *iter = NULL;

	iov_iter_rw(iter);
],[
	AC_DEFINE(HAVE_IOV_ITER_RW, 1,
		[iov_iter_rw exist])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1888: -1- AC_DEFUN([LC_HAVE_SYNC_READ_WRITE], [
LB_CHECK_EXPORT([new_sync_read], [fs/read_write.c],
	[AC_DEFINE(HAVE_SYNC_READ_WRITE, 1,
			[new_sync_[read|write] is exported by the kernel])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1899: -1- AC_DEFUN([LC_NEW_CANCEL_DIRTY_PAGE], [
LB_CHECK_COMPILE([if cancel_dirty_page with one argument exist],
new_cancel_dirty_page, [
	#include <linux/mm.h>
],[
	cancel_dirty_page(NULL);
],[
	AC_DEFINE(HAVE_NEW_CANCEL_DIRTY_PAGE, 1,
		[cancel_dirty_page with one arguement is available])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1917: -1- AC_DEFUN([LC_SYMLINK_OPS_USE_NAMEIDATA], [
LB_CHECK_COMPILE([if symlink inode operations have struct nameidata argument],
symlink_use_nameidata, [
	#include <linux/namei.h>
	#include <linux/fs.h>
],[
	struct nameidata *nd = NULL;

	((struct inode_operations *)0)->follow_link(NULL, nd);
	((struct inode_operations *)0)->put_link(NULL, nd, NULL);
],[
	AC_DEFINE(HAVE_SYMLINK_OPS_USE_NAMEIDATA, 1,
		[symlink inode operations need struct nameidata argument])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1938: -1- AC_DEFUN([LC_BIO_ENDIO_USES_ONE_ARG], [
LB_CHECK_COMPILE([if 'bio_endio' with one argument exist],
bio_endio, [
	#include <linux/bio.h>
],[
	bio_endio(NULL);
],[
	AC_DEFINE(HAVE_BIO_ENDIO_USES_ONE_ARG, 1,
		[bio_endio takes only one argument])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1957: -1- AC_DEFUN([LC_HAVE_LOOP_CTL_GET_FREE], [
LB_CHECK_FILE([$LINUX/include/linux/loop.h], [
	LB_CHECK_COMPILE([if have 'HAVE_LOOP_CTL_GET_FREE'],
	LOOP_CTL_GET_FREE, [
		#include <linux/loop.h>
	],[
		int i;

		i = LOOP_CTL_GET_FREE;
	],[
		AC_DEFINE(HAVE_LOOP_CTL_GET_FREE, 1,
			[LOOP_CTL_GET_FREE exist])
	])
],[
	AC_DEFINE(HAVE_LOOP_CTL_GET_FREE, 1,
		[kernel has LOOP_CTL_GET_FREE])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1981: -1- AC_DEFUN([LC_PROG_LINUX], [
	AC_MSG_NOTICE([Lustre kernel checks
==============================================================================])

	LC_CONFIG_PINGER
	LC_CONFIG_CHECKSUM
	LC_CONFIG_HEALTH_CHECK_WRITE
	LC_CONFIG_LRU_RESIZE
	LC_LLITE_LLOOP_MODULE

	LC_GLIBC_SUPPORT_FHANDLES
	LC_CONFIG_RMTCLIENT
	LC_CONFIG_GSS

	# 2.6.32
	LC_BLK_QUEUE_MAX_SEGMENTS

	# 2.6.34
	LC_HAVE_DQUOT_FS_DISK_QUOTA
	LC_HAVE_DQUOT_SUSPEND
	LC_HAVE_ADD_WAIT_QUEUE_EXCLUSIVE

	# 2.6.35, 3.0.0
	LC_FILE_FSYNC
	LC_EXPORT_SIMPLE_SETATTR
	LC_EXPORT_TRUNCATE_COMPLETE_PAGE

	# 2.6.36
	LC_FS_STRUCT_RWLOCK
	LC_SBOPS_EVICT_INODE

	# 2.6.37
	LC_KERNEL_LOCKED

	# 2.6.38
	LC_BLKDEV_GET_BY_DEV
	LC_GENERIC_PERMISSION
	LC_DCACHE_LOCK
	LC_INODE_I_RCU
	LC_D_COMPARE_7ARGS
	LC_D_DELETE_CONST

	# 2.6.39
	LC_REQUEST_QUEUE_UNPLUG_FN
	LC_HAVE_FHANDLE_SYSCALLS
	LC_HAVE_FSTYPE_MOUNT
	LC_IOP_TRUNCATE
	LC_HAVE_INODE_OWNER_OR_CAPABLE
	LC_HAVE_SECURITY_IINITSEC

	# 3.0
	LC_DIRTY_INODE_WITH_FLAG

	# 3.1
	LC_LM_XXX_LOCK_MANAGER_OPS
	LC_INODE_DIO_WAIT
	LC_IOP_GET_ACL
	LC_FILE_LLSEEK_SIZE
	LC_INODE_PERMISION_2ARGS
	LC_RADIX_EXCEPTION_ENTRY
	LC_HAVE_LOOP_CTL_GET_FREE

	# 3.2
	LC_HAVE_VOID_MAKE_REQUEST_FN
	LC_HAVE_PROTECT_I_NLINK

	# 3.3
	LC_HAVE_MIGRATE_HEADER
	LC_MIGRATEPAGE_4ARGS
	LC_SUPEROPS_USE_DENTRY
	LC_INODEOPS_USE_UMODE_T
	LC_HAVE_CACHE_REGISTER

	# 3.4
	LC_HAVE_D_MAKE_ROOT
	LC_KMAP_ATOMIC_HAS_1ARG

	# 3.5
	LC_HAVE_CLEAR_INODE
	LC_HAVE_ENCODE_FH_PARENT
	LC_FILE_LLSEEK_SIZE_5ARG

	# 3.6
	LC_DATA_FOR_LLITE_IS_LIST
	LC_DENTRY_OPEN_USE_PATH
	LC_HAVE_IOP_ATOMIC_OPEN

	# 3.7
	LC_HAVE_POSIXACL_USER_NS

	# 3.8
	LC_HAVE_FILE_F_INODE
	LC_HAVE_SUNRPC_UPCALL_HAS_3ARGS

	# 3.9
	LC_HAVE_HLIST_FOR_EACH_3ARG
	LC_HAVE_BIO_END_SECTOR

	# 3.10
	LC_BLKDEV_RELEASE_RETURN_INT
	LC_HAVE_REMOVE_PROC_SUBTREE
	LC_HAVE_PROC_REMOVE

	# 3.11
	LC_INVALIDATE_RANGE
	LC_HAVE_DIR_CONTEXT
	LC_D_COMPARE_5ARGS
	LC_HAVE_DCOUNT
	LC_HAVE_DENTRY_D_U_D_ALIAS
	LC_HAVE_DENTRY_D_CHILD

	# 3.12
	LC_OLDSIZE_TRUNCATE_PAGECACHE
	LC_KIOCB_KI_LEFT

	# 3.13
	LC_VFS_RENAME_5ARGS
	LC_VFS_UNLINK_3ARGS

	# 3.14
	LC_HAVE_BVEC_ITER
	LC_HAVE_TRUNCATE_IPAGES_FINAL

	# 3.15
	LC_VFS_RENAME_6ARGS

	# 3.16
	LC_DIRECTIO_USE_ITER
	LC_HAVE_IOV_ITER_INIT_DIRECTION
	LC_HAVE_FILE_OPERATIONS_READ_WRITE_ITER

	# 3.17
	LC_KEY_MATCH_DATA

	# 3.18
	LC_PERCPU_COUNTER_INIT
	LC_NFS_FILLDIR_USE_CTX

	# 3.19
	LC_KIOCB_HAS_NBYTES

	# 3.20
	LC_BACKING_DEV_INFO_REMOVAL
	LC_HAVE_BDI_CAP_MAP_COPY

	# 4.0.0
	LC_CANCEL_DIRTY_PAGE

	# 4.1.0
	LC_IOV_ITER_RW
	LC_HAVE_SYNC_READ_WRITE

	# 4.2
	LC_NEW_CANCEL_DIRTY_PAGE
	LC_BIO_ENDIO_USES_ONE_ARG
	LC_SYMLINK_OPS_USE_NAMEIDATA

	#
	AS_IF([test "x$enable_server" != xno], [
		LC_FUNC_DEV_SET_RDONLY
		LC_STACK_SIZE
		LC_QUOTA64
		LC_QUOTA_CONFIG
	])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2152: -1- AC_DEFUN([LC_CONFIG_CLIENT], [
AC_MSG_CHECKING([whether to build Lustre client support])
AC_ARG_ENABLE([client],
	AC_HELP_STRING([--disable-client],
		[disable Lustre client support]),
	[], [enable_client="yes"])
AC_MSG_RESULT([$enable_client])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2164: -1- AC_DEFUN([LB_CONFIG_MPITESTS], [
AC_ARG_ENABLE([mpitests],
	AC_HELP_STRING([--enable-mpitests=<yes|no|mpicc wrapper>],
		       [include mpi tests]), [
		enable_mpitests="yes"
		case $enableval in
		yes)
			MPICC_WRAPPER="mpicc"
			;;
		no)
			enable_mpitests="no"
			;;
		*)
			MPICC_WRAPPER=$enableval
			;;
		esac
	], [
		enable_mpitests="yes"
		MPICC_WRAPPER="mpicc"
	])

	if test "x$enable_mpitests" != "xno"; then
		oldcc=$CC
		CC=$MPICC_WRAPPER
		AC_CACHE_CHECK([whether mpitests can be built],
		lb_cv_mpi_tests, [AC_COMPILE_IFELSE([AC_LANG_SOURCE([
			#include <mpi.h>
			int main(void) {
				int flag;
				MPI_Initialized(&flag);
				return 0;
			}
		])], [lb_cv_mpi_tests="yes"], [lb_cv_mpi_tests="no"])
		])
		enable_mpitests=$lb_cv_mpi_tests
		CC=$oldcc
	fi
	AC_SUBST(MPICC_WRAPPER)
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2209: -1- AC_DEFUN([LC_CONFIG_QUOTA], [
AC_MSG_CHECKING([whether to enable quota support global control])
AC_ARG_ENABLE([quota],
	AC_HELP_STRING([--enable-quota],
		[enable quota support]),
	[], [enable_quota="yes"])
AS_IF([test "x$enable_quota" = xyes],
	[AC_MSG_RESULT([yes])],
	[AC_MSG_RESULT([no])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2223: -1- AC_DEFUN([LC_QUOTA], [
#check global
LC_CONFIG_QUOTA
#check for utils
AS_IF([test "x$enable_quota" != xno -a "x$enable_utils" != xno], [
	AC_CHECK_HEADER([sys/quota.h],
		[AC_DEFINE(HAVE_SYS_QUOTA_H, 1,
			[Define to 1 if you have <sys/quota.h>.])],
		[AC_MSG_ERROR([don't find <sys/quota.h> in your system])])
])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2240: -1- AC_DEFUN([LC_NODEMAP_PROC_DEBUG], [
AC_MSG_CHECKING([whether to enable nodemap proc debug])
AC_ARG_ENABLE([nodemap_proc_debug],
	AC_HELP_STRING([--enable-nodemap-proc-debug],
		[enable nodemap proc debug]),
	[], [enable_nodemap_proc_debug="no"])
AC_MSG_RESULT([$enable_nodemap_proc_debug])
AS_IF([test "x$enable_nodemap_proc_debug" != xno],
	[AC_DEFINE(NODEMAP_PROC_DEBUG, 1,
		[enable nodemap proc debug support])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2258: -1- AC_DEFUN([LC_LLITE_LLOOP_MODULE], [
LB_CHECK_COMPILE([whether to enable 'llite_lloop' module],
enable_llite_lloop_module, [
	#include <asm/page.h>
],[
	#if PAGE_SIZE >= 65536
	#error "PAGE_SIZE >= 65536"
	#endif
],
	[enable_llite_lloop_module="yes"],
	[enable_llite_lloop_module="no"])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2276: -1- AC_DEFUN([LC_OSD_ADDON], [
AC_MSG_CHECKING([whether to use OSD addon])
AC_ARG_WITH([osd],
	AC_HELP_STRING([--with-osd=path],
		[set path to optional osd]),
	[
	case "$with_osd" in
	no)
		ENABLEOSDADDON=0
		;;
	*)
		OSDADDON="$with_osd"
		ENABLEOSDADDON=1
		;;
	esac
	], [
		ENABLEOSDADDON=0
	])
AS_IF([test $ENABLEOSDADDON -eq 0], [
	AC_MSG_RESULT([no])
	OSDADDON=""
], [
	OSDMODNAME=$(basename $OSDADDON)
	AS_IF([test -e $LUSTRE/$OSDMODNAME], [
		AC_MSG_RESULT([can't link])
		OSDADDON=""
	], [ln -s $OSDADDON $LUSTRE/$OSDMODNAME], [
		AC_MSG_RESULT([$OSDMODNAME])
		OSDADDON="subdir-m += $OSDMODNAME"
	], [
		AC_MSG_RESULT([can't link])
		OSDADDON=""
	])
])
AC_SUBST(OSDADDON)
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2318: -1- AC_DEFUN([LC_CONFIGURE], [
AC_MSG_NOTICE([Lustre core checks
==============================================================================])

LC_CONFIG_OBD_BUFFER_SIZE

AS_IF([test $target_cpu == "i686" -o $target_cpu == "x86_64"],
	[CFLAGS="$CFLAGS -Wall -Werror"])

# maximum MDS thread count
LC_MDS_MAX_THREADS

# lustre/utils/gss/gss_util.c
# lustre/utils/gss/gssd_proc.c
# lustre/utils/gss/krb5_util.c
# lustre/utils/llog_reader.c
# lustre/utils/create_iam.c
# lustre/utils/libiam.c
AC_CHECK_HEADERS([netdb.h endian.h])
AC_CHECK_FUNCS([gethostbyname])

# lustre/utils/llverdev.c
AC_CHECK_HEADERS([blkid/blkid.h])

# lustre/utils/llverfs.c
AC_CHECK_HEADERS([ext2fs/ext2fs.h])

SELINUX=""
AC_CHECK_LIB([selinux], [is_selinux_enabled],
	[AC_CHECK_HEADERS([selinux/selinux.h],
			[SELINUX="-lselinux"
			AC_DEFINE([HAVE_SELINUX], 1,
				[support for selinux ])],
			[AC_MSG_WARN([

No libselinux-devel package found, unable to build selinux enabled tools
])
])],
	[AC_MSG_WARN([

No selinux package found, unable to build selinux enabled tools
])
])
AC_SUBST(SELINUX)

# Super safe df
AC_MSG_CHECKING([whether to report minimum OST free space])
AC_ARG_ENABLE([mindf],
	AC_HELP_STRING([--enable-mindf],
		[Make statfs report the minimum available space on any single OST instead of the sum of free space on all OSTs]),
	[], [enable_mindf="no"])
AC_MSG_RESULT([$enable_mindf])
AS_IF([test "$enable_mindf" = "yes"],
	[AC_DEFINE([MIN_DF], 1, [Report minimum OST free space])])

AC_MSG_CHECKING([whether to randomly failing memory alloc])
AC_ARG_ENABLE([fail_alloc],
	AC_HELP_STRING([--disable-fail-alloc],
		[disable randomly alloc failure]),
	[], [enable_fail_alloc="yes"])
AC_MSG_RESULT([$enable_fail_alloc])
AS_IF([test "x$enable_fail_alloc" != xno],
	[AC_DEFINE([RANDOM_FAIL_ALLOC], 1,
		[enable randomly alloc failure])])

AC_MSG_CHECKING([whether to check invariants (expensive cpu-wise)])
AC_ARG_ENABLE([invariants],
	AC_HELP_STRING([--enable-invariants],
		[enable invariant checking (cpu intensive)]),
	[], [enable_invariants="no"])
AC_MSG_RESULT([$enable_invariants])
AS_IF([test "x$enable_invariants" = xyes],
	[AC_DEFINE([CONFIG_LUSTRE_DEBUG_EXPENSIVE_CHECK], 1,
		[enable invariant checking])])

AC_MSG_CHECKING([whether to track references with lu_ref])
AC_ARG_ENABLE([lu_ref],
	AC_HELP_STRING([--enable-lu_ref],
		[enable lu_ref reference tracking code]),
	[], [enable_lu_ref="no"])
AC_MSG_RESULT([$enable_lu_ref])
AS_IF([test "x$enable_lu_ref" = xyes],
	[AC_DEFINE([USE_LU_REF], 1,
		[enable lu_ref reference tracking code])])

AC_MSG_CHECKING([whether to enable page state tracking])
AC_ARG_ENABLE([pgstate-track],
	AC_HELP_STRING([--enable-pgstate-track],
		[enable page state tracking]),
	[], [enable_pgstat_track="no"])
AC_MSG_RESULT([$enable_pgstat_track])
AS_IF([test "x$enable_pgstat_track" = xyes],
	[AC_DEFINE([CONFIG_DEBUG_PAGESTATE_TRACKING], 1,
		[enable page state tracking code])])
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2419: -1- AC_DEFUN([LC_CONDITIONALS], [
AM_CONDITIONAL(MPITESTS, test x$enable_mpitests = xyes, Build MPI Tests)
AM_CONDITIONAL(CLIENT, test x$enable_client = xyes)
AM_CONDITIONAL(SERVER, test x$enable_server = xyes)
AM_CONDITIONAL(SPLIT, test x$enable_split = xyes)
AM_CONDITIONAL(BLKID, test x$ac_cv_header_blkid_blkid_h = xyes)
AM_CONDITIONAL(EXT2FS_DEVEL, test x$ac_cv_header_ext2fs_ext2fs_h = xyes)
AM_CONDITIONAL(GSS, test x$enable_gss = xyes)
AM_CONDITIONAL(GSS_KEYRING, test x$enable_gss_keyring = xyes)
AM_CONDITIONAL(GSS_PIPEFS, test x$enable_gss_pipefs = xyes)
AM_CONDITIONAL(LIBPTHREAD, test x$enable_libpthread = xyes)
AM_CONDITIONAL(LLITE_LLOOP, test x$enable_llite_lloop_module = xyes)
])
m4trace:/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2438: -1- AC_DEFUN([LC_CONFIG_FILES], [AC_CONFIG_FILES([
lustre/Makefile
lustre/autoMakefile
lustre/autoconf/Makefile
lustre/conf/Makefile
lustre/contrib/Makefile
lustre/doc/Makefile
lustre/include/Makefile
lustre/include/lustre_ver.h
lustre/include/lustre/Makefile
lustre/kernel_patches/targets/3.10-rhel7.target
lustre/kernel_patches/targets/2.6-rhel6.7.target
lustre/kernel_patches/targets/2.6-rhel6.6.target
lustre/kernel_patches/targets/2.6-rhel6.target
lustre/kernel_patches/targets/2.6-rhel5.target
lustre/kernel_patches/targets/2.6-sles11.target
lustre/kernel_patches/targets/3.0-sles11.target
lustre/kernel_patches/targets/3.0-sles11sp3.target
lustre/kernel_patches/targets/3.0-sles11sp4.target
lustre/kernel_patches/targets/3.12-sles12.target
lustre/kernel_patches/targets/2.6-fc11.target
lustre/kernel_patches/targets/2.6-fc12.target
lustre/kernel_patches/targets/2.6-fc15.target
lustre/kernel_patches/targets/3.x-fc18.target
lustre/ldlm/Makefile
lustre/fid/Makefile
lustre/fid/autoMakefile
lustre/llite/Makefile
lustre/llite/autoMakefile
lustre/lov/Makefile
lustre/lov/autoMakefile
lustre/mdc/Makefile
lustre/mdc/autoMakefile
lustre/lmv/Makefile
lustre/lmv/autoMakefile
lustre/lfsck/Makefile
lustre/lfsck/autoMakefile
lustre/mdt/Makefile
lustre/mdt/autoMakefile
lustre/mdd/Makefile
lustre/mdd/autoMakefile
lustre/fld/Makefile
lustre/fld/autoMakefile
lustre/obdclass/Makefile
lustre/obdclass/autoMakefile
lustre/obdclass/linux/Makefile
lustre/obdecho/Makefile
lustre/obdecho/autoMakefile
lustre/ofd/Makefile
lustre/ofd/autoMakefile
lustre/osc/Makefile
lustre/osc/autoMakefile
lustre/ost/Makefile
lustre/ost/autoMakefile
lustre/osd-ldiskfs/Makefile
lustre/osd-ldiskfs/autoMakefile
lustre/osd-zfs/Makefile
lustre/osd-zfs/autoMakefile
lustre/mgc/Makefile
lustre/mgc/autoMakefile
lustre/mgs/Makefile
lustre/mgs/autoMakefile
lustre/target/Makefile
lustre/ptlrpc/Makefile
lustre/ptlrpc/autoMakefile
lustre/ptlrpc/gss/Makefile
lustre/ptlrpc/gss/autoMakefile
lustre/quota/Makefile
lustre/quota/autoMakefile
lustre/scripts/Makefile
lustre/tests/Makefile
lustre/tests/mpi/Makefile
lustre/utils/Makefile
lustre/utils/gss/Makefile
lustre/osp/Makefile
lustre/osp/autoMakefile
lustre/lod/Makefile
lustre/lod/autoMakefile
])
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:6: -1- AC_DEFUN([LN_CONFIG_MAX_PAYLOAD], [
AC_MSG_CHECKING([for non-default maximum LNET payload])
AC_ARG_WITH([max-payload-mb],
	AC_HELP_STRING([--with-max-payload-mb=MBytes],
		[set maximum lnet payload in MBytes]),
	[
		AC_MSG_RESULT([$with_max_payload_mb])
		CONFIG_LNET_MAX_PAYLOAD_MB=$with_max_payload_mb
		CONFIG_LNET_MAX_PAYLOAD="(($with_max_payload_mb)<<20)"
	], [
		AC_MSG_RESULT([no])
		CONFIG_LNET_MAX_PAYLOAD="LNET_MTU"
	])
AC_DEFINE_UNQUOTED(CONFIG_LNET_MAX_PAYLOAD, $CONFIG_LNET_MAX_PAYLOAD,
	[Max LNET payload])
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:28: -1- AC_DEFUN([LN_CHECK_GCC_VERSION], [
AC_MSG_CHECKING([compiler version])
PTL_CC_VERSION=`$CC --version | awk '/^gcc/{print $ 3}'`
PTL_MIN_CC_VERSION="3.2.2"
v2n() {
	awk -F. '{printf "%d\n", (($ 1)*100+($ 2))*100+($ 3)}'
}
if test -z "$PTL_CC_VERSION" -o \
	$(echo $PTL_CC_VERSION | v2n) -ge $(echo $PTL_MIN_CC_VERSION | v2n); then
	AC_MSG_RESULT([ok])
else
	AC_MSG_RESULT([Buggy compiler found])
	AC_MSG_ERROR([Need gcc version >= $PTL_MIN_CC_VERSION])
fi
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:49: -1- AC_DEFUN([LN_CONFIG_AFFINITY], [
AC_MSG_CHECKING([whether to enable CPU affinity support])
AC_ARG_ENABLE([affinity],
	AC_HELP_STRING([--disable-affinity],
		[disable process/irq affinity]),
	[], [enable_affinity="yes"])
AC_MSG_RESULT([$enable_affinity])
AS_IF([test "x$enable_affinity" = xyes], [
	LB_CHECK_COMPILE([if Linux kernel has cpu affinity support],
	set_cpus_allowed_ptr, [
		#include <linux/sched.h>
	],[
		struct task_struct *t;
		#if HAVE_CPUMASK_T
		cpumask_t     m;
		#else
		unsigned long m;
		#endif
		set_cpus_allowed_ptr(t, &m);
	],[
		AC_DEFINE(CPU_AFFINITY, 1,
			[kernel has cpu affinity support])
	])
])
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:80: -1- AC_DEFUN([LN_CONFIG_BACKOFF], [
AC_MSG_CHECKING([whether to enable tunable backoff TCP support])
AC_ARG_ENABLE([backoff],
	AC_HELP_STRING([--disable-backoff],
		[disable socknal tunable backoff]),
	[], [enable_backoff="yes"])
AC_MSG_RESULT([$enable_backoff])
AS_IF([test "x$enable_backoff" = xyes], [
	AC_MSG_CHECKING([if Linux kernel has tunable backoff TCP support])
	AS_IF([grep -c TCP_BACKOFF $LINUX/include/linux/tcp.h >/dev/null], [
		AC_MSG_RESULT([yes])
		AC_DEFINE(SOCKNAL_BACKOFF, 1, [use tunable backoff TCP])
		AS_IF([grep rto_max $LINUX/include/linux/tcp.h | grep -q __u16 >/dev/null],
			[AC_DEFINE(SOCKNAL_BACKOFF_MS, 1,
				[tunable backoff TCP in ms])])
	], [
		AC_MSG_RESULT([no])
	])
])
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:110: -1- AC_DEFUN([LN_CONFIG_DLC], [
	AC_CHECK_LIB([yaml],  [yaml_parser_initialize],[
		LIBYAML="libyaml"],[
		LIBYAML=""],[-lm])
	AC_MSG_CHECKING([whether to enable dlc])
	AC_ARG_ENABLE([dlc],
		AC_HELP_STRING([--disable-dlc],
			[disable building dlc]),
			[], [enable_dlc="yes"])
	USE_DLC=""
	AS_IF([test "x$enable_dlc" = xyes],
		[AS_IF([test "x$LIBYAML" = xlibyaml], [
			USE_DLC="yes"
			AC_MSG_RESULT([yes])
		], [
			AC_MSG_RESULT([no (libyaml not present)])
		])
	], [
		AC_MSG_RESULT([no])
	])
	AC_SUBST(USE_DLC)
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:144: -1- AC_DEFUN([LN_CONFIG_O2IB], [
AC_MSG_CHECKING([whether to use Compat RDMA])
AC_ARG_WITH([o2ib],
	AC_HELP_STRING([--with-o2ib=[yes|no|<path>]],
		[build o2iblnd against path]),
	[], [with_o2ib="yes"])

case $with_o2ib in
	yes)    AS_IF([which ofed_info 2>/dev/null], [
			O2IBPATHS=$(ofed_info | egrep -w 'compat-rdma-devel|kernel-ib-devel|ofa_kernel-devel' | xargs rpm -ql | grep '/openib$')
			AS_IF([test -z "$O2IBPATHS"], [
				AC_MSG_ERROR([
You seem to have an OFED installed but have not installed it's devel package.
If you still want to build Lustre for your OFED I/B stack, you need to install its devel headers RPM.
Instead, if you want to build Lustre for your kernel's built-in I/B stack rather than your installed OFED stack, either remove the OFED package(s) or use --with-o2ib=no.
					     ])
			])
			AS_IF([test $(echo $O2IBPATHS | wc -w) -ge 2], [
				AC_MSG_ERROR([
It appears that you have multiple OFED versions installed.
If you still want to build Lustre for your OFED I/B stack, you need to install a single version with its devel headers RPM.
Instead, if you want to build Lustre for your kernel's built-in I/B stack rather than your installed OFED stack, either remove the OFED package(s) or use --with-o2ib=no.
					     ])
			])
			OFED="yes"
		], [
			O2IBPATHS="$LINUX $LINUX/drivers/infiniband"
		])
		ENABLEO2IB="yes"
		;;
	no)     ENABLEO2IB="no"
		;;
	*)      O2IBPATHS=$with_o2ib
		ENABLEO2IB="withpath"
		OFED="yes"
		;;
esac

AS_IF([test $ENABLEO2IB = "no"], [
	AC_MSG_RESULT([no])
], [
	o2ib_found=false
	for O2IBPATH in $O2IBPATHS; do
		AS_IF([test \( -f ${O2IBPATH}/include/rdma/rdma_cm.h -a \
			   -f ${O2IBPATH}/include/rdma/ib_cm.h -a \
			   -f ${O2IBPATH}/include/rdma/ib_verbs.h -a \
			   -f ${O2IBPATH}/include/rdma/ib_fmr_pool.h \)], [
			o2ib_found=true
			break
		])
	done
	if ! $o2ib_found; then
		AC_MSG_RESULT([no])
		case $ENABLEO2IB in
			"yes") AC_MSG_ERROR([no OFED nor kernel OpenIB gen2 headers present]) ;;
			"withpath") AC_MSG_ERROR([bad --with-o2ib path]) ;;
			*) AC_MSG_ERROR([internal error]) ;;
		esac
	else
		COMPAT_AUTOCONF=""
		compatrdma_found=false
		if test -f ${O2IBPATH}/include/linux/compat-2.6.h; then
			AC_MSG_RESULT([yes])
			compatrdma_found=true
			AC_DEFINE(HAVE_COMPAT_RDMA, 1, [compat rdma found])
			EXTRA_OFED_CONFIG="$EXTRA_OFED_CONFIG -include ${O2IBPATH}/include/linux/compat-2.6.h"
			if test -f "$O2IBPATH/include/linux/compat_autoconf.h"; then
				COMPAT_AUTOCONF="$O2IBPATH/include/linux/compat_autoconf.h"
			fi
		else
			AC_MSG_RESULT([no])
		fi
		if ! $compatrdma_found; then
			if test -f "$O2IBPATH/config.mk"; then
				. "$O2IBPATH/config.mk"
			elif test -f "$O2IBPATH/ofed_patch.mk"; then
				. "$O2IBPATH/ofed_patch.mk"
			fi
		elif test -z "$COMPAT_AUTOCONF"; then
			# Depreciated checks
			if test "x$RHEL_KERNEL" = xyes; then
				RHEL_MAJOR=$(awk '/ RHEL_MAJOR / { print [$]3 }' $LINUX_OBJ/include/$VERSION_HDIR/version.h)
				I=$(awk '/ RHEL_MINOR / { print [$]3 }' $LINUX_OBJ/include/$VERSION_HDIR/version.h)
				while test "$I" -ge 0; do
					EXTRA_OFED_INCLUDE="$EXTRA_OFED_INCLUDE -DCONFIG_COMPAT_RHEL_${RHEL_MAJOR}_$I"
					I=$(($I-1))
				done
			elif test "x$SUSE_KERNEL" = xyes; then
				SP=$(grep PATCHLEVEL /etc/SuSE-release | sed -e 's/.*= *//')
				EXTRA_OFED_INCLUDE="$EXTRA_OFED_INCLUDE -DCONFIG_COMPAT_SLES_11_$SP"
			fi
		fi

		AC_MSG_CHECKING([whether to use any OFED backport headers])
		if test -n "$BACKPORT_INCLUDES"; then
			AC_MSG_RESULT([yes])
			OFED_BACKPORT_PATH="$O2IBPATH/${BACKPORT_INCLUDES/*\/kernel_addons/kernel_addons}/"
			EXTRA_OFED_INCLUDE="-I$OFED_BACKPORT_PATH $EXTRA_OFED_INCLUDE"
		else
			AC_MSG_RESULT([no])
		fi

		O2IBLND=""
		O2IBPATH=$(readlink --canonicalize $O2IBPATH)
		EXTRA_OFED_INCLUDE="$EXTRA_OFED_INCLUDE -I$O2IBPATH/include"
		LB_CHECK_COMPILE([whether to enable OpenIB gen2 support],
		openib_gen2_support, [
			#ifdef HAVE_COMPAT_RDMA
			#undef PACKAGE_NAME
			#undef PACKAGE_TARNAME
			#undef PACKAGE_VERSION
			#undef PACKAGE_STRING
			#undef PACKAGE_BUGREPORT
			#undef PACKAGE_URL
			#include <linux/compat-2.6.h>
			#endif
			#include <linux/version.h>
			#include <linux/pci.h>
			#include <linux/gfp.h>
			#include <rdma/rdma_cm.h>
			#include <rdma/ib_cm.h>
			#include <rdma/ib_verbs.h>
			#include <rdma/ib_fmr_pool.h>
		],[
			struct rdma_cm_id      *cm_idi __attribute__ ((unused));
			struct rdma_conn_param  conn_param __attribute__ ((unused));
			struct ib_device_attr   device_attr __attribute__ ((unused));
			struct ib_qp_attr       qp_attr __attribute__ ((unused));
			struct ib_pool_fmr      pool_fmr __attribute__ ((unused));
			enum   ib_cm_rej_reason rej_reason __attribute__ ((unused));
			rdma_destroy_id(NULL);
		],[
			O2IBLND="o2iblnd"
		],[
			case $ENABLEO2IB in
			"yes") AC_MSG_ERROR([can't compile with OpenIB gen2 headers]) ;;
			"withpath") AC_MSG_ERROR([can't compile with OpenIB gen2 headers under $O2IBPATH]) ;;
			*) AC_MSG_ERROR([internal error]) ;;
			esac
		])
		# we know at this point that the found OFED source is good
		O2IB_SYMVER=""
		if test $ENABLEO2IB = "withpath" -o "x$OFED" = "xyes" ; then
			# OFED default rpm not handle sles10 Modules.symvers name
			for name in Module.symvers Modules.symvers; do
				if test -f $O2IBPATH/$name; then
					O2IB_SYMVER=$name;
					break;
				fi
			done
			if test -n "$O2IB_SYMVER"; then
				AC_MSG_NOTICE([adding $O2IBPATH/$O2IB_SYMVER to Symbol Path])
				EXTRA_SYMBOLS="$EXTRA_SYMBOLS $O2IBPATH/$O2IB_SYMVER"
				AC_SUBST(EXTRA_SYMBOLS)
			else
				AC_MSG_ERROR([an external source tree was, either specified or detected, for o2iblnd however I could not find a $O2IBPATH/Module.symvers there])
			fi
		fi

		LB_CHECK_COMPILE([if Linux kernel has kthread_worker],
		linux_kthread_worker, [
			#ifdef HAVE_COMPAT_RDMA
			#undef PACKAGE_NAME
			#undef PACKAGE_TARNAME
			#undef PACKAGE_VERSION
			#undef PACKAGE_STRING
			#undef PACKAGE_BUGREPORT
			#undef PACKAGE_URL
			#include <linux/compat-2.6.h>
			#endif
			#include <linux/kthread.h>
		],[
			struct kthread_work	*kth_wrk __attribute__ ((unused));
			flush_kthread_work(kth_wrk);
		],[
			AC_DEFINE(HAVE_KTHREAD_WORK, 1, [kthread_worker found])
			if test -z "$COMPAT_AUTOCONF"; then
				EXTRA_OFED_INCLUDE="$EXTRA_OFED_INCLUDE -DCONFIG_COMPAT_IS_KTHREAD"
			fi
		])
	fi
])
AC_SUBST(EXTRA_OFED_CONFIG)
AC_SUBST(EXTRA_OFED_INCLUDE)
AC_SUBST(O2IBLND)
AC_SUBST(O2IBPATH)
AC_SUBST(ENABLEO2IB)

# In RHEL 6.2, rdma_create_id() takes the queue-pair type as a fourth argument
AS_IF([test $ENABLEO2IB != "no"], [
	LB_CHECK_COMPILE([if 'rdma_create_id' wants four args],
	rdma_create_id_4args, [
		#ifdef HAVE_COMPAT_RDMA
		#undef PACKAGE_NAME
		#undef PACKAGE_TARNAME
		#undef PACKAGE_VERSION
		#undef PACKAGE_STRING
		#undef PACKAGE_BUGREPORT
		#undef PACKAGE_URL
		#include <linux/compat-2.6.h>
		#endif
		#include <rdma/rdma_cm.h>
	],[
		rdma_create_id(NULL, NULL, 0, 0);
	],[
		AC_DEFINE(HAVE_RDMA_CREATE_ID_4ARG, 1,
			[rdma_create_id wants 4 args])
	])
])
#
# 4.2 introduced struct ib_cq_init_attr which is used
# by ib_create_cq(). Note some OFED stacks only keep
# their headers in sync with latest kernels but not
# the functionality which means for infiniband testing
# we need to always test functionality testings.
#
AS_IF([test $ENABLEO2IB != "no"], [
	LB_CHECK_COMPILE([if 'struct ib_cq_init_attr' is used],
	ib_cq_init_attr, [
		#ifdef HAVE_COMPAT_RDMA
		#undef PACKAGE_NAME
		#undef PACKAGE_TARNAME
		#undef PACKAGE_VERSION
		#undef PACKAGE_STRING
		#undef PACKAGE_BUGREPORT
		#undef PACKAGE_URL
		#include <linux/compat-2.6.h>
		#endif
		#include <rdma/ib_verbs.h>
	],[
		struct ib_cq_init_attr cq_attr;

		ib_create_cq(NULL, NULL, NULL, NULL, &cq_attr);
	],[
		AC_DEFINE(HAVE_IB_CQ_INIT_ATTR, 1,
			[struct ib_cq_init_attr is used by ib_create_cq])
	])
])
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:389: -1- AC_DEFUN([LN_CONFIG_GNILND], [
AC_MSG_CHECKING([whether to enable GNI lnd])
AC_ARG_ENABLE([gni],
	AC_HELP_STRING([--enable-gni],
		[enable GNI lnd]),
	[], [enable_gni="no"])
AC_MSG_RESULT([$enable_gni])

AS_IF([test "x$enable_gni" = xyes], [
	# GNICPPFLAGS was set in spec file
	EXTRA_KCFLAGS_save="$EXTRA_KCFLAGS"
	EXTRA_KCFLAGS="$EXTRA_KCFLAGS $GNICPPFLAGS"
	LB_CHECK_COMPILE([if GNI kernel headers are present],
	GNI_header, [
		#include <linux/types.h>
		#include <gni_pub.h>
	],[
		gni_cdm_handle_t kgni_domain;
		gni_return_t	 rc;
		int		 rrc;
		rc = gni_cdm_create(0, 1, 1, 0, &kgni_domain);
		rrc = (rc == GNI_RC_SUCCESS) ? 0 : 1;
		return rrc;
	],[
		GNILND="gnilnd"
	],[
		AC_MSG_ERROR([can't compile gnilnd with given GNICPPFLAGS: $GNICPPFLAGS])
	])
	# at this point, we have gnilnd basic support,
	# now check for extra features
	LB_CHECK_COMPILE([to use RCA in gnilnd],
	RCA_gnilnd, [
		#include <linux/types.h>
		#include <gni_pub.h>
		#include <krca_lib.h>
	],[
		gni_cdm_handle_t kgni_domain;
		gni_return_t	 rc;
		krca_ticket_t	 ticket = KRCA_NULL_TICKET;
		int		 rrc;
		__u32		 nid = 0, nic_addr;
		rc = gni_cdm_create(0, 1, 1, 0, &kgni_domain);
		rrc = (rc == GNI_RC_SUCCESS) ? 0 : 1;
		rrc += krca_nid_to_nicaddrs(nid, 1, &nic_addr);
		rrc += krca_register(&ticket, RCA_MAKE_SERVICE_INDEX(RCA_IO_CLASS, 9), 99, 0);
		return rrc;
	],[
		GNICPPFLAGS="$GNICPPFLAGS -DGNILND_USE_RCA=1"
	])
	EXTRA_KCFLAGS="$EXTRA_KCFLAGS_save"
])
AC_SUBST(GNICPPFLAGS)
AC_SUBST(GNILND)
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:449: -1- AC_DEFUN([LN_CONFIG_SK_SLEEP], [
LB_CHECK_COMPILE([if Linux kernel has 'sk_sleep'],
sk_sleep, [
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <net/sock.h>
],[
	sk_sleep(NULL);
],[
	AC_DEFINE(HAVE_SK_SLEEP, 1,
		  [kernel has sk_sleep])
])
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:475: -1- AC_DEFUN([LN_CONFIG_TCP_SENDPAGE], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'tcp_sendpage' first parameter is socket],
tcp_sendpage_socket, [
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <linux/net.h>
	#include <net/tcp.h>
],[
	tcp_sendpage((struct socket*)0, NULL, 0, 0, 0);
],[
	AC_DEFINE(HAVE_TCP_SENDPAGE_USE_SOCKET, 1,
		[tcp_sendpage use socket as first parameter])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:505: -1- AC_DEFUN([LN_CONFIG_SK_DATA_READY], [
tmp_flags="$EXTRA_KCFLAGS"
EXTRA_KCFLAGS="-Werror"
LB_CHECK_COMPILE([if 'sk_data_ready' takes only one argument],
sk_data_ready, [
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <linux/net.h>
	#include <net/sock.h>
],[
	((struct sock *)0)->sk_data_ready(NULL);
],[
	AC_DEFINE(HAVE_SK_DATA_READY_ONE_ARG, 1,
		[sk_data_ready uses only one argument])
])
EXTRA_KCFLAGS="$tmp_flags"
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:535: -1- AC_DEFUN([LN_PROG_LINUX], [
AC_MSG_NOTICE([LNet kernel checks
==============================================================================])

LN_CONFIG_AFFINITY
LN_CONFIG_BACKOFF
LN_CONFIG_O2IB
LN_CONFIG_GNILND
# 2.6.35
LN_CONFIG_SK_SLEEP
# 2.6.36
LN_CONFIG_TCP_SENDPAGE
# 3.15
LN_CONFIG_SK_DATA_READY
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:556: -1- AC_DEFUN([LN_PATH_DEFAULTS], [
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:564: -1- AC_DEFUN([LN_CONFIGURE], [
AC_MSG_NOTICE([LNet core checks
==============================================================================])

# lnet/utils/portals.c
AC_CHECK_HEADERS([netdb.h])
AC_CHECK_FUNCS([gethostbyname])

# lnet/utils/wirecheck.c
AC_CHECK_FUNCS([strnlen])

# --------  Check for required packages  --------------

AC_MSG_CHECKING([whether to enable 'efence' debugging support])
AC_ARG_ENABLE(efence,
	AC_HELP_STRING([--enable-efence],
		[use efence library]),
	[], [enable_efence="no"])
AC_MSG_RESULT([$enable_efence])

LIBEFENCE=""
AS_IF([test "$enable_efence" = yes], [
	LIBEFENCE="-lefence"
	AC_DEFINE(HAVE_LIBEFENCE, 1,
		[libefence support is requested])
])
AC_SUBST(LIBEFENCE)

LN_CONFIG_MAX_PAYLOAD
LN_CONFIG_DLC
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:601: -1- AC_DEFUN([LN_CONDITIONALS], [
AM_CONDITIONAL(BUILD_O2IBLND,    test x$O2IBLND = "xo2iblnd")
AM_CONDITIONAL(BUILD_GNILND,     test x$GNILND  = "xgnilnd")
AM_CONDITIONAL(BUILD_DLC,        test x$USE_DLC = "xyes")
])
m4trace:/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:612: -1- AC_DEFUN([LN_CONFIG_FILES], [
AC_CONFIG_FILES([
lnet/Makefile
lnet/autoMakefile
lnet/autoconf/Makefile
lnet/doc/Makefile
lnet/include/Makefile
lnet/include/lnet/Makefile
lnet/klnds/Makefile
lnet/klnds/autoMakefile
lnet/klnds/o2iblnd/Makefile
lnet/klnds/o2iblnd/autoMakefile
lnet/klnds/gnilnd/Makefile
lnet/klnds/gnilnd/autoMakefile
lnet/klnds/socklnd/Makefile
lnet/klnds/socklnd/autoMakefile
lnet/lnet/Makefile
lnet/lnet/autoMakefile
lnet/selftest/Makefile
lnet/selftest/autoMakefile
lnet/utils/Makefile
lnet/utils/lnetconfig/Makefile
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:6: -1- AC_DEFUN([LIBCFS_CONFIG_CDEBUG], [
AC_MSG_CHECKING([whether to enable CDEBUG, CWARN])
AC_ARG_ENABLE([libcfs_cdebug],
	AC_HELP_STRING([--disable-libcfs-cdebug],
		[disable libcfs CDEBUG, CWARN]),
	[], [enable_libcfs_cdebug="yes"])
AC_MSG_RESULT([$enable_libcfs_cdebug])
AS_IF([test "x$enable_libcfs_cdebug" = xyes],
	[AC_DEFINE(CDEBUG_ENABLED, 1, [enable libcfs CDEBUG, CWARN])])

AC_MSG_CHECKING([whether to enable ENTRY/EXIT])
AC_ARG_ENABLE([libcfs_trace],
	AC_HELP_STRING([--disable-libcfs-trace],
		[disable libcfs ENTRY/EXIT]),
	[], [enable_libcfs_trace="yes"])
AC_MSG_RESULT([$enable_libcfs_trace])
AS_IF([test "x$enable_libcfs_trace" = xyes],
	[AC_DEFINE(CDEBUG_ENTRY_EXIT, 1, [enable libcfs ENTRY/EXIT])])

AC_MSG_CHECKING([whether to enable LASSERT, LASSERTF])
AC_ARG_ENABLE([libcfs_assert],
	AC_HELP_STRING([--disable-libcfs-assert],
		[disable libcfs LASSERT, LASSERTF]),
	[], [enable_libcfs_assert="yes"])
AC_MSG_RESULT([$enable_libcfs_assert])
AS_IF([test x$enable_libcfs_assert = xyes],
	[AC_DEFINE(LIBCFS_DEBUG, 1, [enable libcfs LASSERT, LASSERTF])])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:40: -1- AC_DEFUN([LIBCFS_CONFIG_PANIC_DUMPLOG], [
AC_MSG_CHECKING([whether to use tunable 'panic_dumplog' support])
AC_ARG_ENABLE([panic_dumplog],
	AC_HELP_STRING([--enable-panic_dumplog],
		[enable panic_dumplog]),
	[], [enable_panic_dumplog="no"])
AC_MSG_RESULT([$enable_panic_dumplog])
AS_IF([test "x$enable_panic_dumplog" = xyes],
	[AC_DEFINE(LNET_DUMP_ON_PANIC, 1, [use dumplog on panic])])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:56: -1- AC_DEFUN([LIBCFS_STACKTRACE_OPS_HAVE_WALK_STACK], [
LB_CHECK_COMPILE([if 'struct stacktrace_ops' has 'walk_stack' field],
stacktrace_ops_walk_stack, [
	#include <asm/stacktrace.h>
],[
	((struct stacktrace_ops *)0)->walk_stack(NULL, NULL, 0, NULL, NULL, NULL, NULL);
],[
	AC_DEFINE(STACKTRACE_OPS_HAVE_WALK_STACK, 1,
		['struct stacktrace_ops' has 'walk_stack' field])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:73: -1- AC_DEFUN([LIBCFS_STACKTRACE_WARNING], [
LB_CHECK_COMPILE([if 'stacktrace_ops.warning' is exist],
stacktrace_ops_warning, [
	struct task_struct;
	struct pt_regs;
	#include <asm/stacktrace.h>
],[
	((struct stacktrace_ops *)0)->warning(NULL, NULL);
],[
	AC_DEFINE(HAVE_STACKTRACE_WARNING, 1,
		[stacktrace_ops.warning is exist])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:92: -1- AC_DEFUN([LC_SHRINKER_WANT_SHRINK_PTR], [
LB_CHECK_COMPILE([if 'shrinker' want self pointer in handler],
shrink_self_pointer, [
	#include <linux/mm.h>
],[
	struct shrinker *tmp = NULL;
	tmp->shrink(tmp, 0, 0);
],[
	AC_DEFINE(HAVE_SHRINKER_WANT_SHRINK_PTR, 1,
		[shrinker want self pointer in handler])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:110: -1- AC_DEFUN([LIBCFS_SYSCTL_CTLNAME], [
LB_CHECK_COMPILE([if 'ctl_table' has a 'ctl_name' field],
ctl_table_ctl_name, [
	#include <linux/sysctl.h>
],[
	struct ctl_table ct;
	ct.ctl_name = sizeof(ct);
],[
	AC_DEFINE(HAVE_SYSCTL_CTLNAME, 1,
		[ctl_table has ctl_name field])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:128: -1- AC_DEFUN([LIBCFS_KSTRTOUL], [
LB_CHECK_COMPILE([if Linux kernel has 'kstrtoul'],
kstrtoul, [
	#include <linux/kernel.h>
],[
	unsigned long result;
	return kstrtoul("12345", 0, &result);
],[
	AC_DEFINE(HAVE_KSTRTOUL, 1,
		[kernel has kstrtoul])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:146: -1- AC_DEFUN([LIBCFS_DUMP_TRACE_ADDRESS], [
LB_CHECK_COMPILE([if 'dump_trace' want address],
dump_trace_address, [
	struct task_struct;
	struct pt_regs;
	#include <asm/stacktrace.h>
],[
	dump_trace(NULL, NULL, NULL, 0, NULL, NULL);
],[
	AC_DEFINE(HAVE_DUMP_TRACE_ADDRESS, 1,
		[dump_trace want address argument])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:166: -1- AC_DEFUN([LC_SHRINK_CONTROL], [
LB_CHECK_COMPILE([if 'shrink_control' is present],
shrink_control, [
	#include <linux/atomic.h>
	#include <linux/mm.h>
],[
	struct shrink_control tmp = {0};
	tmp.nr_to_scan = sizeof(tmp);
],[
	AC_DEFINE(HAVE_SHRINK_CONTROL, 1,
		[shrink_control is present])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:184: -1- AC_DEFUN([LIBCFS_PROCESS_NAMESPACE], [
LB_CHECK_LINUX_HEADER([linux/uidgid.h], [
	AC_DEFINE(HAVE_UIDGID_HEADER, 1,
		[uidgid.h is present])])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:196: -1- AC_DEFUN([LIBCFS_I_UID_READ], [
LB_CHECK_COMPILE([if 'i_uid_read' is present],
i_uid_read, [
	#include <linux/fs.h>
],[
	i_uid_read(NULL);
],[
	AC_DEFINE(HAVE_I_UID_READ, 1, [i_uid_read is present])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:214: -1- AC_DEFUN([LIBCFS_SOCK_ALLOC_FILE], [
LB_CHECK_EXPORT([sock_alloc_file], [net/socket.c], [
	LB_CHECK_COMPILE([if 'sock_alloc_file' takes 3 arguments],
	sock_alloc_file_3args, [
		#include <linux/net.h>
	],[
		sock_alloc_file(NULL, 0, NULL);
	],[
		AC_DEFINE(HAVE_SOCK_ALLOC_FILE_3ARGS, 1,
			[sock_alloc_file takes 3 arguments])
	],[
		AC_DEFINE(HAVE_SOCK_ALLOC_FILE, 1,
			[sock_alloc_file is exported])
	])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:234: -1- AC_DEFUN([LIBCFS_HAVE_CRC32], [
LB_CHECK_CONFIG_IM([CRC32],
	[have_crc32="yes"], [have_crc32="no"])
AS_IF([test "x$have_crc32" = xyes],
	[AC_DEFINE(HAVE_CRC32, 1,
		[kernel compiled with CRC32 functions])])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:245: -1- AC_DEFUN([LIBCFS_ENABLE_CRC32_ACCEL], [
LB_CHECK_CONFIG_IM([CRYPTO_CRC32_PCLMUL],
	[enable_crc32_crypto="no"], [enable_crc32_crypto="yes"])
AS_IF([test "x$have_crc32" = xyes -a "x$enable_crc32_crypto" = xyes], [
	AC_DEFINE(NEED_CRC32_ACCEL, 1, [need pclmulqdq based crc32])
	AC_MSG_WARN([

No crc32 pclmulqdq crypto api found, enable internal pclmulqdq based crc32
])])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:259: -1- AC_DEFUN([LIBCFS_ENABLE_CRC32C_ACCEL], [
LB_CHECK_CONFIG_IM([CRYPTO_CRC32C_INTEL],
	[enable_crc32c_crypto="no"], [enable_crc32c_crypto="yes"])
AS_IF([test "x$enable_crc32c_crypto" = xyes], [
	AC_DEFINE(NEED_CRC32C_ACCEL, 1, [need pclmulqdq based crc32c])
	AC_MSG_WARN([

No crc32c pclmulqdq crypto api found, enable internal pclmulqdq based crc32c
])])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:273: -1- AC_DEFUN([LIBCFS_SHRINKER_COUNT], [
LB_CHECK_COMPILE([shrinker has 'count_objects'],
shrinker_count_objects, [
	#include <linux/mmzone.h>
	#include <linux/shrinker.h>
],[
	((struct shrinker*)0)->count_objects(NULL, NULL);
],[
	AC_DEFINE(HAVE_SHRINKER_COUNT, 1,
		[shrinker has count_objects member])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:290: -1- AC_DEFUN([LIBCFS_HLIST_ADD_AFTER], [
LB_CHECK_COMPILE([does function 'hlist_add_after' exist],
hlist_add_after, [
	#include <linux/list.h>
],[
	hlist_add_after(NULL, NULL);
],[
	AC_DEFINE(HAVE_HLIST_ADD_AFTER, 1,
		[hlist_add_after is available])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:306: -1- AC_DEFUN([LIBCFS_HAVE_TOPOLOGY_SIBLING_CPUMASK], [
LB_CHECK_COMPILE([does function 'topology_sibling_cpumask' exist],
topology_sibling_cpumask, [
	#include <linux/topology.h>
],[
	const struct cpumask *mask;

	mask = topology_sibling_cpumask(0);
],[
	AC_DEFINE(HAVE_TOPOLOGY_SIBLING_CPUMASK, 1,
		[topology_sibling_cpumask is available])
])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:325: -1- AC_DEFUN([LIBCFS_PROG_LINUX], [
AC_MSG_NOTICE([LibCFS kernel checks
==============================================================================])
LIBCFS_CONFIG_PANIC_DUMPLOG

# 2.6.32
LIBCFS_STACKTRACE_OPS_HAVE_WALK_STACK
LC_SHRINKER_WANT_SHRINK_PTR
# 2.6.33
LIBCFS_SYSCTL_CTLNAME
# 2.6.38
LIBCFS_KSTRTOUL
# 2.6.39
LIBCFS_DUMP_TRACE_ADDRESS
# 2.6.40 fc15
LC_SHRINK_CONTROL
# 3.0
LIBCFS_STACKTRACE_WARNING
# 3.5
LIBCFS_PROCESS_NAMESPACE
LIBCFS_I_UID_READ
# 3.7
LIBCFS_SOCK_ALLOC_FILE
# 3.8
LIBCFS_HAVE_CRC32
LIBCFS_ENABLE_CRC32_ACCEL
# 3.10
LIBCFS_ENABLE_CRC32C_ACCEL
# 3.12
LIBCFS_SHRINKER_COUNT
# 3.17
LIBCFS_HLIST_ADD_AFTER
# 4.2
LIBCFS_HAVE_TOPOLOGY_SIBLING_CPUMASK
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:366: -1- AC_DEFUN([LIBCFS_PATH_DEFAULTS], [
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:374: -1- AC_DEFUN([LIBCFS_CONFIGURE], [
AC_MSG_NOTICE([LibCFS core checks
==============================================================================])

# lnet/utils/portals.c
AC_CHECK_HEADERS([asm/types.h endian.h sys/ioctl.h])

# lnet/utils/debug.c
AC_CHECK_HEADERS([linux/version.h])

AC_CHECK_TYPE([spinlock_t],
	[AC_DEFINE(HAVE_SPINLOCK_T, 1, [spinlock_t is defined])],
	[],
	[#include <linux/spinlock.h>])

# lnet/utils/wirecheck.c
AC_CHECK_FUNCS([strnlen])

# lnet/libcfs/user-prim.c, missing for RHEL5 and earlier userspace
AC_CHECK_FUNCS([strlcpy])

# libcfs/libcfs/user-prim.c, missing for RHEL5 and earlier userspace
AC_CHECK_FUNCS([strlcat])

# libcfs/include/libcfs/linux/linux-prim.h, ...
AC_CHECK_HEADERS([linux/types.h sys/types.h linux/unistd.h unistd.h])

# libcfs/include/libcfs/linux/linux-prim.h
AC_CHECK_HEADERS([linux/random.h], [], [],
		 [#ifdef HAVE_LINUX_TYPES_H
		  #include <linux/types.h>
		  #endif
		 ])

# libcfs/include/libcfs/linux/libcfs.h
# libcfs/include/libcfs/byteorder.h
# libcfs/libcfs/util/nidstrings.c
AC_CHECK_HEADERS([netdb.h asm/types.h endian.h])
AC_CHECK_FUNCS([gethostbyname])

# --------  Check for required packages  --------------

AC_MSG_NOTICE([LibCFS required packages checks
==============================================================================])

AC_MSG_CHECKING([whether to enable readline support])
AC_ARG_ENABLE(readline,
	AC_HELP_STRING([--disable-readline],
		[disable readline support]),
	[], [enable_readline="yes"])
AC_MSG_RESULT([$enable_readline])

LIBREADLINE=""
AS_IF([test "x$enable_readline" = xyes], [
	AC_CHECK_LIB([readline], [readline], [
		LIBREADLINE="-lreadline"
		AC_DEFINE(HAVE_LIBREADLINE, 1,
			[readline library is available])
	])
])
AC_SUBST(LIBREADLINE)

AC_MSG_CHECKING([whether to use libpthread for libcfs library])
AC_ARG_ENABLE([libpthread],
	AC_HELP_STRING([--disable-libpthread],
		[disable libpthread]),
	[], [enable_libpthread="yes"])
AC_MSG_RESULT([$enable_libpthread])

PTHREAD_LIBS=""
AS_IF([test "x$enable_libpthread" = xyes], [
	AC_CHECK_LIB([pthread], [pthread_create], [
		PTHREAD_LIBS="-lpthread"
		AC_DEFINE([HAVE_LIBPTHREAD], 1,
			[use libpthread for libcfs library])
	])
], [
	AC_MSG_WARN([Using libpthread for libcfs library is disabled explicitly])
])
AC_SUBST(PTHREAD_LIBS)
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:459: -1- AC_DEFUN([LIBCFS_CONDITIONALS], [
AM_CONDITIONAL(HAVE_CRC32, [test "x$have_crc32" = xyes])
AM_CONDITIONAL(NEED_PCLMULQDQ_CRC32,  [test "x$have_crc32" = xyes -a "x$enable_crc32_crypto" = xyes])
AM_CONDITIONAL(NEED_PCLMULQDQ_CRC32C, [test "x$enable_crc32c_crypto" = xyes])
])
m4trace:/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:470: -1- AC_DEFUN([LIBCFS_CONFIG_FILES], [
AC_CONFIG_FILES([
libcfs/Makefile
libcfs/autoMakefile
libcfs/autoconf/Makefile
libcfs/include/Makefile
libcfs/include/libcfs/Makefile
libcfs/include/libcfs/linux/Makefile
libcfs/include/libcfs/util/Makefile
libcfs/libcfs/Makefile
libcfs/libcfs/autoMakefile
libcfs/libcfs/linux/Makefile
libcfs/libcfs/util/Makefile
])
])
m4trace:/home/build/lustre-release/config/libtool.m4:67: -1- AC_DEFUN([LT_INIT], [AC_PREREQ([2.58])dnl We use AC_INCLUDES_DEFAULT
AC_BEFORE([$0], [LT_LANG])dnl
AC_BEFORE([$0], [LT_OUTPUT])dnl
AC_BEFORE([$0], [LTDL_INIT])dnl
m4_require([_LT_CHECK_BUILDDIR])dnl

dnl Autoconf doesn't catch unexpanded LT_ macros by default:
m4_pattern_forbid([^_?LT_[A-Z_]+$])dnl
m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])dnl
dnl aclocal doesn't pull ltoptions.m4, ltsugar.m4, or ltversion.m4
dnl unless we require an AC_DEFUNed macro:
AC_REQUIRE([LTOPTIONS_VERSION])dnl
AC_REQUIRE([LTSUGAR_VERSION])dnl
AC_REQUIRE([LTVERSION_VERSION])dnl
AC_REQUIRE([LTOBSOLETE_VERSION])dnl
m4_require([_LT_PROG_LTMAIN])dnl

dnl Parse OPTIONS
_LT_SET_OPTIONS([$0], [$1])

# This can be used to rebuild libtool when needed
LIBTOOL_DEPS="$ltmain"

# Always use our own libtool.
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
AC_SUBST(LIBTOOL)dnl

_LT_SETUP

# Only expand once:
m4_define([LT_INIT])
])
m4trace:/home/build/lustre-release/config/libtool.m4:102: -1- AU_DEFUN([AC_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:102: -1- AC_DEFUN([AC_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:103: -1- AU_DEFUN([AM_PROG_LIBTOOL], [m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:103: -1- AC_DEFUN([AM_PROG_LIBTOOL], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LIBTOOL' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_INIT], [LT_INIT($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:562: -1- AC_DEFUN([LT_OUTPUT], [: ${CONFIG_LT=./config.lt}
AC_MSG_NOTICE([creating $CONFIG_LT])
cat >"$CONFIG_LT" <<_LTEOF
#! $SHELL
# Generated by $as_me.
# Run this file to recreate a libtool stub with the current configuration.

lt_cl_silent=false
SHELL=\${CONFIG_SHELL-$SHELL}
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AS_SHELL_SANITIZE
_AS_PREPARE

exec AS_MESSAGE_FD>&1
exec AS_MESSAGE_LOG_FD>>config.log
{
  echo
  AS_BOX([Running $as_me.])
} >&AS_MESSAGE_LOG_FD

lt_cl_help="\
\`$as_me' creates a local libtool stub from the current configuration,
for use in further configure time tests before the real libtool is
generated.

Usage: $[0] [[OPTIONS]]

  -h, --help      print this help, then exit
  -V, --version   print version number, then exit
  -q, --quiet     do not print progress messages
  -d, --debug     don't remove temporary files

Report bugs to <bug-libtool@gnu.org>."

lt_cl_version="\
m4_ifset([AC_PACKAGE_NAME], [AC_PACKAGE_NAME ])config.lt[]dnl
m4_ifset([AC_PACKAGE_VERSION], [ AC_PACKAGE_VERSION])
configured by $[0], generated by m4_PACKAGE_STRING.

Copyright (C) 2008 Free Software Foundation, Inc.
This config.lt script is free software; the Free Software Foundation
gives unlimited permision to copy, distribute and modify it."

while test $[#] != 0
do
  case $[1] in
    --version | --v* | -V )
      echo "$lt_cl_version"; exit 0 ;;
    --help | --h* | -h )
      echo "$lt_cl_help"; exit 0 ;;
    --debug | --d* | -d )
      debug=: ;;
    --quiet | --q* | --silent | --s* | -q )
      lt_cl_silent=: ;;

    -*) AC_MSG_ERROR([unrecognized option: $[1]
Try \`$[0] --help' for more information.]) ;;

    *) AC_MSG_ERROR([unrecognized argument: $[1]
Try \`$[0] --help' for more information.]) ;;
  esac
  shift
done

if $lt_cl_silent; then
  exec AS_MESSAGE_FD>/dev/null
fi
_LTEOF

cat >>"$CONFIG_LT" <<_LTEOF
_LT_OUTPUT_LIBTOOL_COMMANDS_INIT
_LTEOF

cat >>"$CONFIG_LT" <<\_LTEOF
AC_MSG_NOTICE([creating $ofile])
_LT_OUTPUT_LIBTOOL_COMMANDS
AS_EXIT(0)
_LTEOF
chmod +x "$CONFIG_LT"

# configure is writing to config.log, but config.lt does its own redirection,
# appending to config.log, which fails on DOS, as config.log is still kept
# open by configure.  Here we exec the FD to /dev/null, effectively closing
# config.log, so it can be properly (re)opened and appended to by config.lt.
if test "$no_create" != yes; then
  lt_cl_success=:
  test "$silent" = yes &&
    lt_config_lt_args="$lt_config_lt_args --quiet"
  exec AS_MESSAGE_LOG_FD>/dev/null
  $SHELL "$CONFIG_LT" $lt_config_lt_args || lt_cl_success=false
  exec AS_MESSAGE_LOG_FD>>config.log
  $lt_cl_success || AS_EXIT(1)
fi
])
m4trace:/home/build/lustre-release/config/libtool.m4:757: -1- AC_DEFUN([LT_SUPPORTED_TAG], [])
m4trace:/home/build/lustre-release/config/libtool.m4:768: -1- AC_DEFUN([LT_LANG], [AC_BEFORE([$0], [LT_OUTPUT])dnl
m4_case([$1],
  [C],			[_LT_LANG(C)],
  [C++],		[_LT_LANG(CXX)],
  [Java],		[_LT_LANG(GCJ)],
  [Fortran 77],		[_LT_LANG(F77)],
  [Fortran],		[_LT_LANG(FC)],
  [Windows Resource],	[_LT_LANG(RC)],
  [m4_ifdef([_LT_LANG_]$1[_CONFIG],
    [_LT_LANG($1)],
    [m4_fatal([$0: unsupported language: "$1"])])])dnl
])
m4trace:/home/build/lustre-release/config/libtool.m4:830: -1- AU_DEFUN([AC_LIBTOOL_CXX], [LT_LANG(C++)])
m4trace:/home/build/lustre-release/config/libtool.m4:830: -1- AC_DEFUN([AC_LIBTOOL_CXX], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_CXX' is obsolete.
You should run autoupdate.])dnl
LT_LANG(C++)])
m4trace:/home/build/lustre-release/config/libtool.m4:831: -1- AU_DEFUN([AC_LIBTOOL_F77], [LT_LANG(Fortran 77)])
m4trace:/home/build/lustre-release/config/libtool.m4:831: -1- AC_DEFUN([AC_LIBTOOL_F77], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_F77' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran 77)])
m4trace:/home/build/lustre-release/config/libtool.m4:832: -1- AU_DEFUN([AC_LIBTOOL_FC], [LT_LANG(Fortran)])
m4trace:/home/build/lustre-release/config/libtool.m4:832: -1- AC_DEFUN([AC_LIBTOOL_FC], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_FC' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Fortran)])
m4trace:/home/build/lustre-release/config/libtool.m4:833: -1- AU_DEFUN([AC_LIBTOOL_GCJ], [LT_LANG(Java)])
m4trace:/home/build/lustre-release/config/libtool.m4:833: -1- AC_DEFUN([AC_LIBTOOL_GCJ], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_GCJ' is obsolete.
You should run autoupdate.])dnl
LT_LANG(Java)])
m4trace:/home/build/lustre-release/config/libtool.m4:1402: -1- AC_DEFUN([_LT_COMPILER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   m4_if([$4], , [ac_outfile=conftest.$ac_objext], [ac_outfile=$4])
   echo "$lt_simple_compile_test_code" > conftest.$ac_ext
   lt_compiler_flag="$3"
   # Insert the option either (1) after the last *FLAGS variable, or
   # (2) before a word containing "conftest.", or (3) at the end.
   # Note that $ac_compile itself does not contain backslashes and begins
   # with a dollar sign (not a hyphen), so the echo should work correctly.
   # The option is referenced via a variable to avoid confusing sed.
   lt_compile=`echo "$ac_compile" | $SED \
   -e 's:.*FLAGS}\{0,1\} :&$lt_compiler_flag :; t' \
   -e 's: [[^ ]]*conftest\.: $lt_compiler_flag&:; t' \
   -e 's:$: $lt_compiler_flag:'`
   (eval echo "\"\$as_me:__oline__: $lt_compile\"" >&AS_MESSAGE_LOG_FD)
   (eval "$lt_compile" 2>conftest.err)
   ac_status=$?
   cat conftest.err >&AS_MESSAGE_LOG_FD
   echo "$as_me:__oline__: \$? = $ac_status" >&AS_MESSAGE_LOG_FD
   if (exit $ac_status) && test -s "$ac_outfile"; then
     # The compiler can only warn and ignore the option if not recognized
     # So say no if there are warnings other than the usual output.
     $ECHO "X$_lt_compiler_boilerplate" | $Xsed -e '/^$/d' >conftest.exp
     $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
     if test ! -s conftest.er2 || diff conftest.exp conftest.er2 >/dev/null; then
       $2=yes
     fi
   fi
   $RM conftest*
])

if test x"[$]$2" = xyes; then
    m4_if([$5], , :, [$5])
else
    m4_if([$6], , :, [$6])
fi
])
m4trace:/home/build/lustre-release/config/libtool.m4:1444: -1- AU_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:1444: -1- AC_DEFUN([AC_LIBTOOL_COMPILER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_COMPILER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_COMPILER_OPTION], [_LT_COMPILER_OPTION($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:1453: -1- AC_DEFUN([_LT_LINKER_OPTION], [m4_require([_LT_FILEUTILS_DEFAULTS])dnl
m4_require([_LT_DECL_SED])dnl
AC_CACHE_CHECK([$1], [$2],
  [$2=no
   save_LDFLAGS="$LDFLAGS"
   LDFLAGS="$LDFLAGS $3"
   echo "$lt_simple_link_test_code" > conftest.$ac_ext
   if (eval $ac_link 2>conftest.err) && test -s conftest$ac_exeext; then
     # The linker can only warn and ignore the option if not recognized
     # So say no if there are warnings
     if test -s conftest.err; then
       # Append any errors to the config.log.
       cat conftest.err 1>&AS_MESSAGE_LOG_FD
       $ECHO "X$_lt_linker_boilerplate" | $Xsed -e '/^$/d' > conftest.exp
       $SED '/^$/d; /^ *+/d' conftest.err >conftest.er2
       if diff conftest.exp conftest.er2 >/dev/null; then
         $2=yes
       fi
     else
       $2=yes
     fi
   fi
   $RM -r conftest*
   LDFLAGS="$save_LDFLAGS"
])

if test x"[$]$2" = xyes; then
    m4_if([$4], , :, [$4])
else
    m4_if([$5], , :, [$5])
fi
])
m4trace:/home/build/lustre-release/config/libtool.m4:1488: -1- AU_DEFUN([AC_LIBTOOL_LINKER_OPTION], [m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:1488: -1- AC_DEFUN([AC_LIBTOOL_LINKER_OPTION], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_LINKER_OPTION' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_LINKER_OPTION], [_LT_LINKER_OPTION($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:1495: -1- AC_DEFUN([LT_CMD_MAX_LEN], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
# find the maximum length of command line arguments
AC_MSG_CHECKING([the maximum length of command line arguments])
AC_CACHE_VAL([lt_cv_sys_max_cmd_len], [dnl
  i=0
  teststring="ABCD"

  case $build_os in
  msdosdjgpp*)
    # On DJGPP, this test can blow up pretty badly due to problems in libc
    # (any single argument exceeding 2000 bytes causes a buffer overrun
    # during glob expansion).  Even if it were fixed, the result of this
    # check would be larger than it should be.
    lt_cv_sys_max_cmd_len=12288;    # 12K is about right
    ;;

  gnu*)
    # Under GNU Hurd, this test is not required because there is
    # no limit to the length of command line arguments.
    # Libtool will interpret -1 as no limit whatsoever
    lt_cv_sys_max_cmd_len=-1;
    ;;

  cygwin* | mingw* | cegcc*)
    # On Win9x/ME, this test blows up -- it succeeds, but takes
    # about 5 minutes as the teststring grows exponentially.
    # Worse, since 9x/ME are not pre-emptively multitasking,
    # you end up with a "frozen" computer, even though with patience
    # the test eventually succeeds (with a max line length of 256k).
    # Instead, let's just punt: use the minimum linelength reported by
    # all of the supported platforms: 8192 (on NT/2K/XP).
    lt_cv_sys_max_cmd_len=8192;
    ;;

  amigaos*)
    # On AmigaOS with pdksh, this test takes hours, literally.
    # So we just punt and use a minimum line length of 8192.
    lt_cv_sys_max_cmd_len=8192;
    ;;

  netbsd* | freebsd* | openbsd* | darwin* | dragonfly*)
    # This has been around since 386BSD, at least.  Likely further.
    if test -x /sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/sbin/sysctl -n kern.argmax`
    elif test -x /usr/sbin/sysctl; then
      lt_cv_sys_max_cmd_len=`/usr/sbin/sysctl -n kern.argmax`
    else
      lt_cv_sys_max_cmd_len=65536	# usable default for all BSDs
    fi
    # And add a safety zone
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
    lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    ;;

  interix*)
    # We know the value 262144 and hardcode it with a safety zone (like BSD)
    lt_cv_sys_max_cmd_len=196608
    ;;

  osf*)
    # Dr. Hans Ekkehard Plesser reports seeing a kernel panic running configure
    # due to this test when exec_disable_arg_limit is 1 on Tru64. It is not
    # nice to cause kernel panics so lets avoid the loop below.
    # First set a reasonable default.
    lt_cv_sys_max_cmd_len=16384
    #
    if test -x /sbin/sysconfig; then
      case `/sbin/sysconfig -q proc exec_disable_arg_limit` in
        *1*) lt_cv_sys_max_cmd_len=-1 ;;
      esac
    fi
    ;;
  sco3.2v5*)
    lt_cv_sys_max_cmd_len=102400
    ;;
  sysv5* | sco5v6* | sysv4.2uw2*)
    kargmax=`grep ARG_MAX /etc/conf/cf.d/stune 2>/dev/null`
    if test -n "$kargmax"; then
      lt_cv_sys_max_cmd_len=`echo $kargmax | sed 's/.*[[	 ]]//'`
    else
      lt_cv_sys_max_cmd_len=32768
    fi
    ;;
  *)
    lt_cv_sys_max_cmd_len=`(getconf ARG_MAX) 2> /dev/null`
    if test -n "$lt_cv_sys_max_cmd_len"; then
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 4`
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \* 3`
    else
      # Make teststring a little bigger before we do anything with it.
      # a 1K string should be a reasonable start.
      for i in 1 2 3 4 5 6 7 8 ; do
        teststring=$teststring$teststring
      done
      SHELL=${SHELL-${CONFIG_SHELL-/bin/sh}}
      # If test is not a shell built-in, we'll probably end up computing a
      # maximum length that is only half of the actual maximum length, but
      # we can't tell.
      while { test "X"`$SHELL [$]0 --fallback-echo "X$teststring$teststring" 2>/dev/null` \
	         = "XX$teststring$teststring"; } >/dev/null 2>&1 &&
	      test $i != 17 # 1/2 MB should be enough
      do
        i=`expr $i + 1`
        teststring=$teststring$teststring
      done
      # Only check the string length outside the loop.
      lt_cv_sys_max_cmd_len=`expr "X$teststring" : ".*" 2>&1`
      teststring=
      # Add a significant safety factor because C++ compilers can tack on
      # massive amounts of additional arguments before passing them to the
      # linker.  It appears as though 1/2 is a usable value.
      lt_cv_sys_max_cmd_len=`expr $lt_cv_sys_max_cmd_len \/ 2`
    fi
    ;;
  esac
])
if test -n $lt_cv_sys_max_cmd_len ; then
  AC_MSG_RESULT($lt_cv_sys_max_cmd_len)
else
  AC_MSG_RESULT(none)
fi
max_cmd_len=$lt_cv_sys_max_cmd_len
_LT_DECL([], [max_cmd_len], [0],
    [What is the maximum length of a command?])
])
m4trace:/home/build/lustre-release/config/libtool.m4:1623: -1- AU_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:1623: -1- AC_DEFUN([AC_LIBTOOL_SYS_MAX_CMD_LEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_SYS_MAX_CMD_LEN' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_CMD_MAX_LEN], [LT_CMD_MAX_LEN($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:1724: -1- AC_DEFUN([LT_SYS_DLOPEN_SELF], [m4_require([_LT_HEADER_DLFCN])dnl
if test "x$enable_dlopen" != xyes; then
  enable_dlopen=unknown
  enable_dlopen_self=unknown
  enable_dlopen_self_static=unknown
else
  lt_cv_dlopen=no
  lt_cv_dlopen_libs=

  case $host_os in
  beos*)
    lt_cv_dlopen="load_add_on"
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ;;

  mingw* | pw32* | cegcc*)
    lt_cv_dlopen="LoadLibrary"
    lt_cv_dlopen_libs=
    ;;

  cygwin*)
    lt_cv_dlopen="dlopen"
    lt_cv_dlopen_libs=
    ;;

  darwin*)
  # if libdl is installed we need to link against it
    AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],[
    lt_cv_dlopen="dyld"
    lt_cv_dlopen_libs=
    lt_cv_dlopen_self=yes
    ])
    ;;

  *)
    AC_CHECK_FUNC([shl_load],
	  [lt_cv_dlopen="shl_load"],
      [AC_CHECK_LIB([dld], [shl_load],
	    [lt_cv_dlopen="shl_load" lt_cv_dlopen_libs="-ldld"],
	[AC_CHECK_FUNC([dlopen],
	      [lt_cv_dlopen="dlopen"],
	  [AC_CHECK_LIB([dl], [dlopen],
		[lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-ldl"],
	    [AC_CHECK_LIB([svld], [dlopen],
		  [lt_cv_dlopen="dlopen" lt_cv_dlopen_libs="-lsvld"],
	      [AC_CHECK_LIB([dld], [dld_link],
		    [lt_cv_dlopen="dld_link" lt_cv_dlopen_libs="-ldld"])
	      ])
	    ])
	  ])
	])
      ])
    ;;
  esac

  if test "x$lt_cv_dlopen" != xno; then
    enable_dlopen=yes
  else
    enable_dlopen=no
  fi

  case $lt_cv_dlopen in
  dlopen)
    save_CPPFLAGS="$CPPFLAGS"
    test "x$ac_cv_header_dlfcn_h" = xyes && CPPFLAGS="$CPPFLAGS -DHAVE_DLFCN_H"

    save_LDFLAGS="$LDFLAGS"
    wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $export_dynamic_flag_spec\"

    save_LIBS="$LIBS"
    LIBS="$lt_cv_dlopen_libs $LIBS"

    AC_CACHE_CHECK([whether a program can dlopen itself],
	  lt_cv_dlopen_self, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self=yes, lt_cv_dlopen_self=yes,
	    lt_cv_dlopen_self=no, lt_cv_dlopen_self=cross)
    ])

    if test "x$lt_cv_dlopen_self" = xyes; then
      wl=$lt_prog_compiler_wl eval LDFLAGS=\"\$LDFLAGS $lt_prog_compiler_static\"
      AC_CACHE_CHECK([whether a statically linked program can dlopen itself],
	  lt_cv_dlopen_self_static, [dnl
	  _LT_TRY_DLOPEN_SELF(
	    lt_cv_dlopen_self_static=yes, lt_cv_dlopen_self_static=yes,
	    lt_cv_dlopen_self_static=no,  lt_cv_dlopen_self_static=cross)
      ])
    fi

    CPPFLAGS="$save_CPPFLAGS"
    LDFLAGS="$save_LDFLAGS"
    LIBS="$save_LIBS"
    ;;
  esac

  case $lt_cv_dlopen_self in
  yes|no) enable_dlopen_self=$lt_cv_dlopen_self ;;
  *) enable_dlopen_self=unknown ;;
  esac

  case $lt_cv_dlopen_self_static in
  yes|no) enable_dlopen_self_static=$lt_cv_dlopen_self_static ;;
  *) enable_dlopen_self_static=unknown ;;
  esac
fi
_LT_DECL([dlopen_support], [enable_dlopen], [0],
	 [Whether dlopen is supported])
_LT_DECL([dlopen_self], [enable_dlopen_self], [0],
	 [Whether dlopen of programs is supported])
_LT_DECL([dlopen_self_static], [enable_dlopen_self_static], [0],
	 [Whether dlopen of statically linked programs is supported])
])
m4trace:/home/build/lustre-release/config/libtool.m4:1841: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:1841: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN_SELF], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN_SELF' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_SYS_DLOPEN_SELF], [LT_SYS_DLOPEN_SELF($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:2732: -1- AC_DEFUN([_LT_PATH_TOOL_PREFIX], [m4_require([_LT_DECL_EGREP])dnl
AC_MSG_CHECKING([for $1])
AC_CACHE_VAL(lt_cv_path_MAGIC_CMD,
[case $MAGIC_CMD in
[[\\/*] |  ?:[\\/]*])
  lt_cv_path_MAGIC_CMD="$MAGIC_CMD" # Let the user override the test with a path.
  ;;
*)
  lt_save_MAGIC_CMD="$MAGIC_CMD"
  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
dnl $ac_dummy forces splitting on constant user-supplied paths.
dnl POSIX.2 word splitting is done only on the output of word expansions,
dnl not every word.  This closes a longstanding sh security hole.
  ac_dummy="m4_if([$2], , $PATH, [$2])"
  for ac_dir in $ac_dummy; do
    IFS="$lt_save_ifs"
    test -z "$ac_dir" && ac_dir=.
    if test -f $ac_dir/$1; then
      lt_cv_path_MAGIC_CMD="$ac_dir/$1"
      if test -n "$file_magic_test_file"; then
	case $deplibs_check_method in
	"file_magic "*)
	  file_magic_regex=`expr "$deplibs_check_method" : "file_magic \(.*\)"`
	  MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
	  if eval $file_magic_cmd \$file_magic_test_file 2> /dev/null |
	    $EGREP "$file_magic_regex" > /dev/null; then
	    :
	  else
	    cat <<_LT_EOF 1>&2

*** Warning: the command libtool uses to detect shared libraries,
*** $file_magic_cmd, produces output that libtool cannot recognize.
*** The result is that libtool may fail to recognize shared libraries
*** as such.  This will affect the creation of libtool libraries that
*** depend on shared libraries, but programs linked with such libtool
*** libraries will work regardless of this problem.  Nevertheless, you
*** may want to report the problem to your system manager and/or to
*** bug-libtool@gnu.org

_LT_EOF
	  fi ;;
	esac
      fi
      break
    fi
  done
  IFS="$lt_save_ifs"
  MAGIC_CMD="$lt_save_MAGIC_CMD"
  ;;
esac])
MAGIC_CMD="$lt_cv_path_MAGIC_CMD"
if test -n "$MAGIC_CMD"; then
  AC_MSG_RESULT($MAGIC_CMD)
else
  AC_MSG_RESULT(no)
fi
_LT_DECL([], [MAGIC_CMD], [0],
	 [Used to examine libraries when file_magic_cmd begins with "file"])dnl
])
m4trace:/home/build/lustre-release/config/libtool.m4:2794: -1- AU_DEFUN([AC_PATH_TOOL_PREFIX], [m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:2794: -1- AC_DEFUN([AC_PATH_TOOL_PREFIX], [AC_DIAGNOSE([obsolete], [The macro `AC_PATH_TOOL_PREFIX' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [_LT_PATH_TOOL_PREFIX], [_LT_PATH_TOOL_PREFIX($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:2817: -1- AC_DEFUN([LT_PATH_LD], [AC_REQUIRE([AC_PROG_CC])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
AC_REQUIRE([AC_CANONICAL_BUILD])dnl
m4_require([_LT_DECL_SED])dnl
m4_require([_LT_DECL_EGREP])dnl

AC_ARG_WITH([gnu-ld],
    [AS_HELP_STRING([--with-gnu-ld],
	[assume the C compiler uses GNU ld @<:@default=no@:>@])],
    [test "$withval" = no || with_gnu_ld=yes],
    [with_gnu_ld=no])dnl

ac_prog=ld
if test "$GCC" = yes; then
  # Check if gcc -print-prog-name=ld gives a path.
  AC_MSG_CHECKING([for ld used by $CC])
  case $host in
  *-*-mingw*)
    # gcc leaves a trailing carriage return which upsets mingw
    ac_prog=`($CC -print-prog-name=ld) 2>&5 | tr -d '\015'` ;;
  *)
    ac_prog=`($CC -print-prog-name=ld) 2>&5` ;;
  esac
  case $ac_prog in
    # Accept absolute paths.
    [[\\/]]* | ?:[[\\/]]*)
      re_direlt='/[[^/]][[^/]]*/\.\./'
      # Canonicalize the pathname of ld
      ac_prog=`$ECHO "$ac_prog"| $SED 's%\\\\%/%g'`
      while $ECHO "$ac_prog" | $GREP "$re_direlt" > /dev/null 2>&1; do
	ac_prog=`$ECHO $ac_prog| $SED "s%$re_direlt%/%"`
      done
      test -z "$LD" && LD="$ac_prog"
      ;;
  "")
    # If it fails, then pretend we aren't using GCC.
    ac_prog=ld
    ;;
  *)
    # If it is relative, then search for the first ld in PATH.
    with_gnu_ld=unknown
    ;;
  esac
elif test "$with_gnu_ld" = yes; then
  AC_MSG_CHECKING([for GNU ld])
else
  AC_MSG_CHECKING([for non-GNU ld])
fi
AC_CACHE_VAL(lt_cv_path_LD,
[if test -z "$LD"; then
  lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
  for ac_dir in $PATH; do
    IFS="$lt_save_ifs"
    test -z "$ac_dir" && ac_dir=.
    if test -f "$ac_dir/$ac_prog" || test -f "$ac_dir/$ac_prog$ac_exeext"; then
      lt_cv_path_LD="$ac_dir/$ac_prog"
      # Check to see if the program is GNU ld.  I'd rather use --version,
      # but apparently some variants of GNU ld only accept -v.
      # Break only if it was the GNU/non-GNU ld that we prefer.
      case `"$lt_cv_path_LD" -v 2>&1 </dev/null` in
      *GNU* | *'with BFD'*)
	test "$with_gnu_ld" != no && break
	;;
      *)
	test "$with_gnu_ld" != yes && break
	;;
      esac
    fi
  done
  IFS="$lt_save_ifs"
else
  lt_cv_path_LD="$LD" # Let the user override the test with a path.
fi])
LD="$lt_cv_path_LD"
if test -n "$LD"; then
  AC_MSG_RESULT($LD)
else
  AC_MSG_RESULT(no)
fi
test -z "$LD" && AC_MSG_ERROR([no acceptable ld found in \$PATH])
_LT_PATH_LD_GNU
AC_SUBST([LD])

_LT_TAGDECL([], [LD], [1], [The linker used to build libraries])
])
m4trace:/home/build/lustre-release/config/libtool.m4:2905: -1- AU_DEFUN([AM_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:2905: -1- AC_DEFUN([AM_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:2906: -1- AU_DEFUN([AC_PROG_LD], [m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:2906: -1- AC_DEFUN([AC_PROG_LD], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_LD' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_LD], [LT_PATH_LD($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:3170: -1- AC_DEFUN([LT_PATH_NM], [AC_REQUIRE([AC_PROG_CC])dnl
AC_CACHE_CHECK([for BSD- or MS-compatible name lister (nm)], lt_cv_path_NM,
[if test -n "$NM"; then
  # Let the user override the test.
  lt_cv_path_NM="$NM"
else
  lt_nm_to_check="${ac_tool_prefix}nm"
  if test -n "$ac_tool_prefix" && test "$build" = "$host"; then
    lt_nm_to_check="$lt_nm_to_check nm"
  fi
  for lt_tmp_nm in $lt_nm_to_check; do
    lt_save_ifs="$IFS"; IFS=$PATH_SEPARATOR
    for ac_dir in $PATH /usr/ccs/bin/elf /usr/ccs/bin /usr/ucb /bin; do
      IFS="$lt_save_ifs"
      test -z "$ac_dir" && ac_dir=.
      tmp_nm="$ac_dir/$lt_tmp_nm"
      if test -f "$tmp_nm" || test -f "$tmp_nm$ac_exeext" ; then
	# Check to see if the nm accepts a BSD-compat flag.
	# Adding the `sed 1q' prevents false positives on HP-UX, which says:
	#   nm: unknown option "B" ignored
	# Tru64's nm complains that /dev/null is an invalid object file
	case `"$tmp_nm" -B /dev/null 2>&1 | sed '1q'` in
	*/dev/null* | *'Invalid file or object type'*)
	  lt_cv_path_NM="$tmp_nm -B"
	  break
	  ;;
	*)
	  case `"$tmp_nm" -p /dev/null 2>&1 | sed '1q'` in
	  */dev/null*)
	    lt_cv_path_NM="$tmp_nm -p"
	    break
	    ;;
	  *)
	    lt_cv_path_NM=${lt_cv_path_NM="$tmp_nm"} # keep the first match, but
	    continue # so that we can try to find one that supports BSD flags
	    ;;
	  esac
	  ;;
	esac
      fi
    done
    IFS="$lt_save_ifs"
  done
  : ${lt_cv_path_NM=no}
fi])
if test "$lt_cv_path_NM" != "no"; then
  NM="$lt_cv_path_NM"
else
  # Didn't find any BSD compatible name lister, look for dumpbin.
  AC_CHECK_TOOLS(DUMPBIN, ["dumpbin -symbols" "link -dump -symbols"], :)
  AC_SUBST([DUMPBIN])
  if test "$DUMPBIN" != ":"; then
    NM="$DUMPBIN"
  fi
fi
test -z "$NM" && NM=nm
AC_SUBST([NM])
_LT_DECL([], [NM], [1], [A BSD- or MS-compatible name lister])dnl

AC_CACHE_CHECK([the name lister ($NM) interface], [lt_cv_nm_interface],
  [lt_cv_nm_interface="BSD nm"
  echo "int some_variable = 0;" > conftest.$ac_ext
  (eval echo "\"\$as_me:__oline__: $ac_compile\"" >&AS_MESSAGE_LOG_FD)
  (eval "$ac_compile" 2>conftest.err)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:__oline__: $NM \\\"conftest.$ac_objext\\\"\"" >&AS_MESSAGE_LOG_FD)
  (eval "$NM \"conftest.$ac_objext\"" 2>conftest.err > conftest.out)
  cat conftest.err >&AS_MESSAGE_LOG_FD
  (eval echo "\"\$as_me:__oline__: output\"" >&AS_MESSAGE_LOG_FD)
  cat conftest.out >&AS_MESSAGE_LOG_FD
  if $GREP 'External.*some_variable' conftest.out > /dev/null; then
    lt_cv_nm_interface="MS dumpbin"
  fi
  rm -f conftest*])
])
m4trace:/home/build/lustre-release/config/libtool.m4:3248: -1- AU_DEFUN([AM_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:3248: -1- AC_DEFUN([AM_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AM_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:3249: -1- AU_DEFUN([AC_PROG_NM], [m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:3249: -1- AC_DEFUN([AC_PROG_NM], [AC_DIAGNOSE([obsolete], [The macro `AC_PROG_NM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PATH_NM], [LT_PATH_NM($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:3258: -1- AC_DEFUN([LT_LIB_M], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
LIBM=
case $host in
*-*-beos* | *-*-cygwin* | *-*-pw32* | *-*-darwin*)
  # These system don't have libm, or don't need it
  ;;
*-ncr-sysv4.3*)
  AC_CHECK_LIB(mw, _mwvalidcheckl, LIBM="-lmw")
  AC_CHECK_LIB(m, cos, LIBM="$LIBM -lm")
  ;;
*)
  AC_CHECK_LIB(m, cos, LIBM="-lm")
  ;;
esac
AC_SUBST([LIBM])
])
m4trace:/home/build/lustre-release/config/libtool.m4:3277: -1- AU_DEFUN([AC_CHECK_LIBM], [m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:3277: -1- AC_DEFUN([AC_CHECK_LIBM], [AC_DIAGNOSE([obsolete], [The macro `AC_CHECK_LIBM' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_LIB_M], [LT_LIB_M($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:6970: -1- AC_DEFUN([LT_PROG_GCJ], [m4_ifdef([AC_PROG_GCJ], [AC_PROG_GCJ],
  [m4_ifdef([A][M_PROG_GCJ], [A][M_PROG_GCJ],
    [AC_CHECK_TOOL(GCJ, gcj,)
      test "x${GCJFLAGS+set}" = xset || GCJFLAGS="-g -O2"
      AC_SUBST(GCJFLAGS)])])[]dnl
])
m4trace:/home/build/lustre-release/config/libtool.m4:6979: -1- AU_DEFUN([LT_AC_PROG_GCJ], [m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:6979: -1- AC_DEFUN([LT_AC_PROG_GCJ], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_GCJ' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_GCJ], [LT_PROG_GCJ($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:6986: -1- AC_DEFUN([LT_PROG_RC], [AC_CHECK_TOOL(RC, windres,)
])
m4trace:/home/build/lustre-release/config/libtool.m4:6991: -1- AU_DEFUN([LT_AC_PROG_RC], [m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:6991: -1- AC_DEFUN([LT_AC_PROG_RC], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_RC' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [LT_PROG_RC], [LT_PROG_RC($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:7102: -1- AU_DEFUN([LT_AC_PROG_SED], [m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:/home/build/lustre-release/config/libtool.m4:7102: -1- AC_DEFUN([LT_AC_PROG_SED], [AC_DIAGNOSE([obsolete], [The macro `LT_AC_PROG_SED' is obsolete.
You should run autoupdate.])dnl
m4_if($#, 0, [AC_PROG_SED], [AC_PROG_SED($@)])])
m4trace:/home/build/lustre-release/config/ltoptions.m4:13: -1- AC_DEFUN([LTOPTIONS_VERSION], [m4_if([1])])
m4trace:/home/build/lustre-release/config/ltoptions.m4:110: -1- AU_DEFUN([AC_LIBTOOL_DLOPEN], [_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `dlopen' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:110: -1- AC_DEFUN([AC_LIBTOOL_DLOPEN], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_DLOPEN' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [dlopen])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `dlopen' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:145: -1- AU_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `win32-dll' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:145: -1- AC_DEFUN([AC_LIBTOOL_WIN32_DLL], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_WIN32_DLL' is obsolete.
You should run autoupdate.])dnl
AC_REQUIRE([AC_CANONICAL_HOST])dnl
_LT_SET_OPTION([LT_INIT], [win32-dll])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `win32-dll' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:194: -1- AC_DEFUN([AC_ENABLE_SHARED], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[shared])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:198: -1- AC_DEFUN([AC_DISABLE_SHARED], [_LT_SET_OPTION([LT_INIT], [disable-shared])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:202: -1- AU_DEFUN([AM_ENABLE_SHARED], [AC_ENABLE_SHARED($@)])
m4trace:/home/build/lustre-release/config/ltoptions.m4:202: -1- AC_DEFUN([AM_ENABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_SHARED($@)])
m4trace:/home/build/lustre-release/config/ltoptions.m4:203: -1- AU_DEFUN([AM_DISABLE_SHARED], [AC_DISABLE_SHARED($@)])
m4trace:/home/build/lustre-release/config/ltoptions.m4:203: -1- AC_DEFUN([AM_DISABLE_SHARED], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_SHARED' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_SHARED($@)])
m4trace:/home/build/lustre-release/config/ltoptions.m4:248: -1- AC_DEFUN([AC_ENABLE_STATIC], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[static])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:252: -1- AC_DEFUN([AC_DISABLE_STATIC], [_LT_SET_OPTION([LT_INIT], [disable-static])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:256: -1- AU_DEFUN([AM_ENABLE_STATIC], [AC_ENABLE_STATIC($@)])
m4trace:/home/build/lustre-release/config/ltoptions.m4:256: -1- AC_DEFUN([AM_ENABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_ENABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_ENABLE_STATIC($@)])
m4trace:/home/build/lustre-release/config/ltoptions.m4:257: -1- AU_DEFUN([AM_DISABLE_STATIC], [AC_DISABLE_STATIC($@)])
m4trace:/home/build/lustre-release/config/ltoptions.m4:257: -1- AC_DEFUN([AM_DISABLE_STATIC], [AC_DIAGNOSE([obsolete], [The macro `AM_DISABLE_STATIC' is obsolete.
You should run autoupdate.])dnl
AC_DISABLE_STATIC($@)])
m4trace:/home/build/lustre-release/config/ltoptions.m4:302: -1- AU_DEFUN([AC_ENABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `fast-install' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:302: -1- AC_DEFUN([AC_ENABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_ENABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], m4_if([$1], [no], [disable-])[fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `fast-install' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:309: -1- AU_DEFUN([AC_DISABLE_FAST_INSTALL], [_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:309: -1- AC_DEFUN([AC_DISABLE_FAST_INSTALL], [AC_DIAGNOSE([obsolete], [The macro `AC_DISABLE_FAST_INSTALL' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [disable-fast-install])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you put
the `disable-fast-install' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:342: -1- AU_DEFUN([AC_LIBTOOL_PICMODE], [_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `pic-only' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltoptions.m4:342: -1- AC_DEFUN([AC_LIBTOOL_PICMODE], [AC_DIAGNOSE([obsolete], [The macro `AC_LIBTOOL_PICMODE' is obsolete.
You should run autoupdate.])dnl
_LT_SET_OPTION([LT_INIT], [pic-only])
AC_DIAGNOSE([obsolete],
[$0: Remove this warning and the call to _LT_SET_OPTION when you
put the `pic-only' option into LT_INIT's first parameter.])
])
m4trace:/home/build/lustre-release/config/ltsugar.m4:13: -1- AC_DEFUN([LTSUGAR_VERSION], [m4_if([0.1])])
m4trace:/home/build/lustre-release/config/ltversion.m4:18: -1- AC_DEFUN([LTVERSION_VERSION], [macro_version='2.2.6b'
macro_revision='1.3017'
_LT_DECL(, macro_version, 0, [Which release of libtool.m4 was used?])
_LT_DECL(, macro_revision, 0)
])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:36: -1- AC_DEFUN([LTOBSOLETE_VERSION], [m4_if([1])])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:40: -1- AC_DEFUN([_LT_AC_PROG_ECHO_BACKSLASH])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:41: -1- AC_DEFUN([_LT_AC_SHELL_INIT])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:42: -1- AC_DEFUN([_LT_AC_SYS_LIBPATH_AIX])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:44: -1- AC_DEFUN([_LT_AC_TAGVAR])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:45: -1- AC_DEFUN([AC_LTDL_ENABLE_INSTALL])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:46: -1- AC_DEFUN([AC_LTDL_PREOPEN])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:47: -1- AC_DEFUN([_LT_AC_SYS_COMPILER])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:48: -1- AC_DEFUN([_LT_AC_LOCK])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:49: -1- AC_DEFUN([AC_LIBTOOL_SYS_OLD_ARCHIVE])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:50: -1- AC_DEFUN([_LT_AC_TRY_DLOPEN_SELF])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:51: -1- AC_DEFUN([AC_LIBTOOL_PROG_CC_C_O])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:52: -1- AC_DEFUN([AC_LIBTOOL_SYS_HARD_LINK_LOCKS])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:53: -1- AC_DEFUN([AC_LIBTOOL_OBJDIR])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:54: -1- AC_DEFUN([AC_LTDL_OBJDIR])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:55: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_HARDCODE_LIBPATH])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:56: -1- AC_DEFUN([AC_LIBTOOL_SYS_LIB_STRIP])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:57: -1- AC_DEFUN([AC_PATH_MAGIC])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:58: -1- AC_DEFUN([AC_PROG_LD_GNU])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:59: -1- AC_DEFUN([AC_PROG_LD_RELOAD_FLAG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:60: -1- AC_DEFUN([AC_DEPLIBS_CHECK_METHOD])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:61: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_NO_RTTI])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:62: -1- AC_DEFUN([AC_LIBTOOL_SYS_GLOBAL_SYMBOL_PIPE])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:63: -1- AC_DEFUN([AC_LIBTOOL_PROG_COMPILER_PIC])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:64: -1- AC_DEFUN([AC_LIBTOOL_PROG_LD_SHLIBS])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:65: -1- AC_DEFUN([AC_LIBTOOL_POSTDEP_PREDEP])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:66: -1- AC_DEFUN([LT_AC_PROG_EGREP])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:71: -1- AC_DEFUN([_AC_PROG_LIBTOOL])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:72: -1- AC_DEFUN([AC_LIBTOOL_SETUP])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:73: -1- AC_DEFUN([_LT_AC_CHECK_DLFCN])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:74: -1- AC_DEFUN([AC_LIBTOOL_SYS_DYNAMIC_LINKER])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:75: -1- AC_DEFUN([_LT_AC_TAGCONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:77: -1- AC_DEFUN([_LT_AC_LANG_CXX])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:78: -1- AC_DEFUN([_LT_AC_LANG_F77])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:79: -1- AC_DEFUN([_LT_AC_LANG_GCJ])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:80: -1- AC_DEFUN([AC_LIBTOOL_RC])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:81: -1- AC_DEFUN([AC_LIBTOOL_LANG_C_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:82: -1- AC_DEFUN([_LT_AC_LANG_C_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:83: -1- AC_DEFUN([AC_LIBTOOL_LANG_CXX_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:84: -1- AC_DEFUN([_LT_AC_LANG_CXX_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:85: -1- AC_DEFUN([AC_LIBTOOL_LANG_F77_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:86: -1- AC_DEFUN([_LT_AC_LANG_F77_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:87: -1- AC_DEFUN([AC_LIBTOOL_LANG_GCJ_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:88: -1- AC_DEFUN([_LT_AC_LANG_GCJ_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:89: -1- AC_DEFUN([AC_LIBTOOL_LANG_RC_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:90: -1- AC_DEFUN([_LT_AC_LANG_RC_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:91: -1- AC_DEFUN([AC_LIBTOOL_CONFIG])
m4trace:/home/build/lustre-release/config/lt~obsolete.m4:92: -1- AC_DEFUN([_LT_AC_FILE_LTDLL_C])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:4: -1- AC_DEFUN([LDISKFS_LINUX_SERIES], [
LDISKFS_SERIES=
AC_MSG_CHECKING([which ldiskfs series to use])
AS_IF([test x$RHEL_KERNEL = xyes], [
	case $RHEL_RELEASE_NO in
	72)	LDISKFS_SERIES="3.10-rhel7.2.series"	;;
	71)	LDISKFS_SERIES="3.10-rhel7.series"	;;
	67)	LDISKFS_SERIES="2.6-rhel6.7.series"	;;
	66)	LDISKFS_SERIES="2.6-rhel6.6.series"	;;
	65)	LDISKFS_SERIES="2.6-rhel6.5.series"	;;
	64)	LDISKFS_SERIES="2.6-rhel6.4.series"	;;
	6[0-3])	LDISKFS_SERIES="2.6-rhel6.series"	;;
	esac
], [test x$SUSE_KERNEL = xyes], [
	AS_VERSION_COMPARE([$LINUXRELEASE],[3.12.0],[
	AS_VERSION_COMPARE([$LINUXRELEASE],[3.0.0],[
	AS_VERSION_COMPARE([$LINUXRELEASE],[2.6.32], [],
	[LDISKFS_SERIES="2.6-sles11.series"],[LDISKFS_SERIES="2.6-sles11.series"])],
	[LDISKFS_SERIES="3.0-sles11.series"],[
		PLEV=$(grep PATCHLEVEL /etc/SuSE-release | sed -e 's/.*= *//')
		case $PLEV in
		2) LDISKFS_SERIES="3.0-sles11.series"
			;;
		3|4) LDISKFS_SERIES="3.0-sles11sp3.series"
			;;
		esac
	])],[LDISKFS_SERIES="3.12-sles12.series"],[LDISKFS_SERIES="3.12-sles12.series"])
])
AS_IF([test -z "$LDISKFS_SERIES"],
	[AC_MSG_WARN([Unknown kernel version $LDISKFS_VERSIONRELEASE])])
AC_MSG_RESULT([$LDISKFS_SERIES])
AC_SUBST(LDISKFS_SERIES)
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:44: -1- AC_DEFUN([LB_EXT_FREE_BLOCKS_WITH_BUFFER_HEAD], [
LB_CHECK_COMPILE([if 'ext4_free_blocks' needs 'struct buffer_head'],
ext4_free_blocks_with_buffer_head, [
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4.h"
],[
	ext4_free_blocks(NULL, NULL, NULL, 0, 0, 0);
],[
	AC_DEFINE(HAVE_EXT_FREE_BLOCK_WITH_BUFFER_HEAD, 1,
		[ext4_free_blocks do not require struct buffer_head])
])
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:62: -1- AC_DEFUN([LB_EXT_PBLOCK], [
LB_CHECK_COMPILE([if Linux kernel has 'ext_pblock'],
ext_pblock, [
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4_extents.h"
],[
	ext_pblock(NULL);
],[
	AC_DEFINE(HAVE_EXT_PBLOCK, 1, [Linux kernel has ext_pblock])
])
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:79: -1- AC_DEFUN([LB_EXT4_JOURNAL_START_3ARGS], [
LB_CHECK_COMPILE([if ext4_journal_start takes 3 arguments],
ext4_journal_start, [
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4_jbd2.h"
],[
	ext4_journal_start(NULL, 0, 0);
],[
	AC_DEFINE(JOURNAL_START_HAS_3ARGS, 1, [ext4_journal_start takes 3 arguments])
])
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:98: -1- AC_DEFUN([LB_LDISKFS_MAP_BLOCKS], [
LB_CHECK_COMPILE([if kernel has ext4_map_blocks],
ext4_map_blocks, [
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4.h"
],[
	ext4_map_blocks(NULL, NULL, NULL, 0);
],[
	AC_DEFINE(HAVE_LDISKFS_MAP_BLOCKS, 1, [kernel has ext4_map_blocks])
])
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:116: -1- AC_DEFUN([LDISKFS_AC_PATCH_PROGRAM], [
	AC_ARG_ENABLE([quilt],
		[AC_HELP_STRING([--disable-quilt],
			[disable use of quilt for ldiskfs])],
		[AS_IF([test "x$enableval" = xno],
			[use_quilt=no],
			[use_quilt=maybe])],
		[use_quilt=maybe]
	)

	AS_IF([test x$use_quilt = xmaybe], [
		AC_PATH_PROG([quilt_avail], [quilt], [no])
		AS_IF([test x$quilt_avail = xno], [
			use_quilt=no
		], [
			use_quilt=yes
		])
	])

	AS_IF([test x$use_quilt = xno], [
		AC_PATH_PROG([patch_avail], [patch], [no])
		AS_IF([test x$patch_avail = xno], [
			AC_MSG_ERROR([*** Need "quilt" or "patch" command])
		])
	])
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:146: -1- AC_DEFUN([LB_CONFIG_LDISKFS], [
# --with-ldiskfs is deprecated now that ldiskfs is fully merged with lustre.
# However we continue to support this option through Lustre 2.5.
AC_ARG_WITH([ldiskfs],
	[],
	[AC_MSG_WARN([--with-ldiskfs is deprecated, please use --enable-ldiskfs])
	AS_IF([test x$withval != xyes -a x$withval != xno],
		[AC_MSG_ERROR([

The ldiskfs option is deprecated,
and no longer supports paths to external ldiskfs source
])])
])

AC_ARG_ENABLE([ldiskfs],
	[AS_HELP_STRING([--disable-ldiskfs],
		[disable ldiskfs osd (default is enable)])],
	[AS_IF([test x$enable_ldiskfs != xyes -a x$enable_ldiskfs != xno],
		[AC_MSG_ERROR([ldiskfs valid options are "yes" or "no"])])],
	[AS_IF([test "${with_ldiskfs+set}" = set],
		[enable_ldiskfs=$with_ldiskfs],
		[enable_ldiskfs=maybe])
])

AS_IF([test x$enable_server = xno],
	[AS_CASE([$enable_ldiskfs],
		[maybe], [enable_ldiskfs=no],
		[yes], [AC_MSG_ERROR([cannot build ldiskfs when servers are disabled])]
	)])

AS_IF([test x$enable_ldiskfs != xno],[
	# In the future, we chould change enable_ldiskfs from maybe to
	# either yes or no based on additional tests, e.g.  whether a patch
	# set is available for the detected kernel.  For now, we just always
	# set it to "yes".
	AS_IF([test x$enable_ldiskfs = xmaybe], [enable_ldiskfs=yes])

	LDISKFS_LINUX_SERIES
	LDISKFS_AC_PATCH_PROGRAM
	LB_EXT_FREE_BLOCKS_WITH_BUFFER_HEAD
	LB_EXT_PBLOCK
	LB_EXT4_JOURNAL_START_3ARGS
	LB_LDISKFS_MAP_BLOCKS
	AC_DEFINE(CONFIG_LDISKFS_FS_POSIX_ACL, 1, [posix acls for ldiskfs])
	AC_DEFINE(CONFIG_LDISKFS_FS_SECURITY, 1, [fs security for ldiskfs])
	AC_DEFINE(CONFIG_LDISKFS_FS_XATTR, 1, [extened attributes for ldiskfs])
	AC_DEFINE(CONFIG_LDISKFS_FS_RW, 1, [enable rw access for ldiskfs])
	AC_SUBST(LDISKFS_SUBDIR, ldiskfs)
	AC_DEFINE(HAVE_LDISKFS_OSD, 1, Enable ldiskfs osd)
])

AC_MSG_CHECKING([whether to build ldiskfs])
AC_MSG_RESULT([$enable_ldiskfs])

AM_CONDITIONAL([LDISKFS_ENABLED], [test x$enable_ldiskfs = xyes])
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:210: -1- AC_DEFUN([LB_VALIDATE_EXT4_SRC_DIR], [
enable_ldiskfs_build="no"
AS_IF([test -n "$EXT4_SRC_DIR"], [
	enable_ldiskfs_build="yes"
	LB_CHECK_FILE([$EXT4_SRC_DIR/dir.c], [], [
		enable_ldiskfs_build="no"
		AC_MSG_WARN([ext4 must exist for ldiskfs build])
	])
	LB_CHECK_FILE([$EXT4_SRC_DIR/file.c], [], [
		enable_ldiskfs_build="no"
		AC_MSG_WARN([ext4 must exist for ldiskfs build])
	])
	LB_CHECK_FILE([$EXT4_SRC_DIR/inode.c], [], [
		enable_ldiskfs_build="no"
		AC_MSG_WARN([ext4 must exist for ldiskfs build])
	])
	LB_CHECK_FILE([$EXT4_SRC_DIR/super.c], [], [
		enable_ldiskfs_build="no"
		AC_MSG_WARN([ext4 must exist for ldiskfs build])
	])
])

AS_IF([test "x$enable_ldiskfs_build" = xno], [
	enable_ldiskfs="no"

	AC_MSG_WARN([

Disabling ldiskfs support because complete ext4 source does not exist.

If you are building using kernel-devel packages and require ldiskfs
server support then ensure that the matching kernel-debuginfo-common
and kernel-debuginfo-common-<arch> packages are installed.
])
])
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:252: -1- AC_DEFUN([LB_EXT4_SRC_DIR], [
AC_MSG_CHECKING([ext4 source directory])
# Kernel ext source located with devel headers
linux_src=$LINUX
AS_IF([test -e "$linux_src/fs/ext4/super.c"], [
	EXT4_SRC_DIR="$linux_src/fs/ext4"
], [
	# Kernel ext source provided by kernel-debuginfo-common package
	linux_src=$(ls -1d /usr/src/debug/*/linux-$LINUXRELEASE \
		2>/dev/null | tail -1)
	AS_IF([test -e "$linux_src/fs/ext4/super.c"],
		[EXT4_SRC_DIR="$linux_src/fs/ext4"],
		[EXT4_SRC_DIR=""])
])
AC_MSG_RESULT([$EXT4_SRC_DIR])
AC_SUBST(EXT4_SRC_DIR)

LB_VALIDATE_EXT4_SRC_DIR
])
m4trace:/home/build/lustre-release/config/lustre-build-ldiskfs.m4:277: -1- AC_DEFUN([LB_DEFINE_E2FSPROGS_NAMES], [
AC_MSG_CHECKING([whether to use alternate names for e2fsprogs])
AC_ARG_WITH([ldiskfsprogs],
	AC_HELP_STRING([--with-ldiskfsprogs],
		[use alternate names for ldiskfs-enabled e2fsprogs]),
	[], [withval="no"])

AS_IF([test "x$withval" = xyes], [
	AC_MSG_RESULT([enabled])
	AC_DEFINE(HAVE_LDISKFSPROGS, 1, [enable use of ldiskfsprogs package])
	E2FSPROGS="ldiskfsprogs"
	MKE2FS="mkfs.ldiskfs"
	DEBUGFS="debugfs.ldiskfs"
	TUNE2FS="tunefs.ldiskfs"
	E2LABEL="label.ldiskfs"
	DUMPE2FS="dumpfs.ldiskfs"
	E2FSCK="fsck.ldiskfs"
	PFSCK="pfsck.ldiskfs"
], [
	AC_MSG_RESULT([disabled])
	E2FSPROGS="e2fsprogs"
	MKE2FS="mke2fs"
	DEBUGFS="debugfs"
	TUNE2FS="tune2fs"
	E2LABEL="e2label"
	DUMPE2FS="dumpe2fs"
	E2FSCK="e2fsck"
	PFSCK="fsck"
])

AC_DEFINE_UNQUOTED(E2FSPROGS, "$E2FSPROGS", [name of ldiskfs e2fsprogs package])
AC_DEFINE_UNQUOTED(MKE2FS, "$MKE2FS", [name of ldiskfs mkfs program])
AC_DEFINE_UNQUOTED(DEBUGFS, "$DEBUGFS", [name of ldiskfs debug program])
AC_DEFINE_UNQUOTED(TUNE2FS, "$TUNE2FS", [name of ldiskfs tune program])
AC_DEFINE_UNQUOTED(E2LABEL, "$E2LABEL", [name of ldiskfs label program])
AC_DEFINE_UNQUOTED(DUMPE2FS,"$DUMPE2FS", [name of ldiskfs dump program])
AC_DEFINE_UNQUOTED(E2FSCK, "$E2FSCK", [name of ldiskfs fsck program])
AC_DEFINE_UNQUOTED(PFSCK, "$PFSCK", [name of parallel fsck program])

AC_SUBST([E2FSPROGS], [$E2FSPROGS])
AC_SUBST([MKE2FS], [$MKE2FS])
AC_SUBST([DEBUGFS], [$DEBUGFS])
AC_SUBST([TUNE2FS], [$TUNE2FS])
AC_SUBST([E2LABEL], [$E2LABEL])
AC_SUBST([DUMPE2FS], [$DUMPE2FS])
AC_SUBST([E2FSCK], [$E2FSCK])
AC_SUBST([PFSCK], [$PFSCK])
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:6: -1- AC_DEFUN([LB_LINUX_VERSION], [
KMODEXT=".ko"
AC_SUBST(KMODEXT)

makerule="$PWD/build"
AC_CACHE_CHECK([for external module build target], lb_cv_module_target, [
lb_cv_module_target=""
MODULE_TARGET="SUBDIRS"
rm -f build/conftest.i
LB_LINUX_TRY_MAKE([], [],
	[$makerule LUSTRE_KERNEL_TEST=conftest.i],
	[test -s build/conftest.i],
	[lb_cv_module_target="SUBDIRS"], [
		MODULE_TARGET="M"
		makerule="_module_$PWD/build"
		LB_LINUX_TRY_MAKE([], [],
			[$makerule LUSTRE_KERNEL_TEST=conftest.i],
			[test -s build/conftest.i],
			[lb_cv_module_target="M"], [
				AC_MSG_ERROR([unknown; check config.log for details])
			])
	])
])
AS_IF([test -z "$lb_cv_module_target"],
	[AC_MSG_ERROR([unknown external module build target])],
[test "x$lb_cv_module_target" = "xM"],
	[makerule="_module_$PWD/build"])
MODULE_TARGET=$lb_cv_module_target
AC_SUBST(MODULE_TARGET)
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:42: -1- AC_DEFUN([LB_LINUX_UTSRELEASE], [
AC_CACHE_CHECK([for Linux kernel utsrelease], lb_cv_utsrelease, [
lb_cv_utsrelease=""
utsrelease1=$LINUX_OBJ/include/generated/utsrelease.h
utsrelease2=$LINUX_OBJ/include/linux/utsrelease.h
utsrelease3=$LINUX_OBJ/include/linux/version.h
AS_IF([test -r $utsrelease1 && fgrep -q UTS_RELEASE $utsrelease1],
	[utsrelease=$utsrelease1],
[test -r $utsrelease2 && fgrep -q UTS_RELEASE $utsrelease2],
	[utsrelease=$utsrelease2],
[test -r $utsrelease3 && fgrep -q UTS_RELEASE $utsrelease3],
	[utsrelease=$utsrelease3])
AS_IF([test -n "$utsrelease"],
	[lb_cv_utsrelease=$(awk -F \" '/ UTS_RELEASE / { print [$]2 }' $utsrelease)],
	[AC_MSG_ERROR([

Cannot find UTS_RELEASE definition.

This is often provided by the kernel-devel package.
])
	])
])
AS_IF([test -z "$lb_cv_utsrelease"],
	[AC_MSG_ERROR([Cannot determine Linux kernel version.])])
LINUXRELEASE=$lb_cv_utsrelease
AC_SUBST(LINUXRELEASE)
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:75: -1- AC_DEFUN([LB_LINUX_RELEASE], [
LB_LINUX_UTSRELEASE

# ------------ RELEASE --------------------------------
AC_MSG_CHECKING([for Lustre release])
AC_ARG_WITH([release],
	AC_HELP_STRING([--with-release=string],
		[set the release string (default=$kvers_YYYYMMDDhhmm)]),
	[RELEASE=$withval], [
	RELEASE=""
	AS_IF([test "$DOWNSTREAM_RELEASE"], [RELEASE="${DOWNSTREAM_RELEASE}_"])
	RELEASE="$RELEASE$(echo $LINUXRELEASE | tr '-' '_')_$BUILDID"])
AC_MSG_RESULT($RELEASE)
AC_SUBST(RELEASE)

# check if the kernel is one from RHEL or SUSE
AC_CACHE_CHECK([for RedHat kernel release number], lb_cv_rhel_kernel_version, [
lb_cv_rhel_kernel_version=""
AS_IF([fgrep -q RHEL_RELEASE $LINUX_OBJ/include/$VERSION_HDIR/version.h], [
	lb_cv_rhel_kernel_version=$(awk '/ RHEL_MAJOR / { print [$]3 }' \
		$LINUX_OBJ/include/$VERSION_HDIR/version.h)$(awk \
		'/ RHEL_MINOR / { print [$]3 }' \
		$LINUX_OBJ/include/$VERSION_HDIR/version.h)
])
])
AS_IF([test -n "$lb_cv_rhel_kernel_version"], [
	RHEL_KERNEL="yes"
	RHEL_RELEASE_NO=$lb_cv_rhel_kernel_version
], [
	RHEL_KERNEL="no"
	LB_CHECK_CONFIG([SUSE_KERNEL], [SUSE_KERNEL="yes"], [SUSE_KERNEL="no"])
])

AC_MSG_CHECKING([for Linux kernel module package directory])
AC_ARG_WITH([kmp-moddir],
	AC_HELP_STRING([--with-kmp-moddir=string],
		[set the kmod updates or extra directory]),
	[KMP_MODDIR=$withval],[
	AS_IF([test x$RHEL_KERNEL = xyes], [KMP_MODDIR="extra"],
	      [test x$SUSE_KERNEL = xyes], [KMP_MODDIR="updates"])])
AC_MSG_RESULT($KMP_MODDIR)
AC_SUBST(KMP_MODDIR)

moduledir='$(CROSS_PATH)/lib/modules/$(LINUXRELEASE)/$(KMP_MODDIR)/kernel'
AC_SUBST(moduledir)

modulefsdir='$(moduledir)/fs/$(PACKAGE)'
AC_SUBST(modulefsdir)

modulenetdir='$(moduledir)/net/$(PACKAGE)'
AC_SUBST(modulenetdir)
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:133: -1- AC_DEFUN([LB_LINUX_SYMVERFILE], [
AC_CACHE_CHECK([for the name of module symbol version file], lb_cv_module_symvers, [
AS_IF([grep -q Modules.symvers $LINUX/scripts/Makefile.modpost],
	[lb_cv_module_symvers=Modules.symvers],
	[lb_cv_module_symvers=Module.symvers])
])
SYMVERFILE=$lb_cv_module_symvers
AC_SUBST(SYMVERFILE)
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:148: -1- AC_DEFUN([LB_LINUX_CROSS], [
AC_CACHE_CHECK([for cross compilation], lb_cv_cross, [
lb_cv_cross="no"
AS_IF([test "x$cross_compiling" = xyes],
	[AS_CASE([$host_vendor],
		[k1om | mpss], [
			# The K1OM architecture is an extension of the x86 architecture
			# and in MPSS 2.1 it's defined in $host_vendor. But in MPSS 3.x
			# it's defined in $host_arch. So, try to support both case.
			lb_cv_cross=$($CC -v 2>&1 | grep Target: | sed -e 's/Target: //')
			AS_IF([test "$lb_cv_cross" != x86_64-k1om-linux -a \
				    "$lb_cv_cross" != k1om-mpss-linux], [
				AC_MSG_ERROR([Cross compiler not found in PATH.])
			])
		])
	])
])
AS_IF([test "$lb_cv_cross" = x86_64-k1om-linux -o \
	    "$lb_cv_cross" = k1om-mpss-linux], [
	CROSS_VARS="ARCH=k1om CROSS_COMPILE=${lb_cv_cross}-"
	CROSS_PATH="${CROSS_PATH:=/opt/lustre/$VERSION/$lb_cv_cross}"
	CCAS=$CC
	# need to produce special section for debuginfo extraction
	LDFLAGS="$LDFLAGS -Wl,--build-id"
	EXTRA_KLDFLAGS="$EXTRA_KLDFLAGS -Wl,--build-id"
	AS_IF([test "x$enable_server" != xno], [
		AC_MSG_WARN([Disabling server (not supported for $lb_cv_cross).])
		enable_server="no"
	])
	AS_IF([test "x$enable_mpitests" != xno], [
		AC_MSG_WARN([Disabling MPI tests (not supported for $lb_cv_cross).])
		enable_mpitests="no"
	])
])
AC_SUBST(CROSS_VARS)
AC_SUBST(CROSS_PATH)
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:189: -1- AC_DEFUN([LB_ARG_REPLACE_PATH], [
new_configure_args=
eval set -- $ac_configure_args
for arg; do
	case $arg in
		--with-[$1]=*)
			arg=--with-[$1]=[$2] ;;
		*\'*)
			arg=$(printf %s\n ["$arg"] | sed "s/'/'\\\\\\\\''/g") ;;
	esac
	dnl AS_VAR_APPEND([new_configure_args], [" '$arg'"])
	new_configure_args="$new_configure_args '$arg'"
done
ac_configure_args=$new_configure_args
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:210: -1- AC_DEFUN([__LB_ARG_CANON_PATH], [
	[$3]=$(readlink -f $with_$2)
	LB_ARG_REPLACE_PATH([$1], $[$3])
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:221: -1- AC_DEFUN([LB_ARG_CANON_PATH], [
	__LB_ARG_CANON_PATH([$1], m4_translit([$1], [-.], [__]), [$2])
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:230: -1- AC_DEFUN([LB_LINUX_PATH], [
for DEFAULT_LINUX in /lib/modules/$(uname -r)/{source,build} /usr/src/linux; do
	AS_IF([readlink -q -e $DEFAULT_LINUX >/dev/null], [break])
done
if test "$DEFAULT_LINUX" = "/lib/modules/$(uname -r)/source"; then
	PATHS="/lib/modules/$(uname -r)/build"
fi
PATHS+=" $DEFAULT_LINUX"
for DEFAULT_LINUX_OBJ in $PATHS; do
	AS_IF([readlink -q -e $DEFAULT_LINUX_OBJ >/dev/null], [break])
done

AC_MSG_CHECKING([for Linux sources])
AC_ARG_WITH([linux],
	AC_HELP_STRING([--with-linux=path],
		       [set path to Linux source (default=/lib/modules/$(uname -r)/{source,build},/usr/src/linux)]),
	[LB_ARG_CANON_PATH([linux], [LINUX])
	DEFAULT_LINUX_OBJ=$LINUX],
	[LINUX=$DEFAULT_LINUX])
AC_MSG_RESULT([$LINUX])
AC_SUBST(LINUX)

# -------- check for linux --------
LB_CHECK_FILE([$LINUX], [],
	[AC_MSG_ERROR([Kernel source $LINUX could not be found.])])

# -------- linux objects (for 2.6) --
AC_MSG_CHECKING([for Linux objects])
AC_ARG_WITH([linux-obj],
	AC_HELP_STRING([--with-linux-obj=path],
			[set path to Linux objects (default=/lib/modules/$(uname -r)/build,/usr/src/linux)]),
	[LB_ARG_CANON_PATH([linux-obj], [LINUX_OBJ])],
	[LINUX_OBJ=$DEFAULT_LINUX_OBJ])
AC_MSG_RESULT([$LINUX_OBJ])
AC_SUBST(LINUX_OBJ)

# -------- check for .config --------
AC_ARG_WITH([linux-config],
	[AC_HELP_STRING([--with-linux-config=path],
			[set path to Linux .conf (default=$LINUX_OBJ/.config)])],
	[LB_ARG_CANON_PATH([linux-config], [LINUX_CONFIG])],
	[LINUX_CONFIG=$LINUX_OBJ/.config])

# -------- check if .config exists --
LB_CHECK_FILE([$LINUX_CONFIG], [],
	[AC_MSG_ERROR([

Kernel config could not be found.

If you are building from a kernel-source rpm consult build/README.kernel-source
])
])
AC_SUBST(LINUX_CONFIG)

LB_CHECK_FILE([/boot/kernel.h],
	[KERNEL_SOURCE_HEADER='/boot/kernel.h'],
	[LB_CHECK_FILE([/var/adm/running-kernel.h],
		[KERNEL_SOURCE_HEADER='/var/adm/running-kernel.h'])])

AC_ARG_WITH([kernel-source-header],
	AC_HELP_STRING([--with-kernel-source-header=path],
			[Use a different kernel version header.  Consult build/README.kernel-source for details.]),
	[LB_ARG_CANON_PATH([kernel-source-header], [KERNEL_SOURCE_HEADER])])

# ----------- make dep run? ------------------
# at 2.6.19 # $LINUX/include/linux/config.h is removed
# and at more old has only one line include <autoconf.h>
#
LB_CHECK_FILE([$LINUX_OBJ/include/generated/autoconf.h],
	[AUTOCONF_HDIR=generated],
	[LB_CHECK_FILE([$LINUX_OBJ/include/linux/autoconf.h],
		[AUTOCONF_HDIR=linux],
		[AC_MSG_ERROR([Run make config in $LINUX.])])])
AC_SUBST(AUTOCONF_HDIR)

LB_CHECK_FILE([$LINUX_OBJ/include/linux/version.h],
	[VERSION_HDIR=linux],
	[LB_CHECK_FILE([$LINUX_OBJ/include/generated/uapi/linux/version.h],
		[VERSION_HDIR=generated/uapi/linux],
		[AC_MSG_ERROR([Run make config in $LINUX.])])])
AC_SUBST(VERSION_HDIR)

# ----------- kconfig.h exists ---------------
# kernel 3.1, $LINUX/include/linux/kconfig.h is added
# see kernel commit 2a11c8ea20bf850b3a2c60db8c2e7497d28aba99
#
LB_CHECK_FILE([$LINUX/include/linux/kconfig.h],
	      [CONFIG_INCLUDE=$LINUX/include/linux/kconfig.h],
              [CONFIG_INCLUDE=include/$AUTOCONF_HDIR/autoconf.h])
AC_SUBST(CONFIG_INCLUDE)

# ------------ rhconfig.h includes runtime-generated bits --
# RedHat kernel-source checks

# we know this exists after the check above.  if the user
# tarred up the tree and ran make dep etc. in it, then
# version.h gets overwritten with a standard linux one.

AS_IF([grep rhconfig $LINUX_OBJ/include/$VERSION_HDIR/version.h >/dev/null], [
	# This is a clean kernel-source tree, we need to
	# enable extensive workarounds to get this to build modules
	LB_CHECK_FILE([$KERNEL_SOURCE_HEADER], [
		AS_IF([test $KERNEL_SOURCE_HEADER = '/boot/kernel.h'],
			[AC_MSG_WARN([

Using /boot/kernel.h from RUNNING kernel.

If this is not what you want, use --with-kernel-source-header.
Consult build/README.kernel-source for details.
])
		])],
		[AC_MSG_ERROR([

$KERNEL_SOURCE_HEADER not found.

Consult build/README.kernel-source for details.
])
		])
	EXTRA_KCFLAGS="-include $KERNEL_SOURCE_HEADER $EXTRA_KCFLAGS"
])

# this is needed before we can build modules
LB_LINUX_CROSS
LB_LINUX_VERSION

# --- check that we can build modules at all
LB_CHECK_COMPILE([that modules can be built at all], build_modules,
	[], [], [], [
	AC_MSG_ERROR([

Kernel modules cannot be built. Consult config.log for details.

If you are trying to build with a kernel-source rpm,
consult build/README.kernel-source
])
])

LB_LINUX_RELEASE
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:375: -1- AC_DEFUN([LC_MODULE_LOADING], [
AC_CACHE_CHECK([if Linux kernel module loading is possible], lb_cv_module_loading, [
LB_LINUX_TRY_MAKE([
	#include <linux/kmod.h>
], [
	int myretval=ENOSYS ;
	return myretval;
], [
	$makerule LUSTRE_KERNEL_TEST=conftest.i
], [dnl
	grep request_module build/conftest.i |dnl
		grep -v `grep "int myretval=" build/conftest.i |dnl
			cut -d= -f2 | cut -d" "  -f1`dnl
		>/dev/null dnl
], [lb_cv_module_loading="yes"], [lb_cv_module_loading="no"])
])
AS_IF([test "$lb_cv_module_loading" = yes],
	[AC_DEFINE(HAVE_MODULE_LOADING_SUPPORT, 1,
		[kernel module loading is possible])],
	[AC_MSG_WARN([

Kernel module loading support is highly recommended.

])
	])
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:407: -1- AC_DEFUN([LB_PROG_LINUX], [
LB_LINUX_PATH
LB_LINUX_SYMVERFILE

LB_CHECK_CONFIG([MODULES], [], [
	AC_MSG_ERROR([

module support is required to build Lustre kernel modules.
])
	])

LB_CHECK_CONFIG([MODVERSIONS])

LB_CHECK_CONFIG([KALLSYMS], [], [
	AC_MSG_ERROR([

Lustre requires that CONFIG_KALLSYMS is enabled in your kernel.
])
	])

# 2.6.28
LC_MODULE_LOADING
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:436: -1- AC_DEFUN([LB_USES_DPKG], [
AC_CACHE_CHECK([if this distro uses dpkg], lb_cv_uses_dpkg, [
lb_cv_uses_dpkg="no"
AS_CASE([$(lsb_release -i -s 2>/dev/null)],
	[Ubuntu | Debian], [lb_cv_uses_dpkg="yes"])
])
uses_dpkg=$lb_cv_uses_dpkg
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:456: -1- AC_DEFUN([LB_CHECK_EXPORT], [
AS_VAR_PUSHDEF([lb_export], [lb_cv_export_$1])dnl
AC_CACHE_CHECK([if Linux kernel exports '$1'], lb_export, [
AS_VAR_SET([lb_export], [no])
AS_IF([grep -q -E '[[[:space:]]]$1[[[:space:]]]' $LINUX_OBJ/$SYMVERFILE 2>/dev/null],
	[AS_VAR_SET([lb_export], [yes])],
	[for file in $2; do
		AS_IF([grep -q -E "EXPORT_SYMBOL.*\($1\)" "$LINUX/$file" 2>/dev/null], [
			AS_VAR_SET([lb_export], [yes])
			break
		])
	done])
])
AS_VAR_IF([lb_export], [yes], [$3], [$4])[]dnl
AS_VAR_POPDEF([lb_export])dnl
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:481: -1- AC_DEFUN([LB_CHECK_CONFIG], [
LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_$1],
config_$1, [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_$1
	#error CONFIG_$1 not #defined
	#endif
], [$2], [$3])
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:500: -1- AC_DEFUN([LB_CHECK_CONFIG_IM], [
LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_$1 in or as module],
config_im_$1, [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_$1) || defined(CONFIG_$1_MODULE))
	#error CONFIG_$1 and CONFIG_$1_MODULE not #defined
	#endif
], [$2], [$3])
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:545: -1- AC_DEFUN([LB_LINUX_COMPILE_IFELSE], [m4_ifvaln([$1], [AC_LANG_CONFTEST([AC_LANG_SOURCE([$1])])])dnl
rm -f build/conftest.o build/conftest.mod.c build/conftest.ko
SUBARCH=$(echo $target_cpu | sed -e 's/powerpc64le/powerpc/' -e 's/powerpc64/powerpc/' -e 's/x86_64/x86/' -e 's/i.86/x86/' -e 's/k1om/x86/' -e 's/aarch64/arm64/')
AS_IF([AC_TRY_COMMAND(cp conftest.c build && make -d [$2] ${LD:+"LD=$LD"} CC="$CC" -f $PWD/build/Makefile LUSTRE_LINUX_CONFIG=$LINUX_CONFIG LINUXINCLUDE="$EXTRA_OFED_INCLUDE -I$LINUX/arch/$SUBARCH/include -Iinclude -Iarch/$SUBARCH/include/generated -I$LINUX/include -Iinclude2 -I$LINUX/include/uapi -Iinclude/generated -I$LINUX/arch/$SUBARCH/include/uapi -Iarch/$SUBARCH/include/generated/uapi -I$LINUX/include/uapi -Iinclude/generated/uapi ${SPL_OBJ:+-include $SPL_OBJ/spl_config.h} ${ZFS_OBJ:+-include $ZFS_OBJ/zfs_config.h} ${SPL:+-I$SPL -I$SPL/include } ${ZFS:+-I$ZFS -I$ZFS/include} -include $CONFIG_INCLUDE" -o tmp_include_depends -o scripts -o include/config/MARKER -C $LINUX_OBJ EXTRA_CFLAGS="-Werror-implicit-function-declaration $EXTRA_KCFLAGS" $CROSS_VARS $MODULE_TARGET=$PWD/build) >/dev/null && AC_TRY_COMMAND([$3])],
	[$4],
	[_AC_MSG_LOG_CONFTEST
m4_ifvaln([$5],[$5])dnl])
rm -f build/conftest.o build/conftest.mod.c build/conftest.mod.o build/conftest.ko m4_ifval([$1], [build/conftest.c conftest.c])[]dnl
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:561: -1- AC_DEFUN([LB_LINUX_TRY_COMPILE], [
LB_LINUX_COMPILE_IFELSE(
	[AC_LANG_SOURCE([LB_LANG_PROGRAM([[$1]], [[$2]])])],
	[modules], [test -s build/conftest.o],
	[$3], [$4])
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:573: -1- AC_DEFUN([LB_LINUX_TRY_MAKE], [
LB_LINUX_COMPILE_IFELSE(
	[AC_LANG_SOURCE([LB_LANG_PROGRAM([[$1]], [[$2]])])],
	[$3], [$4], [$5], [$6])
])
m4trace:/home/build/lustre-release/config/lustre-build-linux.m4:588: -1- AC_DEFUN([LB_CHECK_COMPILE], [
AS_VAR_PUSHDEF([lb_compile], [lb_cv_compile_$2])dnl
AC_CACHE_CHECK([$1], lb_compile, [
	LB_LINUX_TRY_COMPILE([$3], [$4],
		[AS_VAR_SET([lb_compile], [yes])],
		[AS_VAR_SET([lb_compile], [no])])
])
AS_VAR_IF([lb_compile], [yes], [$5], [$6])[]dnl
AS_VAR_POPDEF([lb_compile])dnl
])
m4trace:/home/build/lustre-release/config/lustre-build-zfs.m4:59: -1- AC_DEFUN([LB_SPL], [
	AC_ARG_WITH([spl],
		AS_HELP_STRING([--with-spl=PATH],
		[Path to spl source]),
		[splsrc="$withval"])

	AC_ARG_WITH([spl-obj],
		AS_HELP_STRING([--with-spl-obj=PATH],
		[Path to spl build objects]),
		[splobj="$withval"])

	dnl #
	dnl # The existence of spl.release[.in] is used to identify a valid
	dnl # source directory.  In order of preference:
	dnl #
	splver=$(ls -1 /usr/src/ | grep -m1 spl | cut -f2 -d'-')
	spldkms="/var/lib/dkms/spl/${splver}"
	splsrc1="/usr/src/spl-${splver}/${LINUXRELEASE}"
	splsrc2="/usr/src/spl-${splver}"
	splsrc3="../spl/"
	splsrc4="$LINUX"

	AC_MSG_CHECKING([spl source directory])
	AS_IF([test -z "${splsrc}"], [
		AS_IF([test -e "${spldkms}/source/spl.release.in"], [
			splsrc=${spldkms}/source
		], [test -e "${splsrc1}/spl.release.in"], [
			splsrc=${splsrc1}
		], [test -e "${splsrc2}/spl.release.in"], [
			splsrc=${splsrc2}
		], [test -e "${splsrc3}/spl.release.in"], [
			splsrc=$(readlink -f "${splsrc3}")
		], [test -e "${splsrc4}/spl.release.in"], [
			splsrc=${splsrc4}
		], [
			splsrc="[Not found]"
		])
	])
	AC_MSG_RESULT([$splsrc])

	AS_IF([test ! -e "$splsrc/spl.release" &&
	    test ! -e "$splsrc/spl.release.in"], [
		enable_zfs=no
	])

	dnl #
	dnl # The existence of the spl_config.h is used to identify a valid
	dnl # spl object directory.  In many cases the object and source
	dnl # directory are the same, however the objects may also reside
	dnl # is a subdirectory named after the kernel version.
	dnl #
	AC_MSG_CHECKING([spl build directory])
	AS_IF([test -z "$splobj"], [
		AS_IF([test "${splsrc}" = "${spldkms}/source"], [
			AS_IF([test -e "${spldkms}/${LINUXRELEASE}/${target_cpu}/spl_config.h"], [
				splobj=${spldkms}/${LINUXRELEASE}/${target_cpu}
			], [
				splobj="[Not found]"
			])
		],[test -e "${splsrc}/${LINUXRELEASE}/spl_config.h"], [
			splobj="${splsrc}/${LINUXRELEASE}"
		], [test -e "${splsrc}/spl_config.h"], [
			splobj="${splsrc}"
		], [
			splobj="[Not found]"
		])
	])
	AC_MSG_RESULT([$splobj])

	AS_IF([test ! -e "$splobj/spl_config.h"], [
		enable_zfs=no
	])

	dnl #
	dnl # Verify the source version using SPL_META_VERSION in spl_config.h
	dnl #
	AS_IF([test x$enable_zfs = xyes], [
		AC_MSG_CHECKING([spl source version])
		AS_IF([fgrep -q SPL_META_VERSION $splobj/spl_config.h], [
			splver=$((echo "#include <spl_config.h>";
			    echo "splver=SPL_META_VERSION-SPL_META_RELEASE") |
			    cpp -I $splobj |
			    grep "^splver=" | tr -d \" | cut -d= -f2)
		], [
			splver="[Not found]"
			enable_zfs=no
		])
		AC_MSG_RESULT([$splver])
	])

	dnl #
	dnl # Verify the modules systems exist by the expect name.
	dnl #
	AS_IF([test x$enable_zfs = xyes], [
		AC_MSG_CHECKING([spl file name for module symbols])
		AS_IF([test -r $splobj/$SYMVERFILE], [
			splsym=$SYMVERFILE
			EXTRA_SYMBOLS="$EXTRA_SYMBOLS $splobj/$SYMVERFILE"
		], [test -r $splobj/module/$SYMVERFILE], [
			splsym=$SYMVERFILE
			EXTRA_SYMBOLS="$EXTRA_SYMBOLS $splobj/module/$SYMVERFILE"
		], [
			splsym="[Not found]"
			enable_zfs=no
		])
		AC_MSG_RESULT([$splsym])
	])

	SPL=${splsrc}
	SPL_OBJ=${splobj}
	SPL_VERSION=${splver}

	AC_SUBST(SPL)
	AC_SUBST(SPL_OBJ)
	AC_SUBST(SPL_VERSION)
	AC_SUBST(EXTRA_SYMBOLS)
])
m4trace:/home/build/lustre-release/config/lustre-build-zfs.m4:177: -1- AC_DEFUN([LB_ZFS], [
	AC_ARG_WITH([zfs-obj],
		AS_HELP_STRING([--with-zfs-obj=PATH],
		[Path to zfs build objects]),
		[zfsobj="$withval"])

	dnl #
	dnl # The existence of zfs.release[.in] is used to identify a valid
	dnl # source directory.  In order of preference:
	dnl #
	zfsver=$(ls -1 /usr/src/ | grep -m1 zfs | cut -f2 -d'-')
	zfsdkms="/var/lib/dkms/zfs/${zfsver}"
	zfssrc1="/usr/src/zfs-${zfsver}/${LINUXRELEASE}"
	zfssrc2="/usr/src/zfs-${zfsver}"
	zfssrc3="../zfs/"
	zfssrc4="$LINUX"

	AC_MSG_CHECKING([zfs source directory])
	AS_IF([test -z "${zfssrc}"], [
		AS_IF([test -e "${zfsdkms}/source/zfs.release.in"], [
			zfssrc=${zfsdkms}/source
		], [test -e "${zfssrc1}/zfs.release.in"], [
			zfssrc=${zfssrc1}
		], [test -e "${zfssrc2}/zfs.release.in"], [
			zfssrc=${zfssrc2}
		], [test -e "${zfssrc3}/zfs.release.in"], [
			zfssrc=$(readlink -f "${zfssrc3}")
		], [test -e "${zfssrc4}/zfs.release.in"], [
			zfssrc=${zfssrc4}
		], [
			zfssrc="[Not found]"
		])
	])
	AC_MSG_RESULT([$zfssrc])

	AS_IF([test ! -e "$zfssrc/zfs.release.in" &&
	    test ! -e "$zfssrc/zfs.release"], [
		enable_zfs=no
	])

	dnl #
	dnl # The existence of the zfs_config.h is used to identify a valid
	dnl # zfs object directory.  In many cases the object and source
	dnl # directory are the same, however the objects may also reside
	dnl # is a subdirectory named after the kernel version.
	dnl #
	AC_MSG_CHECKING([zfs build directory])
	AS_IF([test -z "$zfsobj"], [
		AS_IF([test "${zfssrc}" = "${zfsdkms}/source"], [
			AS_IF([test -e "${zfsdkms}/${LINUXRELEASE}/${target_cpu}/zfs_config.h"], [
				zfsobj=${zfsdkms}/${LINUXRELEASE}/${target_cpu}
			], [
				zfsobj="[Not found]"
			])
		], [test -e "${zfssrc}/${LINUXRELEASE}/zfs_config.h"], [
			zfsobj="${zfssrc}/${LINUXRELEASE}"
		], [test -e "${zfssrc}/zfs_config.h"], [
			zfsobj="${zfssrc}"
		], [
			zfsobj="[Not found]"
		])
	])

	AC_MSG_RESULT([$zfsobj])
	AS_IF([test ! -e "$zfsobj/zfs_config.h"], [
		enable_zfs=no
	])

	dnl #
	dnl # Verify the source version using SPL_META_VERSION in spl_config.h
	dnl #
	AS_IF([test x$enable_zfs = xyes], [
		AC_MSG_CHECKING([zfs source version])
		AS_IF([fgrep -q ZFS_META_VERSION $zfsobj/zfs_config.h], [
			zfsver=$((echo "#include <zfs_config.h>";
			    echo "zfsver=ZFS_META_VERSION-ZFS_META_RELEASE") |
			    cpp -I $zfsobj |
			    grep "^zfsver=" | tr -d \" | cut -d= -f2)
		],[
			zfsver="[Not found]"
			enable_zfs=no
		])
		AC_MSG_RESULT([$zfsver])
	])

	dnl #
	dnl # Verify the modules systems exist by the expect name.
	dnl #
	AS_IF([test x$enable_zfs = xyes], [
		AC_MSG_CHECKING([zfs file name for module symbols])
		AS_IF([test -r $zfsobj/$SYMVERFILE], [
			zfssym=$SYMVERFILE
			EXTRA_SYMBOLS="$EXTRA_SYMBOLS $zfsobj/$SYMVERFILE"
		], [test -r $zfsobj/module/$SYMVERFILE], [
			zfssym=$SYMVERFILE
			EXTRA_SYMBOLS="$EXTRA_SYMBOLS $zfsobj/module/$SYMVERFILE"
		], [
			zfssym="[Not found]"
			enable_zfs=no
		])
		AC_MSG_RESULT([$zfssym])
	])

	ZFS=${zfssrc}
	ZFS_OBJ=${zfsobj}
	ZFS_VERSION=${zfsver}

	AC_SUBST(ZFS)
	AC_SUBST(ZFS_OBJ)
	AC_SUBST(ZFS_VERSION)
	AC_SUBST(EXTRA_SYMBOLS)
])
m4trace:/home/build/lustre-release/config/lustre-build-zfs.m4:290: -1- AC_DEFUN([LB_ZFS_DEVEL], [
	AC_ARG_WITH([zfs-devel],
		[AS_HELP_STRING([--with-zfs-devel=PATH],
		[Path to zfs development headers])],
		[zfsdevel="$withval"])

	AC_MSG_CHECKING([user provided zfs devel headers])
	AS_IF([test ! -z "${zfsdevel}"], [
		AS_IF([test -d "${zfsdevel}/usr/include/libspl" && test -d "${zfsdevel}/usr/include/libzfs"], [
			zfsinc="-I $zfsdevel/usr/include/libspl -I $zfsdevel/usr/include/libzfs"
			zfslib="-L$zfsdevel/usr/lib64 -L$zfsdevel/usr/lib -L$zfsdevel/lib64 -L$zfsdevel/lib"
		], [
			AC_MSG_ERROR([Path to development headers directory does not exist])
		])
	])
	AC_MSG_RESULT([$zfsinc])
])
m4trace:/home/build/lustre-release/config/lustre-build-zfs.m4:308: -1- AC_DEFUN([LB_ZFS_USER], [
	dnl #
	dnl # Detect user space zfs development headers.
	dnl #
	AC_MSG_CHECKING([zfs devel headers])
	AS_IF([test -z "${zfsinc}"], [
        	AS_IF([test -e "${zfssrc}/include/libzfs.h" && test -e "${zfssrc}/lib/libspl/include"], [
                	zfsinc="-I $zfssrc/lib/libspl/include -I $zfssrc/include"
			zfslib="-L$zfssrc/lib/libzfs/.libs/"
		], [test -d /usr/include/libzfs && test -d /usr/include/libspl], [
			zfsinc="-I/usr/include/libspl -I /usr/include/libzfs"
			zfslib=""
		], [
			zfsinc="[Not Found]"
			zfslib=""
			enable_zfs=no
		])
	])
	AC_MSG_RESULT([$zfsinc])

	ZFS_LIBZFS_INCLUDE=${zfsinc}
	ZFS_LIBZFS_LDFLAGS="-lzfs ${zfslib}"
	AC_SUBST(ZFS_LIBZFS_INCLUDE)
	AC_SUBST(ZFS_LIBZFS_LDFLAGS)
])
m4trace:/home/build/lustre-release/config/lustre-build-zfs.m4:334: -1- AC_DEFUN([LB_CONFIG_ZFS], [
	AC_ARG_WITH([zfs],
		[AS_HELP_STRING([--with-zfs=PATH], [Path to zfs source])],
		[
			AS_IF([test x$withval = xno], [
				enable_zfs=no
				require_zfs=no
			], [test x$withval = xyes], [
				enable_zfs=yes
				require_zfs=yes
			], [
				enable_zfs=yes
				require_zfs=yes
				zfssrc="$withval"
			])
		], [
			AS_IF([test x$enable_server != xno], [
				require_zfs=no
				enable_zfs=yes
			], [
				require_zfs=no
				enable_zfs=no
			])
		])

	AC_MSG_CHECKING([whether to enable zfs])
	AC_MSG_RESULT([$enable_zfs])

	AS_IF([test x$enable_zfs = xyes], [
		AS_IF([test x$enable_modules = xyes], [
			LB_SPL
			LB_ZFS
		])
		LB_ZFS_DEVEL
		LB_ZFS_USER

		dnl #
		dnl # enable_zfs will be set to no in LB_SPL or LB_ZFS if
		dnl # one of more of the build requirements is not met.
		dnl #
		AS_IF([test x$enable_zfs = xyes], [
			AC_DEFINE(HAVE_ZFS_OSD, 1, Enable zfs osd)
		],[
			AS_IF([test x$require_zfs = xyes], [
				AC_MSG_ERROR([

Required zfs osd cannot be built due to missing zfs development headers.

Support for zfs can be enabled by downloading the required packages for your
distribution.  See http://zfsonlinux.org/ to determine is zfs is supported by
your distribution.
				])
			], [
				AC_MSG_WARN([

Disabling optional zfs osd due to missing development headers.

Support for zfs can be enabled by downloading the required packages for your
distribution.  See http://zfsonlinux.org/ to determine is zfs is supported by
your distribution.
				])
			])
		])
	])

	AS_IF([test "x$enable_zfs" = xyes], [
		LB_CHECK_COMPILE([if zfs defines dsl_pool_config_enter/exit],
		dsl_pool_config_enter, [
			#include <sys/dsl_pool.h>
		],[
			dsl_pool_config_enter(NULL, FTAG);
		],[
			AC_DEFINE(HAVE_DSL_POOL_CONFIG, 1,
				[Have dsl_pool_config_enter/exit in ZFS])
		])
		LB_CHECK_COMPILE([if zfs defines dsl_sync_task_do_nowait],
		dsl_sync_task_do_nowait, [
			#include <sys/dsl_synctask.h>
		],[
			dsl_sync_task_do_nowait(NULL, NULL, NULL, NULL, NULL, 0, NULL);
		],[
			AC_DEFINE(HAVE_DSL_SYNC_TASK_DO_NOWAIT, 1,
				[Have dsl_sync_task_do_nowait in ZFS])
		])
		LB_CHECK_COMPILE([if zfs defines sa_spill_alloc],
		sa_spill_alloc, [
			#include <sys/kmem.h>
			#include <sys/sa.h>
		],[
			void *ptr;

			ptr = sa_spill_alloc(KM_SLEEP);
			sa_spill_free(ptr);
		],[
			AC_DEFINE(HAVE_SA_SPILL_ALLOC, 1,
				[Have sa_spill_alloc in ZFS])
		])
		LB_CHECK_COMPILE([if zfs defines spa_maxblocksize],
		spa_maxblocksize, [
			#include <sys/spa.h>
		],[
			spa_t *spa = NULL;
			int size;

			size = spa_maxblocksize(spa);
		],[
			AC_DEFINE(HAVE_SPA_MAXBLOCKSIZE, 1,
				[Have spa_maxblocksize in ZFS])
		])
	])

	AM_CONDITIONAL(ZFS_ENABLED, [test "x$enable_zfs" = xyes])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:6: -1- AC_DEFUN([LB_CHECK_VERSION], [
AS_IF([test "LUSTRE_VERSION" = "LUSTRE""_VERSION"],
	[AC_MSG_ERROR([This script was not built with a version number.])])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:16: -1- AC_DEFUN([LB_CANONICAL_SYSTEM], [
case $target_os in
	linux*)
		lb_target_os="linux"
		;;
esac
AC_SUBST(lb_target_os)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:28: -1- AC_DEFUN([LB_DOWNSTREAM_RELEASE], [AC_ARG_WITH([downstream-release],
	AC_HELP_STRING([--with-downstream-release=string],
		[set a string in the BUILD_VERSION and RPM Release: (default is nothing)]),
	[DOWNSTREAM_RELEASE=$with_downstream_release],
	[ # if not specified, see if it's in the META file
	AS_IF([test -f META],
		[DOWNSTREAM_RELEASE=$(sed -ne '/^LOCAL_VERSION =/s/.*= *//p' META)])
	])
AC_SUBST(DOWNSTREAM_RELEASE)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:49: -1- AC_DEFUN([LB_BUILDID], [
AC_CACHE_CHECK([for buildid], [lb_cv_buildid], [
lb_cv_buildid=""
AS_IF([git branch >/dev/null 2>&1], [
	ffw=0
	hash=""
	ver=$(git describe --match v[[0-9]]_*_[[0-9]]* --tags)
	if [[[ $ver = *-*-* ]]]; then
		hash=${ver##*-}
		ffw=${ver#*-}
		ffw=${ffw%-*}
		ver=${ver%%-*}
	fi
	# it's tempting to use [[ $ver =~ ^v([0-9]+_)+([0-9]+|RC[0-9]+)$ ]]
	# here but the portability of the regex on the right is dismal
	# (thanx suse)
	if echo "$ver" | egrep -q "^v([[0-9]]+_)+([[0-9]]+|RC[[0-9]]+)$"; then
		ver=$(echo $ver | sed -e 's/^v\(.*\)/\1/' \
				      -e 's/_RC[[0-9]].*$//' -e 's/_/./g')
	fi

	# a "lustre fix" value of .0 should be truncated
	if [[[ $ver = *.*.*.0 ]]]; then
		ver=${ver%.0}
	fi
	# ditto for a "lustre fix" value of _0
	if [[[ $ver = v*_*_*_0 ]]]; then
		ver=${ver%_0}
	fi
	if [[[ $ver = v*_*_* ]]]; then
		ver=${ver#v}
		ver=${ver//_/.}
	fi

	if test "$ver" != "$VERSION"; then
		AC_MSG_WARN([most recent tag found: $ver does not match current version $VERSION.])
	fi

	if test "$ffw" != "0"; then
		lb_cv_buildid="$hash"
	fi
], [test -f META], [
	lb_cv_buildid=$(sed -ne '/^BUILDID =/s/.*= *//p' META)
])
])
AS_IF([test -z "$lb_cv_buildid"], [
	AC_MSG_WARN([

FIXME: I don't know how to deal with source trees outside of git that
don't have a META file. Not setting a buildid.
])
])
BUILDID=$lb_cv_buildid
AC_SUBST(BUILDID)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:113: -1- AC_DEFUN([LB_CHECK_FILE], [
AS_VAR_PUSHDEF([lb_file], [lb_cv_file_$1])dnl
AC_CACHE_CHECK([for $1], lb_file, [
AS_IF([test -r "$1"],
	[AS_VAR_SET(lb_file, [yes])],
	[AS_VAR_SET(lb_file, [no])])
])
AS_VAR_IF([lb_file], [yes], [$2], [$3])[]dnl
AS_VAR_POPDEF([lb_file])dnl
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:130: -1- AC_DEFUN([LB_ARG_LIBS_INCLUDES], [
lb_pathvar="m4_bpatsubst([$2], -, _)"
AC_MSG_CHECKING([for $1])
AC_ARG_WITH([$2],
	AC_HELP_STRING([--with-$2=path],
		[path to $1]),
	[], [withval=$4])
AS_IF([test "x$withval" = xyes],
	[eval "$lb_pathvar='$3'"],
	[eval "$lb_pathvar='$withval'"])
AC_MSG_RESULT([${!lb_pathvar:-no}])

AS_IF([test "x${!lb_pathvar}" != x -a "x${!lb_pathvar}" != xno], [
	AC_MSG_CHECKING([for $1 includes])
	AC_ARG_WITH([$2-includes],
		AC_HELP_STRING([--with-$2-includes=path],
			[path to $1 includes]),
		[], [withval="yes"])

	lb_includevar="${lb_pathvar}_includes"
	AS_IF([test "x$withval" = xyes],
		[eval "${lb_includevar}='${!lb_pathvar}/include'"],
		[eval "${lb_includevar}='$withval'"])
	AC_MSG_RESULT([${!lb_includevar}])

	AC_MSG_CHECKING([for $1 libs])
	AC_ARG_WITH([$2-libs],
		AC_HELP_STRING([--with-$2-libs=path],
			[path to $1 libs]),
		[], [withval="yes"])

	lb_libvar="${lb_pathvar}_libs"
	AS_IF([test "x$withval" = xyes],
		[eval "${lb_libvar}='${!lb_pathvar}/lib'"],
		[eval "${lb_libvar}='$withval'"])
	AC_MSG_RESULT([${!lb_libvar}])
])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:174: -1- AC_DEFUN([LB_PATH_LUSTREIOKIT], [
AC_MSG_CHECKING([whether to build iokit])
AC_ARG_ENABLE([iokit],
	AC_HELP_STRING([--disable-iokit],
		[disable iokit (default is enable)]),
	[], [enable_iokit="yes"])
AC_MSG_RESULT([$enable_iokit])
AS_IF([test "x$enable_iokit" = xyes],
	[LUSTREIOKIT_SUBDIR="lustre-iokit"],
	[LUSTREIOKIT_SUBDIR=""])
AC_SUBST(LUSTREIOKIT_SUBDIR)
AM_CONDITIONAL([BUILD_LUSTREIOKIT], [test "x$enable_iokit" = xyes])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:189: -1- AC_DEFUN([LB_LIBCFS_DIR], [
AS_IF([test "x$libcfs_is_module" = xyes], [
		LIBCFS_INCLUDE_DIR="libcfs/include"
		LIBCFS_SUBDIR="libcfs"
	], [
		LIBCFS_INCLUDE_DIR="lnet/include"
		LIBCFS_SUBDIR=""
	])
AC_SUBST(LIBCFS_INCLUDE_DIR)
AC_SUBST(LIBCFS_SUBDIR)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:206: -1- AC_DEFUN([LB_PATH_SNMP], [
LB_CHECK_FILE([$srcdir/snmp/lustre-snmp.c], [SNMP_DIST_SUBDIR="snmp"])
AC_SUBST(SNMP_DIST_SUBDIR)
AC_SUBST(SNMP_SUBDIR)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:217: -1- AC_DEFUN([LB_CONFIG_MODULES], [
AC_MSG_CHECKING([whether to build Linux kernel modules])
AC_ARG_ENABLE([modules],
	AC_HELP_STRING([--disable-modules],
		[disable building of Lustre kernel modules]),
	[], [
		LC_TARGET_SUPPORTED([enable_modules="yes"],
				    [enable_modules="no"])
	])
AC_MSG_RESULT([$enable_modules ($target_os)])

AS_IF([test "x$enable_modules" = xyes], [
	AS_CASE([$target_os],
		[linux*], [
			LB_PROG_LINUX
			LIBCFS_PROG_LINUX
			LN_PROG_LINUX
			AS_IF([test "x$enable_server" != xno], [LB_EXT4_SRC_DIR])
			LC_PROG_LINUX
		], [*], [
			# This is strange - Lustre supports a target we don't
			AC_MSG_ERROR([Modules are not supported on $target_os])
		])
	])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:248: -1- AC_DEFUN([LB_CONFIG_UTILS], [
AC_MSG_CHECKING([whether to build Lustre utilities])
AC_ARG_ENABLE([utils],
	AC_HELP_STRING([--disable-utils],
		[disable building of Lustre utility programs]),
	[], [enable_utils="yes"])
AC_MSG_RESULT([$enable_utils])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:262: -1- AC_DEFUN([LB_CONFIG_TESTS], [
AC_MSG_CHECKING([whether to build Lustre tests])
AC_ARG_ENABLE([tests],
	AC_HELP_STRING([--disable-tests],
		[disable building of Lustre tests]),
	[], [enable_tests="yes"])
AC_MSG_RESULT([$enable_tests])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:279: -1- AC_DEFUN([LB_CONFIG_DIST], [
AC_MSG_CHECKING([whether to configure just enough for make dist])
AC_ARG_ENABLE([dist],
	AC_HELP_STRING([--enable-dist],
			[only configure enough for make dist]),
	[], [enable_dist="no"])
AC_MSG_RESULT([$enable_dist])
AS_IF([test "x$enable_dist" != xno], [
	enable_doc="no"
	enable_utils="no"
	enable_tests="no"
	enable_modules="no"
])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:299: -1- AC_DEFUN([LB_CONFIG_DOCS], [
AC_MSG_CHECKING([whether to build Lustre docs])
AC_ARG_ENABLE([doc],
	AC_HELP_STRING([--disable-doc],
			[skip creation of pdf documentation]),
	[], [enable_doc="no"])
AC_MSG_RESULT([$enable_doc])
AS_IF([test "x$enable_doc" = xyes],
	[ENABLE_DOC=1], [ENABLE_DOC=0])
AC_SUBST(ENABLE_DOC)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:316: -1- AC_DEFUN([LB_CONFIG_MANPAGES], [
AC_MSG_CHECKING([whether to build Lustre manpages])
AC_ARG_ENABLE([manpages],
	AC_HELP_STRING([--disable-manpages],
			[skip creation and inclusion of man pages (default is enable)]),
	[], [enable_manpages="yes"])
AC_MSG_RESULT([$enable_manpages])
AS_IF([test "x$enable_manpages" = xyes], [
AC_CHECK_PROGS(RST2MAN, [rst2man rst2man.py], [])
  if test "x$RST2MAN" = "x"; then
    AC_MSG_ERROR(
      [rst2man is needed to build the man pages. Install python-docutils.])
fi
])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:337: -1- AC_DEFUN([LB_CONFIG_HEADERS], [
AC_CONFIG_HEADERS([config.h])
CPPFLAGS="-include $PWD/undef.h -include $PWD/config.h $CPPFLAGS"
EXTRA_KCFLAGS="-include $PWD/undef.h -include $PWD/config.h $EXTRA_KCFLAGS"
AC_SUBST(EXTRA_KCFLAGS)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:349: -1- AC_DEFUN([LB_INCLUDE_RULES], [
INCLUDE_RULES="include $PWD/Rules"
AC_SUBST(INCLUDE_RULES)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:359: -1- AC_DEFUN([LB_PATH_DEFAULTS], [
# directories for binaries
AC_PREFIX_DEFAULT([/usr])

sysconfdir='$(CROSS_PATH)/etc'
AC_SUBST(sysconfdir)

# Directories for documentation and demos.
docdir='$(datadir)/doc/$(PACKAGE)'
AC_SUBST(docdir)

LIBCFS_PATH_DEFAULTS
LN_PATH_DEFAULTS
LC_PATH_DEFAULTS
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:380: -1- AC_DEFUN([LB_PROG_CC], [
AC_PROG_RANLIB
AC_CHECK_TOOL(LD, [ld], [no])
AC_CHECK_TOOL(OBJDUMP, [objdump], [no])
AC_CHECK_TOOL(STRIP, [strip], [no])

# ---------  unsigned long long sane? -------
AC_CHECK_SIZEOF(unsigned long long, 0)
AS_IF([test $ac_cv_sizeof_unsigned_long_long != 8],
	[AC_MSG_ERROR([we assume that sizeof(unsigned long long) == 8.])])

AS_IF([test $target_cpu = powerpc64], [
	AC_MSG_WARN([set compiler with -m64])
	CFLAGS="$CFLAGS -m64"
	CC="$CC -m64"
])

CPPFLAGS="-I$PWD/$LIBCFS_INCLUDE_DIR -I$PWD/lnet/include -I$PWD/lustre/include $CPPFLAGS"

CCASFLAGS="-Wall -fPIC -D_GNU_SOURCE"
AC_SUBST(CCASFLAGS)

# everyone builds against lnet and lustre
EXTRA_KCFLAGS="$EXTRA_KCFLAGS -g -I$PWD/$LIBCFS_INCLUDE_DIR -I$PWD/lnet/include -I$PWD/lustre/include"
AC_SUBST(EXTRA_KCFLAGS)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:413: -1- AC_DEFUN([LB_CONDITIONALS], [
AM_CONDITIONAL([MODULES], [test x$enable_modules = xyes])
AM_CONDITIONAL([UTILS], [test x$enable_utils = xyes])
AM_CONDITIONAL([TESTS], [test x$enable_tests = xyes])
AM_CONDITIONAL([DOC], [test x$ENABLE_DOC = x1])
AM_CONDITIONAL([MANPAGES], [test x$enable_manpages = xyes])
AM_CONDITIONAL([LINUX], [test x$lb_target_os = xlinux])
AM_CONDITIONAL([USES_DPKG], [test x$uses_dpkg = xyes])
AM_CONDITIONAL([USE_QUILT], [test x$use_quilt = xyes])
AM_CONDITIONAL([RHEL], [test x$RHEL_KERNEL = xyes])
AM_CONDITIONAL([SUSE], [test x$SUSE_KERNEL = xyes])

# Sanity check for PCLMULQDQ instruction availability
# PCLMULQDQ instruction is a new instruction available beginning with
# the all new Core processor family based on the 32nm microarchitecture
# codename Westmere. So, $target_cpu = x86_64 should have this instruction
# except MIC microarchitecture (k1om).
AM_CONDITIONAL(HAVE_PCLMULQDQ, test x$target_cpu = "xx86_64" -a x$target_vendor != "xk1om")
AS_IF([test x$target_cpu = "xx86_64" -a x$target_vendor != "xk1om"],
	[AC_DEFINE(HAVE_PCLMULQDQ, 1, [have PCLMULQDQ instruction])])

LIBCFS_CONDITIONALS
LN_CONDITIONALS
LC_CONDITIONALS
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:444: -1- AC_DEFUN([LB_CONFIG_FILES], [
	AC_CONFIG_FILES([
		Makefile
		autoMakefile]
		config/Makefile
		[Rules:build/Rules.in]
		AC_PACKAGE_TARNAME[.spec]
		AC_PACKAGE_TARNAME[-dkms.spec]
		contrib/Makefile
		contrib/lbuild/Makefile
		contrib/scripts/Makefile
		ldiskfs/Makefile
		ldiskfs/autoMakefile
		lustre-iokit/Makefile
		lustre-iokit/obdfilter-survey/Makefile
		lustre-iokit/ost-survey/Makefile
		lustre-iokit/sgpdd-survey/Makefile
		lustre-iokit/mds-survey/Makefile
		lustre-iokit/ior-survey/Makefile
		lustre-iokit/stats-collect/Makefile
	)
	AC_CONFIG_FILES([lustre/scripts/dkms.mkconf],
			[chmod +x lustre/scripts/dkms.mkconf])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:472: -1- AC_DEFUN([LB_CONFIG_SERVERS], [
AC_ARG_ENABLE([server],
	AC_HELP_STRING([--disable-server],
			[disable Lustre server support]), [
		AS_IF([test x$enable_server != xyes -a x$enable_server != xno],
			[AC_MSG_ERROR([server valid options are "yes" or "no"])])
		AS_IF([test x$enable_server = xyes -a x$enable_dist = xyes],
			[AC_MSG_ERROR([--enable-server cannot be used with --enable-dist])])
	], [
		AS_IF([test x$enable_dist = xyes],
			[enable_server=no], [enable_server=maybe])
	])

# There are at least two good reasons why we should really run
# LB_CONFIG_MODULES elsewhere before the call to LB_CONFIG_SERVERS:
# LB_CONFIG_MODULES needs to be run for client support even when
# servers are disabled, and because module support is actually a
# prerequisite of server support.  However, some things under
# LB_CONFIG_MODULES need us to already have checked for --disable-server,
# before running, so until LB_CONFIG_MODULES can be reorganized, we
# call it here.
LB_CONFIG_MODULES
AS_IF([test x$enable_modules = xno], [enable_server=no])
LB_CONFIG_LDISKFS
LB_CONFIG_ZFS

# If no backends were configured, and the user did not explicitly
# require servers to be enabled, we just disable servers.
AS_IF([test x$enable_ldiskfs = xno -a x$enable_zfs = xno], [
	AS_CASE([$enable_server],
		[maybe], [enable_server=no],
		[yes], [AC_MSG_ERROR([cannot enable servers, no backends were configured])])
	], [
		AS_IF([test x$enable_server = xmaybe], [enable_server=yes])
	])

AC_MSG_CHECKING([whether to build Lustre server support])
AC_MSG_RESULT([$enable_server])
AS_IF([test x$enable_server = xyes],
	[AC_DEFINE(HAVE_SERVER_SUPPORT, 1, [support server])])
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:524: -1- AC_DEFUN([LB_CONFIG_RPMBUILD_OPTIONS], [
RPMBINARGS=
CONFIGURE_ARGS=
eval set -- $ac_configure_args
for arg; do
	case $arg in
		--*dir=* ) ;;
		-C | --cache-file=* ) ;;
		--prefix=* | --*-prefix=* ) ;;
		--enable-dist ) ;;
		--with-release=* ) ;;
		--with-kmp-moddir=* ) ;;
		--with-linux=* | --with-linux-obj=* ) ;;
		--enable-shared | --disable-shared ) ;;
		--enable-static | --disable-static ) ;;
		--enable-ldiskfs | --disable-ldiskfs ) ;;
		--enable-modules | --disable-modules ) ;;
		--enable-server | --disable-server ) ;;
		--enable-tests | --disable-tests ) ;;
		--enable-utils | --disable-utils ) ;;
		--enable-iokit | --disable-iokit ) ;;
		--enable-dlc | --disable-dlc ) ;;
		--enable-manpages | --disable-manpages ) ;;
		* ) CONFIGURE_ARGS="$CONFIGURE_ARGS '$arg'" ;;
	esac
done
if test -n "$CONFIGURE_ARGS" ; then
	RPMBINARGS="$RPMBINARGS --define \"configure_args $CONFIGURE_ARGS\""
fi
if test -n "$LINUX" ; then
	RPMBINARGS="$RPMBINARGS --define \"kdir $LINUX\""
	if test -n "$LINUX_OBJ" -a "$LINUX_OBJ" != x"$LINUX" ; then
		RPMBINARGS="$RPMBINARGS --define \"kobjdir $LINUX_OBJ\""
	fi
fi
if test -n "$KMP_MODDIR" ; then
	RPMBINARGS="$RPMBINARGS --define \"kmoddir $KMP_MODDIR\""
fi
if test -n "$CROSS_PATH" ; then
	if test x$enable_server = xyes ; then
		echo -e "\n"
		"*** Don't support cross compilation for the Intel(R) Xeon Phi(TM) card.\n"
		exit 1
	fi
	CROSS_SUFFIX="-mic"
	RPMBINARGS="$RPMBINARGS --define \"post_script build/gen_filelist.sh\""
	RPMBINARGS="$RPMBINARGS --define \"cross_path $CROSS_PATH\""
	RPMBINARGS="$RPMBINARGS --define \"rootdir %{cross_path}\""
	RPMBINARGS="$RPMBINARGS --define \"_prefix %{cross_path}/usr\""
	RPMBINARGS="$RPMBINARGS --define \"_mandir %{_prefix}/share/man\""
	RPMBINARGS="$RPMBINARGS --define \"_sysconfdir %{cross_path}/etc\""
	RPMBINARGS="$RPMBINARGS --define \"make_args $CROSS_VARS\""
	if test x$CC_TARGET_ARCH = x"x86_64-k1om-linux" ; then
		RPMBINARGS="$RPMBINARGS --define \"cross_requires intel-mic-gpl\""
	fi
fi
if test x$enable_modules != xyes ; then
	RPMBINARGS="$RPMBINARGS --without lustre_modules"
fi
if test x$enable_tests != xyes ; then
	RPMBINARGS="$RPMBINARGS --without lustre_tests"
fi
if test x$enable_utils != xyes ; then
	RPMBINARGS="$RPMBINARGS --without lustre_utils"
fi
if test x$enable_server != xyes ; then
	RPMBINARGS="$RPMBINARGS --without servers"
	if test -n "$CROSS_SUFFIX" ; then
		RPMBINARGS="$RPMBINARGS --define \"lustre_name lustre-client$CROSS_SUFFIX\""
	fi
fi
if test x$enable_ldiskfs != xyes ; then
	RPMBINARGS="$RPMBINARGS --without ldiskfs"
fi
if test x$enable_zfs = xyes ; then
	RPMBINARGS="$RPMBINARGS --with zfs"
fi
if test x$enable_iokit != xyes ; then
	RPMBINARGS="$RPMBINARGS --without lustre_iokit"
fi
if test x$USE_DLC = xyes ; then
	RPMBINARGS="$RPMBINARGS --with lnet_dlc"
fi
if test x$enable_manpages != xyes ; then
	RPMBINARGS="$RPMBINARGS --without manpages"
fi
if test x$enable_shared != xyes ; then
	RPMBINARGS="$RPMBINARGS --without shared"
fi
if test x$enable_static != xyes ; then
	RPMBINARGS="$RPMBINARGS --without static"
fi

RPMBUILD_BINARY_ARGS=$RPMBINARGS

AC_SUBST(RPMBUILD_BINARY_ARGS)
])
m4trace:/home/build/lustre-release/config/lustre-build.m4:627: -1- AC_DEFUN([LB_CONFIGURE], [
AC_MSG_NOTICE([Lustre base checks
==============================================================================])
LB_CANONICAL_SYSTEM

LB_CONFIG_DIST

LB_DOWNSTREAM_RELEASE
LB_USES_DPKG
LB_BUILDID

LB_LIBCFS_DIR

LB_INCLUDE_RULES

LB_PATH_DEFAULTS

LB_PROG_CC

LC_OSD_ADDON

LB_CONFIG_DOCS
LB_CONFIG_MANPAGES
LB_CONFIG_UTILS
LB_CONFIG_TESTS
LC_CONFIG_CLIENT
LB_CONFIG_MPITESTS
LB_CONFIG_SERVERS

# Tests depends from utils (multiop from liblustreapi)
AS_IF([test "x$enable_utils" = xno], [enable_tests="no"])

m4_ifdef([LC_NODEMAP_PROC_DEBUG], [LC_NODEMAP_PROC_DEBUG])
LIBCFS_CONFIG_CDEBUG
LC_QUOTA

LB_PATH_SNMP
LB_PATH_LUSTREIOKIT

LB_DEFINE_E2FSPROGS_NAMES

LIBCFS_CONFIGURE
LN_CONFIGURE
LC_CONFIGURE
AS_IF([test -n "$SNMP_DIST_SUBDIR"], [LS_CONFIGURE])

LB_CONDITIONALS
LB_CONFIG_HEADERS

LIBCFS_CONFIG_FILES
LB_CONFIG_FILES
LN_CONFIG_FILES
LC_CONFIG_FILES
AS_IF([test -n "$SNMP_DIST_SUBDIR"], [LS_CONFIG_FILES])

AC_SUBST(ac_configure_args)

MOSTLYCLEANFILES='.*.cmd .*.flags *.o *.ko *.mod.c .depend .*.1.* Modules.symvers Module.symvers'
AC_SUBST(MOSTLYCLEANFILES)

LB_CONFIG_RPMBUILD_OPTIONS

AC_OUTPUT

cat <<_ACEOF

CC:            $CC
LD:            $LD
CPPFLAGS:      $CPPFLAGS
CFLAGS:        $CFLAGS
EXTRA_KCFLAGS: $EXTRA_KCFLAGS

Type 'make' to build Lustre.
_ACEOF
])
m4trace:configure.ac:2: -1- m4_pattern_forbid([^_?A[CHUM]_])
m4trace:configure.ac:2: -1- m4_pattern_forbid([_AC_])
m4trace:configure.ac:2: -1- m4_pattern_forbid([^LIBOBJS$], [do not use LIBOBJS directly, use AC_LIBOBJ (see section `AC_LIBOBJ vs LIBOBJS'])
m4trace:configure.ac:2: -1- m4_pattern_allow([^AS_FLAGS$])
m4trace:configure.ac:2: -1- m4_pattern_forbid([^_?m4_])
m4trace:configure.ac:2: -1- m4_pattern_forbid([^dnl$])
m4trace:configure.ac:2: -1- m4_pattern_forbid([^_?AS_])
m4trace:configure.ac:2: -1- m4_pattern_allow([^SHELL$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PATH_SEPARATOR$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^exec_prefix$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^prefix$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^program_transform_name$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^bindir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^sbindir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^libexecdir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^datarootdir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^datadir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^sharedstatedir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^localstatedir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^includedir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^oldincludedir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^infodir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^htmldir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^dvidir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^pdfdir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^psdir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^libdir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^localedir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^mandir$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_NAME$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_TARNAME$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_VERSION$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_STRING$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^PACKAGE_BUGREPORT$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^DEFS$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^ECHO_C$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^ECHO_N$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^ECHO_T$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^build_alias$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^host_alias$])
m4trace:configure.ac:2: -1- m4_pattern_allow([^target_alias$])
m4trace:lustre/autoconf/lustre-version.ac:15: -1- m4_pattern_allow([AC_LUSTRE])
m4trace:lustre/autoconf/lustre-version.ac:26: -1- m4_pattern_allow([^AC_LUSTRE_MAJOR$])
m4trace:lustre/autoconf/lustre-version.ac:27: -1- m4_pattern_allow([^AC_LUSTRE_MINOR$])
m4trace:lustre/autoconf/lustre-version.ac:28: -1- m4_pattern_allow([^AC_LUSTRE_PATCH$])
m4trace:lustre/autoconf/lustre-version.ac:29: -1- m4_pattern_allow([^AC_LUSTRE_FIX$])
m4trace:lustre/autoconf/lustre-version.ac:30: -1- m4_pattern_allow([^AC_LUSTRE_VERSION_STRING$])
m4trace:lustre/autoconf/lustre-version.ac:31: -1- m4_pattern_allow([^AC_LUSTRE_VER_ALLOWED_OFFSET$])
m4trace:lustre/autoconf/lustre-version.ac:32: -1- m4_pattern_allow([^AC_LUSTRE_CLI_VER_OFFSET_WARN$])
m4trace:configure.ac:8: -1- LB_CHECK_VERSION
m4trace:configure.ac:10: -1- LC_CONFIG_SRCDIR
m4trace:configure.ac:12: -1- _m4_warn([obsolete], [The macro `AC_CANONICAL_SYSTEM' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:1819: AC_CANONICAL_SYSTEM is expanded from...
configure.ac:12: the top level])
m4trace:configure.ac:12: -1- m4_pattern_allow([^build$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^build_cpu$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^build_vendor$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^build_os$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^host$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^host_cpu$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^host_vendor$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^host_os$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^target$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^target_cpu$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^target_vendor$])
m4trace:configure.ac:12: -1- m4_pattern_allow([^target_os$])
m4trace:configure.ac:14: -1- AM_INIT_AUTOMAKE([1.10 tar-ustar -Wno-portability])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AM_[A-Z]+FLAGS$])
m4trace:configure.ac:14: -1- AM_SET_CURRENT_AUTOMAKE_VERSION
m4trace:configure.ac:14: -1- AM_AUTOMAKE_VERSION([1.11.1])
m4trace:configure.ac:14: -1- _AM_AUTOCONF_VERSION([2.63])
m4trace:configure.ac:14: -1- m4_pattern_allow([^INSTALL_PROGRAM$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^INSTALL_SCRIPT$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^INSTALL_DATA$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^am__isrc$])
m4trace:configure.ac:14: -1- _AM_SUBST_NOTMAKE([am__isrc])
m4trace:configure.ac:14: -1- m4_pattern_allow([^CYGPATH_W$])
m4trace:configure.ac:14: -1- _AM_SET_OPTIONS([1.10 tar-ustar -Wno-portability])
m4trace:configure.ac:14: -1- _AM_SET_OPTION([1.10])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([1.10])
m4trace:configure.ac:14: -1- _AM_SET_OPTION([tar-ustar])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:14: -1- _AM_SET_OPTION([-Wno-portability])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([-Wno-portability])
m4trace:configure.ac:14: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([no-define], [], [AC_DEFINE_UNQUOTED(PACKAGE, "$PACKAGE", [Name of package])
 AC_DEFINE_UNQUOTED(VERSION, "$VERSION", [Version number of package])])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([no-define])
m4trace:configure.ac:14: -1- m4_pattern_allow([^PACKAGE$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^VERSION$])
m4trace:configure.ac:14: -1- AM_SANITY_CHECK
m4trace:configure.ac:14: -1- AM_MISSING_PROG([ACLOCAL], [aclocal-${am__api_version}])
m4trace:configure.ac:14: -1- AM_MISSING_HAS_RUN
m4trace:configure.ac:14: -1- AM_AUX_DIR_EXPAND
m4trace:configure.ac:14: -1- m4_pattern_allow([^ACLOCAL$])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([AUTOCONF], [autoconf])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AUTOCONF$])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([AUTOMAKE], [automake-${am__api_version}])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AUTOMAKE$])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([AUTOHEADER], [autoheader])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AUTOHEADER$])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([MAKEINFO], [makeinfo])
m4trace:configure.ac:14: -1- m4_pattern_allow([^MAKEINFO$])
m4trace:configure.ac:14: -1- AM_PROG_INSTALL_SH
m4trace:configure.ac:14: -1- m4_pattern_allow([^install_sh$])
m4trace:configure.ac:14: -1- AM_PROG_INSTALL_STRIP
m4trace:configure.ac:14: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^INSTALL_STRIP_PROGRAM$])
m4trace:configure.ac:14: -1- AM_PROG_MKDIR_P
m4trace:configure.ac:14: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^mkdir_p$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AWK$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^SET_MAKE$])
m4trace:configure.ac:14: -1- AM_SET_LEADING_DOT
m4trace:configure.ac:14: -1- m4_pattern_allow([^am__leading_dot$])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([tar-ustar], [_AM_PROG_TAR([ustar])], [_AM_IF_OPTION([tar-pax], [_AM_PROG_TAR([pax])],
			     [_AM_PROG_TAR([v7])])])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([tar-ustar])
m4trace:configure.ac:14: -1- _AM_PROG_TAR([ustar])
m4trace:configure.ac:14: -1- AM_MISSING_PROG([AMTAR], [tar])
m4trace:configure.ac:14: -1- m4_pattern_allow([^AMTAR$])
m4trace:configure.ac:14: -1- AM_RUN_LOG([$_am_tar --version])
m4trace:configure.ac:14: -1- AM_RUN_LOG([tardir=conftest.dir && eval $am__tar_ >conftest.tar])
m4trace:configure.ac:14: -1- AM_RUN_LOG([$am__untar <conftest.tar])
m4trace:configure.ac:14: -1- m4_pattern_allow([^am__tar$])
m4trace:configure.ac:14: -1- m4_pattern_allow([^am__untar$])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([no-dependencies], [], [AC_PROVIDE_IFELSE([AC_PROG_CC],
		  [_AM_DEPENDENCIES(CC)],
		  [define([AC_PROG_CC],
			  defn([AC_PROG_CC])[_AM_DEPENDENCIES(CC)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_CXX],
		  [_AM_DEPENDENCIES(CXX)],
		  [define([AC_PROG_CXX],
			  defn([AC_PROG_CXX])[_AM_DEPENDENCIES(CXX)])])dnl
AC_PROVIDE_IFELSE([AC_PROG_OBJC],
		  [_AM_DEPENDENCIES(OBJC)],
		  [define([AC_PROG_OBJC],
			  defn([AC_PROG_OBJC])[_AM_DEPENDENCIES(OBJC)])])dnl
])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:14: -1- _AM_IF_OPTION([silent-rules], [AC_REQUIRE([AM_SILENT_RULES])])
m4trace:configure.ac:14: -2- _AM_MANGLE_OPTION([silent-rules])
m4trace:configure.ac:15: -1- AM_MAINTAINER_MODE([enable])
m4trace:configure.ac:15: -1- AM_CONDITIONAL([MAINTAINER_MODE], [test $USE_MAINTAINER_MODE = yes])
m4trace:configure.ac:15: -1- m4_pattern_allow([^MAINTAINER_MODE_TRUE$])
m4trace:configure.ac:15: -1- m4_pattern_allow([^MAINTAINER_MODE_FALSE$])
m4trace:configure.ac:15: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_TRUE])
m4trace:configure.ac:15: -1- _AM_SUBST_NOTMAKE([MAINTAINER_MODE_FALSE])
m4trace:configure.ac:15: -1- m4_pattern_allow([^MAINT$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^CFLAGS$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^LDFLAGS$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^LIBS$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^CC$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^ac_ct_CC$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^EXEEXT$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^OBJEXT$])
m4trace:configure.ac:17: -1- _AM_DEPENDENCIES([CC])
m4trace:configure.ac:17: -1- AM_SET_DEPDIR
m4trace:configure.ac:17: -1- m4_pattern_allow([^DEPDIR$])
m4trace:configure.ac:17: -1- AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:17: -1- AM_MAKE_INCLUDE
m4trace:configure.ac:17: -1- m4_pattern_allow([^am__include$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^am__quote$])
m4trace:configure.ac:17: -1- AM_DEP_TRACK
m4trace:configure.ac:17: -1- AM_CONDITIONAL([AMDEP], [test "x$enable_dependency_tracking" != xno])
m4trace:configure.ac:17: -1- m4_pattern_allow([^AMDEP_TRUE$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^AMDEP_FALSE$])
m4trace:configure.ac:17: -1- _AM_SUBST_NOTMAKE([AMDEP_TRUE])
m4trace:configure.ac:17: -1- _AM_SUBST_NOTMAKE([AMDEP_FALSE])
m4trace:configure.ac:17: -1- m4_pattern_allow([^AMDEPBACKSLASH$])
m4trace:configure.ac:17: -1- _AM_SUBST_NOTMAKE([AMDEPBACKSLASH])
m4trace:configure.ac:17: -1- m4_pattern_allow([^CCDEPMODE$])
m4trace:configure.ac:17: -1- AM_CONDITIONAL([am__fastdepCC], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CC_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:17: -1- m4_pattern_allow([^am__fastdepCC_TRUE$])
m4trace:configure.ac:17: -1- m4_pattern_allow([^am__fastdepCC_FALSE$])
m4trace:configure.ac:17: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_TRUE])
m4trace:configure.ac:17: -1- _AM_SUBST_NOTMAKE([am__fastdepCC_FALSE])
m4trace:configure.ac:18: -1- AC_PROG_LIBTOOL
m4trace:configure.ac:18: -1- _m4_warn([obsolete], [The macro `AC_PROG_LIBTOOL' is obsolete.
You should run autoupdate.], [/home/build/lustre-release/config/libtool.m4:102: AC_PROG_LIBTOOL is expanded from...
configure.ac:18: the top level])
m4trace:configure.ac:18: -1- LT_INIT
m4trace:configure.ac:18: -1- m4_pattern_forbid([^_?LT_[A-Z_]+$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^(_LT_EOF|LT_DLGLOBAL|LT_DLLAZY_OR_NOW|LT_MULTI_MODULE)$])
m4trace:configure.ac:18: -1- LTOPTIONS_VERSION
m4trace:configure.ac:18: -1- LTSUGAR_VERSION
m4trace:configure.ac:18: -1- LTVERSION_VERSION
m4trace:configure.ac:18: -1- LTOBSOLETE_VERSION
m4trace:configure.ac:18: -1- _LT_PROG_LTMAIN
m4trace:configure.ac:18: -1- m4_pattern_allow([^LIBTOOL$])
m4trace:configure.ac:18: -1- LT_PATH_LD
m4trace:configure.ac:18: -1- m4_pattern_allow([^SED$])
m4trace:configure.ac:18: -1- AC_PROG_EGREP
m4trace:configure.ac:18: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^EGREP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^FGREP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^GREP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:18: -1- LT_PATH_NM
m4trace:configure.ac:18: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^ac_ct_DUMPBIN$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^DUMPBIN$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^NM$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^LN_S$])
m4trace:configure.ac:18: -1- LT_CMD_MAX_LEN
m4trace:configure.ac:18: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:18: -1- m4_pattern_allow([LT_OBJDIR])
m4trace:configure.ac:18: -1- m4_pattern_allow([^LT_OBJDIR$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^lt_ECHO$])
m4trace:configure.ac:18: -1- _LT_CC_BASENAME([$compiler])
m4trace:configure.ac:18: -1- _LT_PATH_TOOL_PREFIX([${ac_tool_prefix}file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:18: -1- _LT_PATH_TOOL_PREFIX([file], [/usr/bin$PATH_SEPARATOR$PATH])
m4trace:configure.ac:18: -1- LT_SUPPORTED_TAG([CC])
m4trace:configure.ac:18: -1- _LT_COMPILER_BOILERPLATE
m4trace:configure.ac:18: -1- _LT_LINKER_BOILERPLATE
m4trace:configure.ac:18: -1- _LT_COMPILER_OPTION([if $compiler supports -fno-rtti -fno-exceptions], [lt_cv_prog_compiler_rtti_exceptions], [-fno-rtti -fno-exceptions], [], [_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, )="$_LT_TAGVAR(lt_prog_compiler_no_builtin_flag, ) -fno-rtti -fno-exceptions"])
m4trace:configure.ac:18: -1- _LT_COMPILER_OPTION([if $compiler PIC flag $_LT_TAGVAR(lt_prog_compiler_pic, ) works], [_LT_TAGVAR(lt_cv_prog_compiler_pic_works, )], [$_LT_TAGVAR(lt_prog_compiler_pic, )@&t@m4_if([],[],[ -DPIC],[m4_if([],[CXX],[ -DPIC],[])])], [], [case $_LT_TAGVAR(lt_prog_compiler_pic, ) in
     "" | " "*) ;;
     *) _LT_TAGVAR(lt_prog_compiler_pic, )=" $_LT_TAGVAR(lt_prog_compiler_pic, )" ;;
     esac], [_LT_TAGVAR(lt_prog_compiler_pic, )=
     _LT_TAGVAR(lt_prog_compiler_can_build_shared, )=no])
m4trace:configure.ac:18: -1- _LT_LINKER_OPTION([if $compiler static flag $lt_tmp_static_flag works], [lt_cv_prog_compiler_static_works], [$lt_tmp_static_flag], [], [_LT_TAGVAR(lt_prog_compiler_static, )=])
m4trace:configure.ac:18: -1- m4_pattern_allow([^DSYMUTIL$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^NMEDIT$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^LIPO$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^OTOOL$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^OTOOL64$])
m4trace:configure.ac:18: -1- LT_SYS_DLOPEN_SELF
m4trace:configure.ac:18: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^CPPFLAGS$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^CPP$])
m4trace:configure.ac:18: -1- m4_pattern_allow([^STDC_HEADERS$])
m4trace:configure.ac:19: -1- m4_pattern_allow([^MKDIR_P$])
m4trace:configure.ac:20: -1- AM_PROG_AS
m4trace:configure.ac:20: -1- m4_pattern_allow([^CCAS$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^CCASFLAGS$])
m4trace:configure.ac:20: -1- _AM_IF_OPTION([no-dependencies], [], [_AM_DEPENDENCIES([CCAS])])
m4trace:configure.ac:20: -2- _AM_MANGLE_OPTION([no-dependencies])
m4trace:configure.ac:20: -1- _AM_DEPENDENCIES([CCAS])
m4trace:configure.ac:20: -1- m4_pattern_allow([^CCASDEPMODE$])
m4trace:configure.ac:20: -1- AM_CONDITIONAL([am__fastdepCCAS], [
  test "x$enable_dependency_tracking" != xno \
  && test "$am_cv_CCAS_dependencies_compiler_type" = gcc3])
m4trace:configure.ac:20: -1- m4_pattern_allow([^am__fastdepCCAS_TRUE$])
m4trace:configure.ac:20: -1- m4_pattern_allow([^am__fastdepCCAS_FALSE$])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_TRUE])
m4trace:configure.ac:20: -1- _AM_SUBST_NOTMAKE([am__fastdepCCAS_FALSE])
m4trace:configure.ac:22: -1- m4_pattern_allow([^RPMBUILD$])
m4trace:configure.ac:23: -1- m4_pattern_allow([^AR$])
m4trace:configure.ac:23: -1- m4_pattern_allow([^ac_ct_AR$])
m4trace:configure.ac:25: -1- LB_CONFIGURE
m4trace:configure.ac:25: -1- LB_CANONICAL_SYSTEM
m4trace:configure.ac:25: -1- m4_pattern_allow([^lb_target_os$])
m4trace:configure.ac:25: -1- LB_CONFIG_DIST
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:279: LB_CONFIG_DIST is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_DOWNSTREAM_RELEASE
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:28: LB_DOWNSTREAM_RELEASE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DOWNSTREAM_RELEASE$])
m4trace:configure.ac:25: -1- LB_USES_DPKG
m4trace:configure.ac:25: -1- LB_BUILDID
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILDID$])
m4trace:configure.ac:25: -1- LB_LIBCFS_DIR
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIBCFS_INCLUDE_DIR$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIBCFS_SUBDIR$])
m4trace:configure.ac:25: -1- LB_INCLUDE_RULES
m4trace:configure.ac:25: -1- m4_pattern_allow([^INCLUDE_RULES$])
m4trace:configure.ac:25: -1- LB_PATH_DEFAULTS
m4trace:configure.ac:25: -1- m4_pattern_allow([^sysconfdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^docdir$])
m4trace:configure.ac:25: -1- LIBCFS_PATH_DEFAULTS
m4trace:configure.ac:25: -1- LN_PATH_DEFAULTS
m4trace:configure.ac:25: -1- LC_PATH_DEFAULTS
m4trace:configure.ac:25: -1- m4_pattern_allow([^LUSTRE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^rootsbindir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^demodir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^pkgexampledir$])
m4trace:configure.ac:25: -1- LB_PROG_CC
m4trace:configure.ac:25: -1- m4_pattern_allow([^RANLIB$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LD$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^OBJDUMP$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^STRIP$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SIZEOF_UNSIGNED_LONG_LONG$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CCASFLAGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXTRA_KCFLAGS$])
m4trace:configure.ac:25: -1- LC_OSD_ADDON
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2276: LC_OSD_ADDON is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^OSDADDON$])
m4trace:configure.ac:25: -1- LB_CONFIG_DOCS
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:299: LB_CONFIG_DOCS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ENABLE_DOC$])
m4trace:configure.ac:25: -1- LB_CONFIG_MANPAGES
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:316: LB_CONFIG_MANPAGES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^RST2MAN$])
m4trace:configure.ac:25: -1- LB_CONFIG_UTILS
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:248: LB_CONFIG_UTILS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_CONFIG_TESTS
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:262: LB_CONFIG_TESTS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LC_CONFIG_CLIENT
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2152: LC_CONFIG_CLIENT is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_CONFIG_MPITESTS
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2164: LB_CONFIG_MPITESTS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MPICC_WRAPPER$])
m4trace:configure.ac:25: -1- LB_CONFIG_SERVERS
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_CONFIG_MODULES
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LC_TARGET_SUPPORTED([enable_modules="yes"], [enable_modules="no"])
m4trace:configure.ac:25: -1- LB_PROG_LINUX
m4trace:configure.ac:25: -1- LB_LINUX_PATH
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:230: LB_LINUX_PATH is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:407: LB_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_ARG_CANON_PATH([linux], [LINUX])
m4trace:configure.ac:25: -1- __LB_ARG_CANON_PATH([linux], [linux], [LINUX])
m4trace:configure.ac:25: -1- LB_ARG_REPLACE_PATH([linux], [$LINUX])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LINUX$])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX], [], [AC_MSG_ERROR([Kernel source $LINUX could not be found.])])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:230: LB_LINUX_PATH is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:407: LB_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_ARG_CANON_PATH([linux-obj], [LINUX_OBJ])
m4trace:configure.ac:25: -1- __LB_ARG_CANON_PATH([linux-obj], [linux_obj], [LINUX_OBJ])
m4trace:configure.ac:25: -1- LB_ARG_REPLACE_PATH([linux-obj], [$LINUX_OBJ])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LINUX_OBJ$])
m4trace:configure.ac:25: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1443: AC_ARG_WITH is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:230: LB_LINUX_PATH is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:407: LB_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_ARG_CANON_PATH([linux-config], [LINUX_CONFIG])
m4trace:configure.ac:25: -1- __LB_ARG_CANON_PATH([linux-config], [linux_config], [LINUX_CONFIG])
m4trace:configure.ac:25: -1- LB_ARG_REPLACE_PATH([linux-config], [$LINUX_CONFIG])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX_CONFIG], [], [AC_MSG_ERROR([

Kernel config could not be found.

If you are building from a kernel-source rpm consult build/README.kernel-source
])
])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LINUX_CONFIG$])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([/boot/kernel.h], [KERNEL_SOURCE_HEADER='/boot/kernel.h'], [LB_CHECK_FILE([/var/adm/running-kernel.h],
		[KERNEL_SOURCE_HEADER='/var/adm/running-kernel.h'])])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([/var/adm/running-kernel.h], [KERNEL_SOURCE_HEADER='/var/adm/running-kernel.h'])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:230: LB_LINUX_PATH is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:407: LB_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_ARG_CANON_PATH([kernel-source-header], [KERNEL_SOURCE_HEADER])
m4trace:configure.ac:25: -1- __LB_ARG_CANON_PATH([kernel-source-header], [kernel_source_header], [KERNEL_SOURCE_HEADER])
m4trace:configure.ac:25: -1- LB_ARG_REPLACE_PATH([kernel-source-header], [$KERNEL_SOURCE_HEADER])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX_OBJ/include/generated/autoconf.h], [AUTOCONF_HDIR=generated], [LB_CHECK_FILE([$LINUX_OBJ/include/linux/autoconf.h],
		[AUTOCONF_HDIR=linux],
		[AC_MSG_ERROR([Run make config in $LINUX.])])])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX_OBJ/include/linux/autoconf.h], [AUTOCONF_HDIR=linux], [AC_MSG_ERROR([Run make config in $LINUX.])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^AUTOCONF_HDIR$])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX_OBJ/include/linux/version.h], [VERSION_HDIR=linux], [LB_CHECK_FILE([$LINUX_OBJ/include/generated/uapi/linux/version.h],
		[VERSION_HDIR=generated/uapi/linux],
		[AC_MSG_ERROR([Run make config in $LINUX.])])])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX_OBJ/include/generated/uapi/linux/version.h], [VERSION_HDIR=generated/uapi/linux], [AC_MSG_ERROR([Run make config in $LINUX.])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^VERSION_HDIR$])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX/include/linux/kconfig.h], [CONFIG_INCLUDE=$LINUX/include/linux/kconfig.h], [CONFIG_INCLUDE=include/$AUTOCONF_HDIR/autoconf.h])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_INCLUDE$])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$KERNEL_SOURCE_HEADER], [
		AS_IF([test $KERNEL_SOURCE_HEADER = '/boot/kernel.h'],
			[AC_MSG_WARN([

Using /boot/kernel.h from RUNNING kernel.

If this is not what you want, use --with-kernel-source-header.
Consult build/README.kernel-source for details.
])
		])], [AC_MSG_ERROR([

$KERNEL_SOURCE_HEADER not found.

Consult build/README.kernel-source for details.
])
		])
m4trace:configure.ac:25: -1- LB_LINUX_CROSS
m4trace:configure.ac:25: -1- m4_pattern_allow([^CROSS_VARS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CROSS_PATH$])
m4trace:configure.ac:25: -1- LB_LINUX_VERSION
m4trace:configure.ac:25: -1- m4_pattern_allow([^KMODEXT$])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_MAKE([], [], [$makerule LUSTRE_KERNEL_TEST=conftest.i], [test -s build/conftest.i], [lb_cv_module_target="SUBDIRS"], [
		MODULE_TARGET="M"
		makerule="_module_$PWD/build"
		LB_LINUX_TRY_MAKE([], [],
			[$makerule LUSTRE_KERNEL_TEST=conftest.i],
			[test -s build/conftest.i],
			[lb_cv_module_target="M"], [
				AC_MSG_ERROR([unknown; check config.log for details])
			])
	])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[]], [[]])])], [$makerule LUSTRE_KERNEL_TEST=conftest.i], [test -s build/conftest.i], [lb_cv_module_target="SUBDIRS"], [
		MODULE_TARGET="M"
		makerule="_module_$PWD/build"
		LB_LINUX_TRY_MAKE([], [],
			[$makerule LUSTRE_KERNEL_TEST=conftest.i],
			[test -s build/conftest.i],
			[lb_cv_module_target="M"], [
				AC_MSG_ERROR([unknown; check config.log for details])
			])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_MAKE([], [], [$makerule LUSTRE_KERNEL_TEST=conftest.i], [test -s build/conftest.i], [lb_cv_module_target="M"], [
				AC_MSG_ERROR([unknown; check config.log for details])
			])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[]], [[]])])], [$makerule LUSTRE_KERNEL_TEST=conftest.i], [test -s build/conftest.i], [lb_cv_module_target="M"], [
				AC_MSG_ERROR([unknown; check config.log for details])
			])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MODULE_TARGET$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([that modules can be built at all], [build_modules], [], [], [], [
	AC_MSG_ERROR([

Kernel modules cannot be built. Consult config.log for details.

If you are trying to build with a kernel-source rpm,
consult build/README.kernel-source
])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([], [], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[]], [[]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_RELEASE
m4trace:configure.ac:25: -1- LB_LINUX_UTSRELEASE
m4trace:configure.ac:25: -1- m4_pattern_allow([^LINUXRELEASE$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:75: LB_LINUX_RELEASE is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:230: LB_LINUX_PATH is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:407: LB_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^RELEASE$])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG([SUSE_KERNEL], [SUSE_KERNEL="yes"], [SUSE_KERNEL="no"])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_SUSE_KERNEL], [config_SUSE_KERNEL], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_SUSE_KERNEL
	#error CONFIG_SUSE_KERNEL not #defined
	#endif
], [SUSE_KERNEL="yes"], [SUSE_KERNEL="no"])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_SUSE_KERNEL
	#error CONFIG_SUSE_KERNEL not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#ifndef CONFIG_SUSE_KERNEL
	#error CONFIG_SUSE_KERNEL not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:75: LB_LINUX_RELEASE is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:230: LB_LINUX_PATH is expanded from...
/home/build/lustre-release/config/lustre-build-linux.m4:407: LB_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^KMP_MODDIR$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^moduledir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^modulefsdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^modulenetdir$])
m4trace:configure.ac:25: -1- LB_LINUX_SYMVERFILE
m4trace:configure.ac:25: -1- m4_pattern_allow([^SYMVERFILE$])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG([MODULES], [], [
	AC_MSG_ERROR([

module support is required to build Lustre kernel modules.
])
	])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_MODULES], [config_MODULES], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_MODULES
	#error CONFIG_MODULES not #defined
	#endif
], [], [
	AC_MSG_ERROR([

module support is required to build Lustre kernel modules.
])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_MODULES
	#error CONFIG_MODULES not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#ifndef CONFIG_MODULES
	#error CONFIG_MODULES not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG([MODVERSIONS])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_MODVERSIONS], [config_MODVERSIONS], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_MODVERSIONS
	#error CONFIG_MODVERSIONS not #defined
	#endif
], [], [])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_MODVERSIONS
	#error CONFIG_MODVERSIONS not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#ifndef CONFIG_MODVERSIONS
	#error CONFIG_MODVERSIONS not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG([KALLSYMS], [], [
	AC_MSG_ERROR([

Lustre requires that CONFIG_KALLSYMS is enabled in your kernel.
])
	])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_KALLSYMS], [config_KALLSYMS], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_KALLSYMS
	#error CONFIG_KALLSYMS not #defined
	#endif
], [], [
	AC_MSG_ERROR([

Lustre requires that CONFIG_KALLSYMS is enabled in your kernel.
])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#ifndef CONFIG_KALLSYMS
	#error CONFIG_KALLSYMS not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#ifndef CONFIG_KALLSYMS
	#error CONFIG_KALLSYMS not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LC_MODULE_LOADING
m4trace:configure.ac:25: -1- LB_LINUX_TRY_MAKE([
	#include <linux/kmod.h>
], [
	int myretval=ENOSYS ;
	return myretval;
], [
	$makerule LUSTRE_KERNEL_TEST=conftest.i
], [dnl
	grep request_module build/conftest.i |dnl
		grep -v `grep "int myretval=" build/conftest.i |dnl
			cut -d= -f2 | cut -d" "  -f1`dnl
		>/dev/null dnl
], [lb_cv_module_loading="yes"], [lb_cv_module_loading="no"])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/kmod.h>
]], [[
	int myretval=ENOSYS ;
	return myretval;
]])])], [
	$makerule LUSTRE_KERNEL_TEST=conftest.i
], [dnl
	grep request_module build/conftest.i |dnl
		grep -v `grep "int myretval=" build/conftest.i |dnl
			cut -d= -f2 | cut -d" "  -f1`dnl
		>/dev/null dnl
], [lb_cv_module_loading="yes"], [lb_cv_module_loading="no"])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_MODULE_LOADING_SUPPORT$])
m4trace:configure.ac:25: -1- LIBCFS_PROG_LINUX
m4trace:configure.ac:25: -1- LIBCFS_CONFIG_PANIC_DUMPLOG
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:40: LIBCFS_CONFIG_PANIC_DUMPLOG is expanded from...
/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:325: LIBCFS_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LNET_DUMP_ON_PANIC$])
m4trace:configure.ac:25: -1- LIBCFS_STACKTRACE_OPS_HAVE_WALK_STACK
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'struct stacktrace_ops' has 'walk_stack' field], [stacktrace_ops_walk_stack], [
	#include <asm/stacktrace.h>
], [
	((struct stacktrace_ops *)0)->walk_stack(NULL, NULL, 0, NULL, NULL, NULL, NULL);
], [
	AC_DEFINE(STACKTRACE_OPS_HAVE_WALK_STACK, 1,
		['struct stacktrace_ops' has 'walk_stack' field])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <asm/stacktrace.h>
], [
	((struct stacktrace_ops *)0)->walk_stack(NULL, NULL, 0, NULL, NULL, NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <asm/stacktrace.h>
]], [[
	((struct stacktrace_ops *)0)->walk_stack(NULL, NULL, 0, NULL, NULL, NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^STACKTRACE_OPS_HAVE_WALK_STACK$])
m4trace:configure.ac:25: -1- LC_SHRINKER_WANT_SHRINK_PTR
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'shrinker' want self pointer in handler], [shrink_self_pointer], [
	#include <linux/mm.h>
], [
	struct shrinker *tmp = NULL;
	tmp->shrink(tmp, 0, 0);
], [
	AC_DEFINE(HAVE_SHRINKER_WANT_SHRINK_PTR, 1,
		[shrinker want self pointer in handler])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/mm.h>
], [
	struct shrinker *tmp = NULL;
	tmp->shrink(tmp, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/mm.h>
]], [[
	struct shrinker *tmp = NULL;
	tmp->shrink(tmp, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SHRINKER_WANT_SHRINK_PTR$])
m4trace:configure.ac:25: -1- LIBCFS_SYSCTL_CTLNAME
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'ctl_table' has a 'ctl_name' field], [ctl_table_ctl_name], [
	#include <linux/sysctl.h>
], [
	struct ctl_table ct;
	ct.ctl_name = sizeof(ct);
], [
	AC_DEFINE(HAVE_SYSCTL_CTLNAME, 1,
		[ctl_table has ctl_name field])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/sysctl.h>
], [
	struct ctl_table ct;
	ct.ctl_name = sizeof(ct);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/sysctl.h>
]], [[
	struct ctl_table ct;
	ct.ctl_name = sizeof(ct);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SYSCTL_CTLNAME$])
m4trace:configure.ac:25: -1- LIBCFS_KSTRTOUL
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has 'kstrtoul'], [kstrtoul], [
	#include <linux/kernel.h>
], [
	unsigned long result;
	return kstrtoul("12345", 0, &result);
], [
	AC_DEFINE(HAVE_KSTRTOUL, 1,
		[kernel has kstrtoul])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/kernel.h>
], [
	unsigned long result;
	return kstrtoul("12345", 0, &result);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/kernel.h>
]], [[
	unsigned long result;
	return kstrtoul("12345", 0, &result);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KSTRTOUL$])
m4trace:configure.ac:25: -1- LIBCFS_DUMP_TRACE_ADDRESS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dump_trace' want address], [dump_trace_address], [
	struct task_struct;
	struct pt_regs;
	#include <asm/stacktrace.h>
], [
	dump_trace(NULL, NULL, NULL, 0, NULL, NULL);
], [
	AC_DEFINE(HAVE_DUMP_TRACE_ADDRESS, 1,
		[dump_trace want address argument])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	struct task_struct;
	struct pt_regs;
	#include <asm/stacktrace.h>
], [
	dump_trace(NULL, NULL, NULL, 0, NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	struct task_struct;
	struct pt_regs;
	#include <asm/stacktrace.h>
]], [[
	dump_trace(NULL, NULL, NULL, 0, NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DUMP_TRACE_ADDRESS$])
m4trace:configure.ac:25: -1- LC_SHRINK_CONTROL
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'shrink_control' is present], [shrink_control], [
	#include <linux/atomic.h>
	#include <linux/mm.h>
], [
	struct shrink_control tmp = {0};
	tmp.nr_to_scan = sizeof(tmp);
], [
	AC_DEFINE(HAVE_SHRINK_CONTROL, 1,
		[shrink_control is present])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/atomic.h>
	#include <linux/mm.h>
], [
	struct shrink_control tmp = {0};
	tmp.nr_to_scan = sizeof(tmp);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/atomic.h>
	#include <linux/mm.h>
]], [[
	struct shrink_control tmp = {0};
	tmp.nr_to_scan = sizeof(tmp);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SHRINK_CONTROL$])
m4trace:configure.ac:25: -1- LIBCFS_STACKTRACE_WARNING
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'stacktrace_ops.warning' is exist], [stacktrace_ops_warning], [
	struct task_struct;
	struct pt_regs;
	#include <asm/stacktrace.h>
], [
	((struct stacktrace_ops *)0)->warning(NULL, NULL);
], [
	AC_DEFINE(HAVE_STACKTRACE_WARNING, 1,
		[stacktrace_ops.warning is exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	struct task_struct;
	struct pt_regs;
	#include <asm/stacktrace.h>
], [
	((struct stacktrace_ops *)0)->warning(NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	struct task_struct;
	struct pt_regs;
	#include <asm/stacktrace.h>
]], [[
	((struct stacktrace_ops *)0)->warning(NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_STACKTRACE_WARNING$])
m4trace:configure.ac:25: -1- LIBCFS_PROCESS_NAMESPACE
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([LB_LANG_PROGRAM([@%:@include <linux/uidgid.h>])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_header], [yes])], [AS_VAR_SET([lb_header], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_UIDGID_HEADER$])
m4trace:configure.ac:25: -1- LIBCFS_I_UID_READ
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'i_uid_read' is present], [i_uid_read], [
	#include <linux/fs.h>
], [
	i_uid_read(NULL);
], [
	AC_DEFINE(HAVE_I_UID_READ, 1, [i_uid_read is present])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	i_uid_read(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	i_uid_read(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_I_UID_READ$])
m4trace:configure.ac:25: -1- LIBCFS_SOCK_ALLOC_FILE
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([sock_alloc_file], [net/socket.c], [
	LB_CHECK_COMPILE([if 'sock_alloc_file' takes 3 arguments],
	sock_alloc_file_3args, [
		#include <linux/net.h>
	],[
		sock_alloc_file(NULL, 0, NULL);
	],[
		AC_DEFINE(HAVE_SOCK_ALLOC_FILE_3ARGS, 1,
			[sock_alloc_file takes 3 arguments])
	],[
		AC_DEFINE(HAVE_SOCK_ALLOC_FILE, 1,
			[sock_alloc_file is exported])
	])
])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'sock_alloc_file' takes 3 arguments], [sock_alloc_file_3args], [
		#include <linux/net.h>
	], [
		sock_alloc_file(NULL, 0, NULL);
	], [
		AC_DEFINE(HAVE_SOCK_ALLOC_FILE_3ARGS, 1,
			[sock_alloc_file takes 3 arguments])
	], [
		AC_DEFINE(HAVE_SOCK_ALLOC_FILE, 1,
			[sock_alloc_file is exported])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/net.h>
	], [
		sock_alloc_file(NULL, 0, NULL);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/net.h>
	]], [[
		sock_alloc_file(NULL, 0, NULL);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SOCK_ALLOC_FILE_3ARGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SOCK_ALLOC_FILE$])
m4trace:configure.ac:25: -1- LIBCFS_HAVE_CRC32
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([CRC32], [have_crc32="yes"], [have_crc32="no"])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_CRC32 in or as module], [config_im_CRC32], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRC32) || defined(CONFIG_CRC32_MODULE))
	#error CONFIG_CRC32 and CONFIG_CRC32_MODULE not #defined
	#endif
], [have_crc32="yes"], [have_crc32="no"])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRC32) || defined(CONFIG_CRC32_MODULE))
	#error CONFIG_CRC32 and CONFIG_CRC32_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_CRC32) || defined(CONFIG_CRC32_MODULE))
	#error CONFIG_CRC32 and CONFIG_CRC32_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_CRC32$])
m4trace:configure.ac:25: -1- LIBCFS_ENABLE_CRC32_ACCEL
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([CRYPTO_CRC32_PCLMUL], [enable_crc32_crypto="no"], [enable_crc32_crypto="yes"])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_CRYPTO_CRC32_PCLMUL in or as module], [config_im_CRYPTO_CRC32_PCLMUL], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_CRC32_PCLMUL) || defined(CONFIG_CRYPTO_CRC32_PCLMUL_MODULE))
	#error CONFIG_CRYPTO_CRC32_PCLMUL and CONFIG_CRYPTO_CRC32_PCLMUL_MODULE not #defined
	#endif
], [enable_crc32_crypto="no"], [enable_crc32_crypto="yes"])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_CRC32_PCLMUL) || defined(CONFIG_CRYPTO_CRC32_PCLMUL_MODULE))
	#error CONFIG_CRYPTO_CRC32_PCLMUL and CONFIG_CRYPTO_CRC32_PCLMUL_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_CRYPTO_CRC32_PCLMUL) || defined(CONFIG_CRYPTO_CRC32_PCLMUL_MODULE))
	#error CONFIG_CRYPTO_CRC32_PCLMUL and CONFIG_CRYPTO_CRC32_PCLMUL_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NEED_CRC32_ACCEL$])
m4trace:configure.ac:25: -1- LIBCFS_ENABLE_CRC32C_ACCEL
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([CRYPTO_CRC32C_INTEL], [enable_crc32c_crypto="no"], [enable_crc32c_crypto="yes"])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_CRYPTO_CRC32C_INTEL in or as module], [config_im_CRYPTO_CRC32C_INTEL], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_CRC32C_INTEL) || defined(CONFIG_CRYPTO_CRC32C_INTEL_MODULE))
	#error CONFIG_CRYPTO_CRC32C_INTEL and CONFIG_CRYPTO_CRC32C_INTEL_MODULE not #defined
	#endif
], [enable_crc32c_crypto="no"], [enable_crc32c_crypto="yes"])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_CRC32C_INTEL) || defined(CONFIG_CRYPTO_CRC32C_INTEL_MODULE))
	#error CONFIG_CRYPTO_CRC32C_INTEL and CONFIG_CRYPTO_CRC32C_INTEL_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_CRYPTO_CRC32C_INTEL) || defined(CONFIG_CRYPTO_CRC32C_INTEL_MODULE))
	#error CONFIG_CRYPTO_CRC32C_INTEL and CONFIG_CRYPTO_CRC32C_INTEL_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NEED_CRC32C_ACCEL$])
m4trace:configure.ac:25: -1- LIBCFS_SHRINKER_COUNT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([shrinker has 'count_objects'], [shrinker_count_objects], [
	#include <linux/mmzone.h>
	#include <linux/shrinker.h>
], [
	((struct shrinker*)0)->count_objects(NULL, NULL);
], [
	AC_DEFINE(HAVE_SHRINKER_COUNT, 1,
		[shrinker has count_objects member])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/mmzone.h>
	#include <linux/shrinker.h>
], [
	((struct shrinker*)0)->count_objects(NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/mmzone.h>
	#include <linux/shrinker.h>
]], [[
	((struct shrinker*)0)->count_objects(NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SHRINKER_COUNT$])
m4trace:configure.ac:25: -1- LIBCFS_HLIST_ADD_AFTER
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([does function 'hlist_add_after' exist], [hlist_add_after], [
	#include <linux/list.h>
], [
	hlist_add_after(NULL, NULL);
], [
	AC_DEFINE(HAVE_HLIST_ADD_AFTER, 1,
		[hlist_add_after is available])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/list.h>
], [
	hlist_add_after(NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/list.h>
]], [[
	hlist_add_after(NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_HLIST_ADD_AFTER$])
m4trace:configure.ac:25: -1- LIBCFS_HAVE_TOPOLOGY_SIBLING_CPUMASK
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([does function 'topology_sibling_cpumask' exist], [topology_sibling_cpumask], [
	#include <linux/topology.h>
], [
	const struct cpumask *mask;

	mask = topology_sibling_cpumask(0);
], [
	AC_DEFINE(HAVE_TOPOLOGY_SIBLING_CPUMASK, 1,
		[topology_sibling_cpumask is available])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/topology.h>
], [
	const struct cpumask *mask;

	mask = topology_sibling_cpumask(0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/topology.h>
]], [[
	const struct cpumask *mask;

	mask = topology_sibling_cpumask(0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_TOPOLOGY_SIBLING_CPUMASK$])
m4trace:configure.ac:25: -1- LN_PROG_LINUX
m4trace:configure.ac:25: -1- LN_CONFIG_AFFINITY
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:49: LN_CONFIG_AFFINITY is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:535: LN_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has cpu affinity support], [set_cpus_allowed_ptr], [
		#include <linux/sched.h>
	], [
		struct task_struct *t;
		#if HAVE_CPUMASK_T
		cpumask_t     m;
		#else
		unsigned long m;
		#endif
		set_cpus_allowed_ptr(t, &m);
	], [
		AC_DEFINE(CPU_AFFINITY, 1,
			[kernel has cpu affinity support])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/sched.h>
	], [
		struct task_struct *t;
		#if HAVE_CPUMASK_T
		cpumask_t     m;
		#else
		unsigned long m;
		#endif
		set_cpus_allowed_ptr(t, &m);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/sched.h>
	]], [[
		struct task_struct *t;
		#if HAVE_CPUMASK_T
		cpumask_t     m;
		#else
		unsigned long m;
		#endif
		set_cpus_allowed_ptr(t, &m);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CPU_AFFINITY$])
m4trace:configure.ac:25: -1- LN_CONFIG_BACKOFF
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:80: LN_CONFIG_BACKOFF is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:535: LN_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SOCKNAL_BACKOFF$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SOCKNAL_BACKOFF_MS$])
m4trace:configure.ac:25: -1- LN_CONFIG_O2IB
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:144: LN_CONFIG_O2IB is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:535: LN_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_COMPAT_RDMA$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([whether to enable OpenIB gen2 support], [openib_gen2_support], [
			#ifdef HAVE_COMPAT_RDMA
			#undef PACKAGE_NAME
			#undef PACKAGE_TARNAME
			#undef PACKAGE_VERSION
			#undef PACKAGE_STRING
			#undef PACKAGE_BUGREPORT
			#undef PACKAGE_URL
			#include <linux/compat-2.6.h>
			#endif
			#include <linux/version.h>
			#include <linux/pci.h>
			#include <linux/gfp.h>
			#include <rdma/rdma_cm.h>
			#include <rdma/ib_cm.h>
			#include <rdma/ib_verbs.h>
			#include <rdma/ib_fmr_pool.h>
		], [
			struct rdma_cm_id      *cm_idi __attribute__ ((unused));
			struct rdma_conn_param  conn_param __attribute__ ((unused));
			struct ib_device_attr   device_attr __attribute__ ((unused));
			struct ib_qp_attr       qp_attr __attribute__ ((unused));
			struct ib_pool_fmr      pool_fmr __attribute__ ((unused));
			enum   ib_cm_rej_reason rej_reason __attribute__ ((unused));
			rdma_destroy_id(NULL);
		], [
			O2IBLND="o2iblnd"
		], [
			case $ENABLEO2IB in
			"yes") AC_MSG_ERROR([can't compile with OpenIB gen2 headers]) ;;
			"withpath") AC_MSG_ERROR([can't compile with OpenIB gen2 headers under $O2IBPATH]) ;;
			*) AC_MSG_ERROR([internal error]) ;;
			esac
		])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
			#ifdef HAVE_COMPAT_RDMA
			#undef PACKAGE_NAME
			#undef PACKAGE_TARNAME
			#undef PACKAGE_VERSION
			#undef PACKAGE_STRING
			#undef PACKAGE_BUGREPORT
			#undef PACKAGE_URL
			#include <linux/compat-2.6.h>
			#endif
			#include <linux/version.h>
			#include <linux/pci.h>
			#include <linux/gfp.h>
			#include <rdma/rdma_cm.h>
			#include <rdma/ib_cm.h>
			#include <rdma/ib_verbs.h>
			#include <rdma/ib_fmr_pool.h>
		], [
			struct rdma_cm_id      *cm_idi __attribute__ ((unused));
			struct rdma_conn_param  conn_param __attribute__ ((unused));
			struct ib_device_attr   device_attr __attribute__ ((unused));
			struct ib_qp_attr       qp_attr __attribute__ ((unused));
			struct ib_pool_fmr      pool_fmr __attribute__ ((unused));
			enum   ib_cm_rej_reason rej_reason __attribute__ ((unused));
			rdma_destroy_id(NULL);
		], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
			#ifdef HAVE_COMPAT_RDMA
			#undef PACKAGE_NAME
			#undef PACKAGE_TARNAME
			#undef PACKAGE_VERSION
			#undef PACKAGE_STRING
			#undef PACKAGE_BUGREPORT
			#undef PACKAGE_URL
			#include <linux/compat-2.6.h>
			#endif
			#include <linux/version.h>
			#include <linux/pci.h>
			#include <linux/gfp.h>
			#include <rdma/rdma_cm.h>
			#include <rdma/ib_cm.h>
			#include <rdma/ib_verbs.h>
			#include <rdma/ib_fmr_pool.h>
		]], [[
			struct rdma_cm_id      *cm_idi __attribute__ ((unused));
			struct rdma_conn_param  conn_param __attribute__ ((unused));
			struct ib_device_attr   device_attr __attribute__ ((unused));
			struct ib_qp_attr       qp_attr __attribute__ ((unused));
			struct ib_pool_fmr      pool_fmr __attribute__ ((unused));
			enum   ib_cm_rej_reason rej_reason __attribute__ ((unused));
			rdma_destroy_id(NULL);
		]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXTRA_SYMBOLS$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has kthread_worker], [linux_kthread_worker], [
			#ifdef HAVE_COMPAT_RDMA
			#undef PACKAGE_NAME
			#undef PACKAGE_TARNAME
			#undef PACKAGE_VERSION
			#undef PACKAGE_STRING
			#undef PACKAGE_BUGREPORT
			#undef PACKAGE_URL
			#include <linux/compat-2.6.h>
			#endif
			#include <linux/kthread.h>
		], [
			struct kthread_work	*kth_wrk __attribute__ ((unused));
			flush_kthread_work(kth_wrk);
		], [
			AC_DEFINE(HAVE_KTHREAD_WORK, 1, [kthread_worker found])
			if test -z "$COMPAT_AUTOCONF"; then
				EXTRA_OFED_INCLUDE="$EXTRA_OFED_INCLUDE -DCONFIG_COMPAT_IS_KTHREAD"
			fi
		])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
			#ifdef HAVE_COMPAT_RDMA
			#undef PACKAGE_NAME
			#undef PACKAGE_TARNAME
			#undef PACKAGE_VERSION
			#undef PACKAGE_STRING
			#undef PACKAGE_BUGREPORT
			#undef PACKAGE_URL
			#include <linux/compat-2.6.h>
			#endif
			#include <linux/kthread.h>
		], [
			struct kthread_work	*kth_wrk __attribute__ ((unused));
			flush_kthread_work(kth_wrk);
		], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
			#ifdef HAVE_COMPAT_RDMA
			#undef PACKAGE_NAME
			#undef PACKAGE_TARNAME
			#undef PACKAGE_VERSION
			#undef PACKAGE_STRING
			#undef PACKAGE_BUGREPORT
			#undef PACKAGE_URL
			#include <linux/compat-2.6.h>
			#endif
			#include <linux/kthread.h>
		]], [[
			struct kthread_work	*kth_wrk __attribute__ ((unused));
			flush_kthread_work(kth_wrk);
		]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KTHREAD_WORK$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXTRA_OFED_CONFIG$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXTRA_OFED_INCLUDE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^O2IBLND$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^O2IBPATH$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ENABLEO2IB$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'rdma_create_id' wants four args], [rdma_create_id_4args], [
		#ifdef HAVE_COMPAT_RDMA
		#undef PACKAGE_NAME
		#undef PACKAGE_TARNAME
		#undef PACKAGE_VERSION
		#undef PACKAGE_STRING
		#undef PACKAGE_BUGREPORT
		#undef PACKAGE_URL
		#include <linux/compat-2.6.h>
		#endif
		#include <rdma/rdma_cm.h>
	], [
		rdma_create_id(NULL, NULL, 0, 0);
	], [
		AC_DEFINE(HAVE_RDMA_CREATE_ID_4ARG, 1,
			[rdma_create_id wants 4 args])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#ifdef HAVE_COMPAT_RDMA
		#undef PACKAGE_NAME
		#undef PACKAGE_TARNAME
		#undef PACKAGE_VERSION
		#undef PACKAGE_STRING
		#undef PACKAGE_BUGREPORT
		#undef PACKAGE_URL
		#include <linux/compat-2.6.h>
		#endif
		#include <rdma/rdma_cm.h>
	], [
		rdma_create_id(NULL, NULL, 0, 0);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#ifdef HAVE_COMPAT_RDMA
		#undef PACKAGE_NAME
		#undef PACKAGE_TARNAME
		#undef PACKAGE_VERSION
		#undef PACKAGE_STRING
		#undef PACKAGE_BUGREPORT
		#undef PACKAGE_URL
		#include <linux/compat-2.6.h>
		#endif
		#include <rdma/rdma_cm.h>
	]], [[
		rdma_create_id(NULL, NULL, 0, 0);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_RDMA_CREATE_ID_4ARG$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'struct ib_cq_init_attr' is used], [ib_cq_init_attr], [
		#ifdef HAVE_COMPAT_RDMA
		#undef PACKAGE_NAME
		#undef PACKAGE_TARNAME
		#undef PACKAGE_VERSION
		#undef PACKAGE_STRING
		#undef PACKAGE_BUGREPORT
		#undef PACKAGE_URL
		#include <linux/compat-2.6.h>
		#endif
		#include <rdma/ib_verbs.h>
	], [
		struct ib_cq_init_attr cq_attr;

		ib_create_cq(NULL, NULL, NULL, NULL, &cq_attr);
	], [
		AC_DEFINE(HAVE_IB_CQ_INIT_ATTR, 1,
			[struct ib_cq_init_attr is used by ib_create_cq])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#ifdef HAVE_COMPAT_RDMA
		#undef PACKAGE_NAME
		#undef PACKAGE_TARNAME
		#undef PACKAGE_VERSION
		#undef PACKAGE_STRING
		#undef PACKAGE_BUGREPORT
		#undef PACKAGE_URL
		#include <linux/compat-2.6.h>
		#endif
		#include <rdma/ib_verbs.h>
	], [
		struct ib_cq_init_attr cq_attr;

		ib_create_cq(NULL, NULL, NULL, NULL, &cq_attr);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#ifdef HAVE_COMPAT_RDMA
		#undef PACKAGE_NAME
		#undef PACKAGE_TARNAME
		#undef PACKAGE_VERSION
		#undef PACKAGE_STRING
		#undef PACKAGE_BUGREPORT
		#undef PACKAGE_URL
		#include <linux/compat-2.6.h>
		#endif
		#include <rdma/ib_verbs.h>
	]], [[
		struct ib_cq_init_attr cq_attr;

		ib_create_cq(NULL, NULL, NULL, NULL, &cq_attr);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_IB_CQ_INIT_ATTR$])
m4trace:configure.ac:25: -1- LN_CONFIG_GNILND
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:389: LN_CONFIG_GNILND is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:535: LN_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if GNI kernel headers are present], [GNI_header], [
		#include <linux/types.h>
		#include <gni_pub.h>
	], [
		gni_cdm_handle_t kgni_domain;
		gni_return_t	 rc;
		int		 rrc;
		rc = gni_cdm_create(0, 1, 1, 0, &kgni_domain);
		rrc = (rc == GNI_RC_SUCCESS) ? 0 : 1;
		return rrc;
	], [
		GNILND="gnilnd"
	], [
		AC_MSG_ERROR([can't compile gnilnd with given GNICPPFLAGS: $GNICPPFLAGS])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/types.h>
		#include <gni_pub.h>
	], [
		gni_cdm_handle_t kgni_domain;
		gni_return_t	 rc;
		int		 rrc;
		rc = gni_cdm_create(0, 1, 1, 0, &kgni_domain);
		rrc = (rc == GNI_RC_SUCCESS) ? 0 : 1;
		return rrc;
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/types.h>
		#include <gni_pub.h>
	]], [[
		gni_cdm_handle_t kgni_domain;
		gni_return_t	 rc;
		int		 rrc;
		rc = gni_cdm_create(0, 1, 1, 0, &kgni_domain);
		rrc = (rc == GNI_RC_SUCCESS) ? 0 : 1;
		return rrc;
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([to use RCA in gnilnd], [RCA_gnilnd], [
		#include <linux/types.h>
		#include <gni_pub.h>
		#include <krca_lib.h>
	], [
		gni_cdm_handle_t kgni_domain;
		gni_return_t	 rc;
		krca_ticket_t	 ticket = KRCA_NULL_TICKET;
		int		 rrc;
		__u32		 nid = 0, nic_addr;
		rc = gni_cdm_create(0, 1, 1, 0, &kgni_domain);
		rrc = (rc == GNI_RC_SUCCESS) ? 0 : 1;
		rrc += krca_nid_to_nicaddrs(nid, 1, &nic_addr);
		rrc += krca_register(&ticket, RCA_MAKE_SERVICE_INDEX(RCA_IO_CLASS, 9), 99, 0);
		return rrc;
	], [
		GNICPPFLAGS="$GNICPPFLAGS -DGNILND_USE_RCA=1"
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/types.h>
		#include <gni_pub.h>
		#include <krca_lib.h>
	], [
		gni_cdm_handle_t kgni_domain;
		gni_return_t	 rc;
		krca_ticket_t	 ticket = KRCA_NULL_TICKET;
		int		 rrc;
		__u32		 nid = 0, nic_addr;
		rc = gni_cdm_create(0, 1, 1, 0, &kgni_domain);
		rrc = (rc == GNI_RC_SUCCESS) ? 0 : 1;
		rrc += krca_nid_to_nicaddrs(nid, 1, &nic_addr);
		rrc += krca_register(&ticket, RCA_MAKE_SERVICE_INDEX(RCA_IO_CLASS, 9), 99, 0);
		return rrc;
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/types.h>
		#include <gni_pub.h>
		#include <krca_lib.h>
	]], [[
		gni_cdm_handle_t kgni_domain;
		gni_return_t	 rc;
		krca_ticket_t	 ticket = KRCA_NULL_TICKET;
		int		 rrc;
		__u32		 nid = 0, nic_addr;
		rc = gni_cdm_create(0, 1, 1, 0, &kgni_domain);
		rrc = (rc == GNI_RC_SUCCESS) ? 0 : 1;
		rrc += krca_nid_to_nicaddrs(nid, 1, &nic_addr);
		rrc += krca_register(&ticket, RCA_MAKE_SERVICE_INDEX(RCA_IO_CLASS, 9), 99, 0);
		return rrc;
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^GNICPPFLAGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^GNILND$])
m4trace:configure.ac:25: -1- LN_CONFIG_SK_SLEEP
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has 'sk_sleep'], [sk_sleep], [
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <net/sock.h>
], [
	sk_sleep(NULL);
], [
	AC_DEFINE(HAVE_SK_SLEEP, 1,
		  [kernel has sk_sleep])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <net/sock.h>
], [
	sk_sleep(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <net/sock.h>
]], [[
	sk_sleep(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SK_SLEEP$])
m4trace:configure.ac:25: -1- LN_CONFIG_TCP_SENDPAGE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'tcp_sendpage' first parameter is socket], [tcp_sendpage_socket], [
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <linux/net.h>
	#include <net/tcp.h>
], [
	tcp_sendpage((struct socket*)0, NULL, 0, 0, 0);
], [
	AC_DEFINE(HAVE_TCP_SENDPAGE_USE_SOCKET, 1,
		[tcp_sendpage use socket as first parameter])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <linux/net.h>
	#include <net/tcp.h>
], [
	tcp_sendpage((struct socket*)0, NULL, 0, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <linux/net.h>
	#include <net/tcp.h>
]], [[
	tcp_sendpage((struct socket*)0, NULL, 0, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_TCP_SENDPAGE_USE_SOCKET$])
m4trace:configure.ac:25: -1- LN_CONFIG_SK_DATA_READY
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'sk_data_ready' takes only one argument], [sk_data_ready], [
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <linux/net.h>
	#include <net/sock.h>
], [
	((struct sock *)0)->sk_data_ready(NULL);
], [
	AC_DEFINE(HAVE_SK_DATA_READY_ONE_ARG, 1,
		[sk_data_ready uses only one argument])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <linux/net.h>
	#include <net/sock.h>
], [
	((struct sock *)0)->sk_data_ready(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#ifdef HAVE_COMPAT_RDMA
	#undef PACKAGE_NAME
	#undef PACKAGE_TARNAME
	#undef PACKAGE_VERSION
	#undef PACKAGE_STRING
	#undef PACKAGE_BUGREPORT
	#undef PACKAGE_URL
	#include <linux/compat-2.6.h>
	#endif
	#include <linux/net.h>
	#include <net/sock.h>
]], [[
	((struct sock *)0)->sk_data_ready(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SK_DATA_READY_ONE_ARG$])
m4trace:configure.ac:25: -1- LB_EXT4_SRC_DIR
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXT4_SRC_DIR$])
m4trace:configure.ac:25: -1- LB_VALIDATE_EXT4_SRC_DIR
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$EXT4_SRC_DIR/dir.c], [], [
		enable_ldiskfs_build="no"
		AC_MSG_WARN([ext4 must exist for ldiskfs build])
	])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$EXT4_SRC_DIR/file.c], [], [
		enable_ldiskfs_build="no"
		AC_MSG_WARN([ext4 must exist for ldiskfs build])
	])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$EXT4_SRC_DIR/inode.c], [], [
		enable_ldiskfs_build="no"
		AC_MSG_WARN([ext4 must exist for ldiskfs build])
	])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$EXT4_SRC_DIR/super.c], [], [
		enable_ldiskfs_build="no"
		AC_MSG_WARN([ext4 must exist for ldiskfs build])
	])
m4trace:configure.ac:25: -1- LC_PROG_LINUX
m4trace:configure.ac:25: -1- LC_CONFIG_PINGER
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:128: LC_CONFIG_PINGER is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1981: LC_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ENABLE_PINGER$])
m4trace:configure.ac:25: -1- LC_CONFIG_CHECKSUM
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:144: LC_CONFIG_CHECKSUM is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1981: LC_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ENABLE_CHECKSUM$])
m4trace:configure.ac:25: -1- LC_CONFIG_HEALTH_CHECK_WRITE
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:160: LC_CONFIG_HEALTH_CHECK_WRITE is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1981: LC_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^USE_HEALTH_CHECK_WRITE$])
m4trace:configure.ac:25: -1- LC_CONFIG_LRU_RESIZE
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:174: LC_CONFIG_LRU_RESIZE is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1981: LC_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LRU_RESIZE_SUPPORT$])
m4trace:configure.ac:25: -1- LC_LLITE_LLOOP_MODULE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([whether to enable 'llite_lloop' module], [enable_llite_lloop_module], [
	#include <asm/page.h>
], [
	#if PAGE_SIZE >= 65536
	#error "PAGE_SIZE >= 65536"
	#endif
], [enable_llite_lloop_module="yes"], [enable_llite_lloop_module="no"])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <asm/page.h>
], [
	#if PAGE_SIZE >= 65536
	#error "PAGE_SIZE >= 65536"
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <asm/page.h>
]], [[
	#if PAGE_SIZE >= 65536
	#error "PAGE_SIZE >= 65536"
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LC_GLIBC_SUPPORT_FHANDLES
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FHANDLE_GLIBC_SUPPORT$])
m4trace:configure.ac:25: -1- LC_CONFIG_RMTCLIENT
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([CRYPTO_AES], [], [AC_MSG_WARN([

Lustre remote client require that CONFIG_CRYPTO_AES is enabled in your kernel.
])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_CRYPTO_AES in or as module], [config_im_CRYPTO_AES], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_AES) || defined(CONFIG_CRYPTO_AES_MODULE))
	#error CONFIG_CRYPTO_AES and CONFIG_CRYPTO_AES_MODULE not #defined
	#endif
], [], [AC_MSG_WARN([

Lustre remote client require that CONFIG_CRYPTO_AES is enabled in your kernel.
])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_AES) || defined(CONFIG_CRYPTO_AES_MODULE))
	#error CONFIG_CRYPTO_AES and CONFIG_CRYPTO_AES_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_CRYPTO_AES) || defined(CONFIG_CRYPTO_AES_MODULE))
	#error CONFIG_CRYPTO_AES and CONFIG_CRYPTO_AES_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LC_CONFIG_GSS
m4trace:configure.ac:25: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:332: LC_CONFIG_GSS is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1981: LC_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LC_CONFIG_GSS_KEYRING
m4trace:configure.ac:25: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:237: LC_CONFIG_GSS_KEYRING is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:332: LC_CONFIG_GSS is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1981: LC_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([KEYS], [], [
		gss_keyring_conf_test="fail"
		AC_MSG_WARN([

GSS keyring backend require that CONFIG_KEYS be enabled in your kernel.
])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_KEYS in or as module], [config_im_KEYS], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_KEYS) || defined(CONFIG_KEYS_MODULE))
	#error CONFIG_KEYS and CONFIG_KEYS_MODULE not #defined
	#endif
], [], [
		gss_keyring_conf_test="fail"
		AC_MSG_WARN([

GSS keyring backend require that CONFIG_KEYS be enabled in your kernel.
])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_KEYS) || defined(CONFIG_KEYS_MODULE))
	#error CONFIG_KEYS and CONFIG_KEYS_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_KEYS) || defined(CONFIG_KEYS_MODULE))
	#error CONFIG_KEYS and CONFIG_KEYS_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LIBKEYUTILS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_GSS_KEYRING$])
m4trace:configure.ac:25: -1- LC_HAVE_CRED_TGCRED
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'struct cred' has member 'tgcred'], [cred_tgcred], [
	#include <linux/cred.h>
], [
	((struct cred *)0)->tgcred = NULL;
], [
	AC_DEFINE(HAVE_CRED_TGCRED, 1,
		[struct cred has member tgcred])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/cred.h>
], [
	((struct cred *)0)->tgcred = NULL;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/cred.h>
]], [[
	((struct cred *)0)->tgcred = NULL;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_CRED_TGCRED$])
m4trace:configure.ac:25: -1- LC_KEY_TYPE_INSTANTIATE_2ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'key_type->instantiate' has two args], [key_type_instantiate_2args], [
	#include <linux/key-type.h>
], [
	((struct key_type *)0)->instantiate(0, NULL);
], [
	AC_DEFINE(HAVE_KEY_TYPE_INSTANTIATE_2ARGS, 1,
		[key_type->instantiate has two args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/key-type.h>
], [
	((struct key_type *)0)->instantiate(0, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/key-type.h>
]], [[
	((struct key_type *)0)->instantiate(0, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KEY_TYPE_INSTANTIATE_2ARGS$])
m4trace:configure.ac:25: -1- LC_CONFIG_SUNRPC
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([SUNRPC], [], [
	AS_IF([test "x$sunrpc_required" = xyes], [
		AC_MSG_ERROR([

kernel SUNRPC support is required by using GSS.
])
	])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_SUNRPC in or as module], [config_im_SUNRPC], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_SUNRPC) || defined(CONFIG_SUNRPC_MODULE))
	#error CONFIG_SUNRPC and CONFIG_SUNRPC_MODULE not #defined
	#endif
], [], [
	AS_IF([test "x$sunrpc_required" = xyes], [
		AC_MSG_ERROR([

kernel SUNRPC support is required by using GSS.
])
	])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_SUNRPC) || defined(CONFIG_SUNRPC_MODULE))
	#error CONFIG_SUNRPC and CONFIG_SUNRPC_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_SUNRPC) || defined(CONFIG_SUNRPC_MODULE))
	#error CONFIG_SUNRPC and CONFIG_SUNRPC_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([CRYPTO_MD5], [], [AC_MSG_WARN([kernel MD5 support is recommended by using GSS.])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_CRYPTO_MD5 in or as module], [config_im_CRYPTO_MD5], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_MD5) || defined(CONFIG_CRYPTO_MD5_MODULE))
	#error CONFIG_CRYPTO_MD5 and CONFIG_CRYPTO_MD5_MODULE not #defined
	#endif
], [], [AC_MSG_WARN([kernel MD5 support is recommended by using GSS.])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_MD5) || defined(CONFIG_CRYPTO_MD5_MODULE))
	#error CONFIG_CRYPTO_MD5 and CONFIG_CRYPTO_MD5_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_CRYPTO_MD5) || defined(CONFIG_CRYPTO_MD5_MODULE))
	#error CONFIG_CRYPTO_MD5 and CONFIG_CRYPTO_MD5_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([CRYPTO_SHA1], [], [AC_MSG_WARN([kernel SHA1 support is recommended by using GSS.])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_CRYPTO_SHA1 in or as module], [config_im_CRYPTO_SHA1], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_SHA1) || defined(CONFIG_CRYPTO_SHA1_MODULE))
	#error CONFIG_CRYPTO_SHA1 and CONFIG_CRYPTO_SHA1_MODULE not #defined
	#endif
], [], [AC_MSG_WARN([kernel SHA1 support is recommended by using GSS.])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_SHA1) || defined(CONFIG_CRYPTO_SHA1_MODULE))
	#error CONFIG_CRYPTO_SHA1 and CONFIG_CRYPTO_SHA1_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_CRYPTO_SHA1) || defined(CONFIG_CRYPTO_SHA1_MODULE))
	#error CONFIG_CRYPTO_SHA1 and CONFIG_CRYPTO_SHA1_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([CRYPTO_SHA256], [], [AC_MSG_WARN([kernel SHA256 support is recommended by using GSS.])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_CRYPTO_SHA256 in or as module], [config_im_CRYPTO_SHA256], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_SHA256) || defined(CONFIG_CRYPTO_SHA256_MODULE))
	#error CONFIG_CRYPTO_SHA256 and CONFIG_CRYPTO_SHA256_MODULE not #defined
	#endif
], [], [AC_MSG_WARN([kernel SHA256 support is recommended by using GSS.])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_SHA256) || defined(CONFIG_CRYPTO_SHA256_MODULE))
	#error CONFIG_CRYPTO_SHA256 and CONFIG_CRYPTO_SHA256_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_CRYPTO_SHA256) || defined(CONFIG_CRYPTO_SHA256_MODULE))
	#error CONFIG_CRYPTO_SHA256 and CONFIG_CRYPTO_SHA256_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([CRYPTO_SHA512], [], [AC_MSG_WARN([kernel SHA512 support is recommended by using GSS.])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_CRYPTO_SHA512 in or as module], [config_im_CRYPTO_SHA512], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_SHA512) || defined(CONFIG_CRYPTO_SHA512_MODULE))
	#error CONFIG_CRYPTO_SHA512 and CONFIG_CRYPTO_SHA512_MODULE not #defined
	#endif
], [], [AC_MSG_WARN([kernel SHA512 support is recommended by using GSS.])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_CRYPTO_SHA512) || defined(CONFIG_CRYPTO_SHA512_MODULE))
	#error CONFIG_CRYPTO_SHA512 and CONFIG_CRYPTO_SHA512_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_CRYPTO_SHA512) || defined(CONFIG_CRYPTO_SHA512_MODULE))
	#error CONFIG_CRYPTO_SHA512 and CONFIG_CRYPTO_SHA512_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- AC_KERBEROS_V5
m4trace:configure.ac:25: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1443: AC_ARG_WITH is expanded from...
/home/build/lustre-release/lustre/autoconf/kerberos5.m4:6: AC_KERBEROS_V5 is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:332: LC_CONFIG_GSS is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:1981: LC_PROG_LINUX is expanded from...
../../lib/m4sugar/m4sh.m4:461: AS_CASE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:217: LB_CONFIG_MODULES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^KRB5_VERSION$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^USE_GSS_KRB5_CCACHE_NAME$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_HEIMDAL$])
m4trace:configure.ac:25: -2- m4_pattern_allow([^HAVE_LUCID_CONTEXT_SUPPORT$])
m4trace:configure.ac:25: -2- m4_pattern_allow([^HAVE_SET_ALLOWABLE_ENCTYPES$])
m4trace:configure.ac:25: -2- m4_pattern_allow([^HAVE_GSS_KRB5_CCACHE_NAME$])
m4trace:configure.ac:25: -2- m4_pattern_allow([^HAVE_KRB5_GET_ERROR_MESSAGE$])
m4trace:configure.ac:25: -2- m4_pattern_allow([^HAVE_KRB5_GET_INIT_CREDS_OPT_SET_ADDRESSLESS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KRB5INT_DERIVE_KEY$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KRB5_DERIVE_KEY$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KRB5$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^KRBDIR$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^KRBLIBS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^KRBCFLAGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^KRBLDFLAGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^K5VERS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_GSS$])
m4trace:configure.ac:25: -1- LC_BLK_QUEUE_MAX_SEGMENTS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'blk_queue_max_segments' is defined], [blk_queue_max_segments], [
	#include <linux/blkdev.h>
], [
	blk_queue_max_segments(NULL, 0);
], [
	AC_DEFINE(HAVE_BLK_QUEUE_MAX_SEGMENTS, 1,
		[blk_queue_max_segments is defined])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/blkdev.h>
], [
	blk_queue_max_segments(NULL, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/blkdev.h>
]], [[
	blk_queue_max_segments(NULL, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_BLK_QUEUE_MAX_SEGMENTS$])
m4trace:configure.ac:25: -1- LC_HAVE_DQUOT_FS_DISK_QUOTA
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'quotactl_ops.set_dqblk' takes struct fs_disk_quota], [fs_disk_quota], [
	#include <linux/fs.h>
	#include <linux/quota.h>
], [
	((struct quotactl_ops *)0)->set_dqblk(NULL, 0, 0, (struct fs_disk_quota*)0);
], [
	AC_DEFINE(HAVE_DQUOT_FS_DISK_QUOTA, 1,
		[quotactl_ops.set_dqblk takes struct fs_disk_quota])
], [
	LB_CHECK_COMPILE([if 'quotactl_ops.set_dqblk' takes struct kqid & fs_disk_quota],
	kqid_fs_disk_quota, [
		#include <linux/fs.h>
		#include <linux/quota.h>
	],[
		((struct quotactl_ops *)0)->set_dqblk((struct super_block*)0, *((struct kqid*)0), (struct fs_disk_quota*)0);
	],[
		AC_DEFINE(HAVE_DQUOT_FS_DISK_QUOTA, 1,
			[quotactl_ops.set_dqblk takes struct fs_disk_quota])
		AC_DEFINE(HAVE_DQUOT_KQID, 1,
			[quotactl_ops.set_dqblk takes struct kqid])
	])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include <linux/quota.h>
], [
	((struct quotactl_ops *)0)->set_dqblk(NULL, 0, 0, (struct fs_disk_quota*)0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include <linux/quota.h>
]], [[
	((struct quotactl_ops *)0)->set_dqblk(NULL, 0, 0, (struct fs_disk_quota*)0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DQUOT_FS_DISK_QUOTA$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'quotactl_ops.set_dqblk' takes struct kqid & fs_disk_quota], [kqid_fs_disk_quota], [
		#include <linux/fs.h>
		#include <linux/quota.h>
	], [
		((struct quotactl_ops *)0)->set_dqblk((struct super_block*)0, *((struct kqid*)0), (struct fs_disk_quota*)0);
	], [
		AC_DEFINE(HAVE_DQUOT_FS_DISK_QUOTA, 1,
			[quotactl_ops.set_dqblk takes struct fs_disk_quota])
		AC_DEFINE(HAVE_DQUOT_KQID, 1,
			[quotactl_ops.set_dqblk takes struct kqid])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/fs.h>
		#include <linux/quota.h>
	], [
		((struct quotactl_ops *)0)->set_dqblk((struct super_block*)0, *((struct kqid*)0), (struct fs_disk_quota*)0);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/fs.h>
		#include <linux/quota.h>
	]], [[
		((struct quotactl_ops *)0)->set_dqblk((struct super_block*)0, *((struct kqid*)0), (struct fs_disk_quota*)0);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DQUOT_FS_DISK_QUOTA$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DQUOT_KQID$])
m4trace:configure.ac:25: -1- LC_HAVE_DQUOT_SUSPEND
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dquot_suspend' is defined], [dquot_suspend], [
	#include <linux/quotaops.h>
], [
	dquot_suspend(NULL, -1);
], [
	AC_DEFINE(HAVE_DQUOT_SUSPEND, 1, [dquot_suspend is defined])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/quotaops.h>
], [
	dquot_suspend(NULL, -1);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/quotaops.h>
]], [[
	dquot_suspend(NULL, -1);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DQUOT_SUSPEND$])
m4trace:configure.ac:25: -1- LC_HAVE_ADD_WAIT_QUEUE_EXCLUSIVE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if '__add_wait_queue_exclusive' exists], [__add_wait_queue_exclusive], [
	#include <linux/wait.h>
], [
	wait_queue_head_t queue;
	wait_queue_t	  wait;
	__add_wait_queue_exclusive(&queue, &wait);
], [
	AC_DEFINE(HAVE___ADD_WAIT_QUEUE_EXCLUSIVE, 1,
		  [__add_wait_queue_exclusive exists])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/wait.h>
], [
	wait_queue_head_t queue;
	wait_queue_t	  wait;
	__add_wait_queue_exclusive(&queue, &wait);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/wait.h>
]], [[
	wait_queue_head_t queue;
	wait_queue_t	  wait;
	__add_wait_queue_exclusive(&queue, &wait);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE___ADD_WAIT_QUEUE_EXCLUSIVE$])
m4trace:configure.ac:25: -1- LC_FILE_FSYNC
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'file_operations.fsync' takes 4 arguments], [file_ops_fsync_4args], [
	#include <linux/fs.h>
], [
	((struct file_operations *)0)->fsync(NULL, 0, 0, 0);
], [
	AC_DEFINE(HAVE_FILE_FSYNC_4ARGS, 1,
		[file_operations.fsync takes 4 arguments])
], [
	LB_CHECK_COMPILE([if 'file_operations.fsync' takes 2 arguments],
	file_ops_fsync_2args, [
		#include <linux/fs.h>
	],[
		((struct file_operations *)0)->fsync(NULL, 0);
	],[
		AC_DEFINE(HAVE_FILE_FSYNC_2ARGS, 1,
			[file_operations.fsync takes 2 arguments])
	])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	((struct file_operations *)0)->fsync(NULL, 0, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	((struct file_operations *)0)->fsync(NULL, 0, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FILE_FSYNC_4ARGS$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'file_operations.fsync' takes 2 arguments], [file_ops_fsync_2args], [
		#include <linux/fs.h>
	], [
		((struct file_operations *)0)->fsync(NULL, 0);
	], [
		AC_DEFINE(HAVE_FILE_FSYNC_2ARGS, 1,
			[file_operations.fsync takes 2 arguments])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/fs.h>
	], [
		((struct file_operations *)0)->fsync(NULL, 0);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/fs.h>
	]], [[
		((struct file_operations *)0)->fsync(NULL, 0);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FILE_FSYNC_2ARGS$])
m4trace:configure.ac:25: -1- LC_EXPORT_SIMPLE_SETATTR
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([simple_setattr], [fs/libfs.c], [AC_DEFINE(HAVE_SIMPLE_SETATTR, 1,
		[simple_setattr is exported by the kernel])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SIMPLE_SETATTR$])
m4trace:configure.ac:25: -1- LC_EXPORT_TRUNCATE_COMPLETE_PAGE
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([truncate_complete_page], [mm/truncate.c], [AC_DEFINE(HAVE_TRUNCATE_COMPLETE_PAGE, 1,
		[kernel export truncate_complete_page])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_TRUNCATE_COMPLETE_PAGE$])
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([remove_from_page_cache], [mm/filemap.c], [AC_DEFINE(HAVE_REMOVE_FROM_PAGE_CACHE, 1,
		[kernel export remove_from_page_cache])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_REMOVE_FROM_PAGE_CACHE$])
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([delete_from_page_cache], [mm/filemap.c], [AC_DEFINE(HAVE_DELETE_FROM_PAGE_CACHE, 1,
		[kernel export delete_from_page_cache])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DELETE_FROM_PAGE_CACHE$])
m4trace:configure.ac:25: -1- LC_FS_STRUCT_RWLOCK
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'fs_struct.lock' use rwlock], [fs_struct_rwlock], [
	#include <asm/atomic.h>
	#include <linux/spinlock.h>
	#include <linux/fs_struct.h>
], [
	((struct fs_struct *)0)->lock = (rwlock_t){ 0 };
], [
	AC_DEFINE(HAVE_FS_STRUCT_RWLOCK, 1, [fs_struct.lock use rwlock])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <asm/atomic.h>
	#include <linux/spinlock.h>
	#include <linux/fs_struct.h>
], [
	((struct fs_struct *)0)->lock = (rwlock_t){ 0 };
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <asm/atomic.h>
	#include <linux/spinlock.h>
	#include <linux/fs_struct.h>
]], [[
	((struct fs_struct *)0)->lock = (rwlock_t){ 0 };
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FS_STRUCT_RWLOCK$])
m4trace:configure.ac:25: -1- LC_SBOPS_EVICT_INODE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'super_operations.evict_inode' exist], [super_ops_evict_inode], [
	#include <linux/fs.h>
], [
	((struct super_operations *)0)->evict_inode(NULL);
], [
	AC_DEFINE(HAVE_SBOPS_EVICT_INODE, 1,
		[super_operations.evict_inode() is exist in kernel])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	((struct super_operations *)0)->evict_inode(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	((struct super_operations *)0)->evict_inode(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SBOPS_EVICT_INODE$])
m4trace:configure.ac:25: -1- LC_KERNEL_LOCKED
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'kernel_locked' is defined], [kernel_locked], [
	#include <linux/smp_lock.h>
], [
	kernel_locked();
], [
	AC_DEFINE(HAVE_KERNEL_LOCKED, 1, [kernel_locked is defined])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/smp_lock.h>
], [
	kernel_locked();
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/smp_lock.h>
]], [[
	kernel_locked();
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KERNEL_LOCKED$])
m4trace:configure.ac:25: -1- LC_BLKDEV_GET_BY_DEV
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([blkdev_get_by_dev], [fs/block_dev.c], [AC_DEFINE(HAVE_BLKDEV_GET_BY_DEV, 1,
		[blkdev_get_by_dev is exported by the kernel])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_BLKDEV_GET_BY_DEV$])
m4trace:configure.ac:25: -1- LC_GENERIC_PERMISSION
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'generic_permission' take 2 arguments], [generic_permission_2args], [
	#include <linux/fs.h>
], [
	generic_permission(NULL, 0);
], [
	AC_DEFINE(HAVE_GENERIC_PERMISSION_2ARGS, 1,
		[generic_permission taken 2 arguments])
], [
	LB_CHECK_COMPILE([if 'generic_permission' take 4 arguments],
	generic_permission_4args, [
		#include <linux/fs.h>
	],[
		generic_permission(NULL, 0, 0, NULL);
	],[
		AC_DEFINE(HAVE_GENERIC_PERMISSION_4ARGS, 1,
			[generic_permission taken 4 arguments])
	])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	generic_permission(NULL, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	generic_permission(NULL, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_GENERIC_PERMISSION_2ARGS$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'generic_permission' take 4 arguments], [generic_permission_4args], [
		#include <linux/fs.h>
	], [
		generic_permission(NULL, 0, 0, NULL);
	], [
		AC_DEFINE(HAVE_GENERIC_PERMISSION_4ARGS, 1,
			[generic_permission taken 4 arguments])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/fs.h>
	], [
		generic_permission(NULL, 0, 0, NULL);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/fs.h>
	]], [[
		generic_permission(NULL, 0, 0, NULL);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_GENERIC_PERMISSION_4ARGS$])
m4trace:configure.ac:25: -1- LC_DCACHE_LOCK
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dcache_lock' is exist], [dcache_lock], [
	#include <linux/dcache.h>
], [
	spin_lock(&dcache_lock);
], [
	AC_DEFINE(HAVE_DCACHE_LOCK, 1,
		[dcache_lock is exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/dcache.h>
], [
	spin_lock(&dcache_lock);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/dcache.h>
]], [[
	spin_lock(&dcache_lock);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DCACHE_LOCK$])
m4trace:configure.ac:25: -1- LC_INODE_I_RCU
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'inode.i_rcu' exists], [inode_i_rcu], [
	#include <linux/fs.h>
], [
	struct inode ino;
	struct rcu_head rcu = {};
	ino.i_rcu = rcu;
], [
	AC_DEFINE(HAVE_INODE_I_RCU, 1,
		[inode.i_rcu exists])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct inode ino;
	struct rcu_head rcu = {};
	ino.i_rcu = rcu;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct inode ino;
	struct rcu_head rcu = {};
	ino.i_rcu = rcu;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_INODE_I_RCU$])
m4trace:configure.ac:25: -1- LC_D_COMPARE_7ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dentry_operations.d_compare()' taken 7 arguments], [dentry_ops_d_compare_7arg], [
	#include <linux/dcache.h>
], [
	((struct dentry_operations*)0)->d_compare(NULL,NULL,NULL,NULL,0,NULL,NULL);
], [
	AC_DEFINE(HAVE_D_COMPARE_7ARGS, 1, [d_compare need 7 arguments])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/dcache.h>
], [
	((struct dentry_operations*)0)->d_compare(NULL,NULL,NULL,NULL,0,NULL,NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/dcache.h>
]], [[
	((struct dentry_operations*)0)->d_compare(NULL,NULL,NULL,NULL,0,NULL,NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_D_COMPARE_7ARGS$])
m4trace:configure.ac:25: -1- LC_D_DELETE_CONST
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dentry_operations.d_delete()' has const declare on first parameter], [dentry_ops_d_delete_1st_const], [
	#include <linux/dcache.h>
], [
	const struct dentry *d = NULL;
	((struct dentry_operations*)0)->d_delete(d);
], [
	AC_DEFINE(HAVE_D_DELETE_CONST, const,
		[d_delete first parameter declared const])
], [
	AC_DEFINE(HAVE_D_DELETE_CONST, [],
		[d_delete first parameter declared is not const])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/dcache.h>
], [
	const struct dentry *d = NULL;
	((struct dentry_operations*)0)->d_delete(d);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/dcache.h>
]], [[
	const struct dentry *d = NULL;
	((struct dentry_operations*)0)->d_delete(d);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_D_DELETE_CONST$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_D_DELETE_CONST$])
m4trace:configure.ac:25: -1- LC_REQUEST_QUEUE_UNPLUG_FN
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'request_queue' has 'unplug_fn' field], [request_queue_unplug_fn], [
	#include <linux/blkdev.h>
], [
	do {} while(sizeof(((struct request_queue *)0)->unplug_fn));
], [
	AC_DEFINE(HAVE_REQUEST_QUEUE_UNPLUG_FN, 1,
		[request_queue has unplug_fn field])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/blkdev.h>
], [
	do {} while(sizeof(((struct request_queue *)0)->unplug_fn));
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/blkdev.h>
]], [[
	do {} while(sizeof(((struct request_queue *)0)->unplug_fn));
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_REQUEST_QUEUE_UNPLUG_FN$])
m4trace:configure.ac:25: -1- LC_HAVE_FHANDLE_SYSCALLS
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([FHANDLE], [
	AC_DEFINE(HAVE_FHANDLE_SYSCALLS, 1,
		[kernel supports fhandles and related syscalls])
	])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_FHANDLE in or as module], [config_im_FHANDLE], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_FHANDLE) || defined(CONFIG_FHANDLE_MODULE))
	#error CONFIG_FHANDLE and CONFIG_FHANDLE_MODULE not #defined
	#endif
], [
	AC_DEFINE(HAVE_FHANDLE_SYSCALLS, 1,
		[kernel supports fhandles and related syscalls])
	], [])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_FHANDLE) || defined(CONFIG_FHANDLE_MODULE))
	#error CONFIG_FHANDLE and CONFIG_FHANDLE_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_FHANDLE) || defined(CONFIG_FHANDLE_MODULE))
	#error CONFIG_FHANDLE and CONFIG_FHANDLE_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FHANDLE_SYSCALLS$])
m4trace:configure.ac:25: -1- LC_HAVE_FSTYPE_MOUNT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'file_system_type' has 'mount' field], [file_system_type_mount], [
	#include <linux/fs.h>
], [
	struct file_system_type fst;
	void *i = (void *) fst.mount;
], [
	AC_DEFINE(HAVE_FSTYPE_MOUNT, 1,
		[struct file_system_type has mount field])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct file_system_type fst;
	void *i = (void *) fst.mount;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct file_system_type fst;
	void *i = (void *) fst.mount;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FSTYPE_MOUNT$])
m4trace:configure.ac:25: -1- LC_IOP_TRUNCATE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'inode_operations' has '.truncate' member function], [inode_ops_truncate], [
	#include <linux/fs.h>
], [
	((struct inode_operations *)0)->truncate(NULL);
], [
	AC_DEFINE(HAVE_INODEOPS_TRUNCATE, 1,
		[inode_operations has .truncate member function])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	((struct inode_operations *)0)->truncate(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	((struct inode_operations *)0)->truncate(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_INODEOPS_TRUNCATE$])
m4trace:configure.ac:25: -1- LC_HAVE_INODE_OWNER_OR_CAPABLE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'inode_owner_or_capable' exist], [inode_owner_or_capable], [
	#include <linux/fs.h>
], [
	inode_owner_or_capable(NULL);
], [
	AC_DEFINE(HAVE_INODE_OWNER_OR_CAPABLE, 1,
		[inode_owner_or_capable exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	inode_owner_or_capable(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	inode_owner_or_capable(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_INODE_OWNER_OR_CAPABLE$])
m4trace:configure.ac:25: -1- LC_HAVE_SECURITY_IINITSEC
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if security_inode_init_security takes a callback], [security_inode_init_security_callback], [
	#include <linux/security.h>
], [
	security_inode_init_security(NULL, NULL, NULL, (const initxattrs)NULL, NULL);
], [
	AC_DEFINE(HAVE_SECURITY_IINITSEC_CALLBACK, 1,
		  [security_inode_init_security takes a callback to set xattrs])
], [
	LB_CHECK_COMPILE([if security_inode_init_security takes a 'struct qstr' parameter],
	security_inode_init_security_qstr, [
		#include <linux/security.h>
	],[
		security_inode_init_security(NULL, NULL, (struct qstr *)NULL, NULL, NULL, NULL);
	],[
		AC_DEFINE(HAVE_SECURITY_IINITSEC_QSTR, 1,
			  [security_inode_init_security takes a 'struct qstr' parameter])
	])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/security.h>
], [
	security_inode_init_security(NULL, NULL, NULL, (const initxattrs)NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/security.h>
]], [[
	security_inode_init_security(NULL, NULL, NULL, (const initxattrs)NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SECURITY_IINITSEC_CALLBACK$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if security_inode_init_security takes a 'struct qstr' parameter], [security_inode_init_security_qstr], [
		#include <linux/security.h>
	], [
		security_inode_init_security(NULL, NULL, (struct qstr *)NULL, NULL, NULL, NULL);
	], [
		AC_DEFINE(HAVE_SECURITY_IINITSEC_QSTR, 1,
			  [security_inode_init_security takes a 'struct qstr' parameter])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/security.h>
	], [
		security_inode_init_security(NULL, NULL, (struct qstr *)NULL, NULL, NULL, NULL);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/security.h>
	]], [[
		security_inode_init_security(NULL, NULL, (struct qstr *)NULL, NULL, NULL, NULL);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SECURITY_IINITSEC_QSTR$])
m4trace:configure.ac:25: -1- LC_DIRTY_INODE_WITH_FLAG
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dirty_inode' super_operation takes flag], [dirty_inode_super_operation_flag], [
	#include <linux/fs.h>
], [
	struct inode *inode;
	inode->i_sb->s_op->dirty_inode(NULL, 0);
], [
	AC_DEFINE(HAVE_DIRTY_INODE_HAS_FLAG, 1,
		[dirty_inode super_operation takes flag])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct inode *inode;
	inode->i_sb->s_op->dirty_inode(NULL, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct inode *inode;
	inode->i_sb->s_op->dirty_inode(NULL, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DIRTY_INODE_HAS_FLAG$])
m4trace:configure.ac:25: -1- LC_LM_XXX_LOCK_MANAGER_OPS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'lock-manager' ops renamed to 'lm_xxx'], [lock_manager_ops_lm_xxx], [
	#include <linux/fs.h>
], [
	struct lock_manager_operations lm_ops;
	lm_ops.lm_compare_owner = NULL;
], [
	AC_DEFINE(HAVE_LM_XXX_LOCK_MANAGER_OPS, 1,
		[lock-manager ops renamed to lm_xxx])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct lock_manager_operations lm_ops;
	lm_ops.lm_compare_owner = NULL;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct lock_manager_operations lm_ops;
	lm_ops.lm_compare_owner = NULL;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LM_XXX_LOCK_MANAGER_OPS$])
m4trace:configure.ac:25: -1- LC_INODE_DIO_WAIT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'inode->i_alloc_sem' is killed and use inode_dio_wait], [inode_dio_wait], [
	#include <linux/fs.h>
], [
	inode_dio_wait((struct inode *)0);
], [
	AC_DEFINE(HAVE_INODE_DIO_WAIT, 1,
		[inode->i_alloc_sem is killed and use inode_dio_wait])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	inode_dio_wait((struct inode *)0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	inode_dio_wait((struct inode *)0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_INODE_DIO_WAIT$])
m4trace:configure.ac:25: -1- LC_IOP_GET_ACL
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'inode_operations' has '.get_acl' member function], [inode_ops_get_acl], [
	#include <linux/fs.h>
], [
	struct inode_operations iop;
	iop.get_acl = NULL;
], [
	AC_DEFINE(HAVE_IOP_GET_ACL, 1,
		[inode_operations has .get_acl member function])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct inode_operations iop;
	iop.get_acl = NULL;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct inode_operations iop;
	iop.get_acl = NULL;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_IOP_GET_ACL$])
m4trace:configure.ac:25: -1- LC_FILE_LLSEEK_SIZE
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([generic_file_llseek_size], [fs/read_write.c], [AC_DEFINE(HAVE_FILE_LLSEEK_SIZE, 1,
		[generic_file_llseek_size is exported by the kernel])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FILE_LLSEEK_SIZE$])
m4trace:configure.ac:25: -1- LC_INODE_PERMISION_2ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'inode_operations->permission' has two args], [inode_ops_permission_2args], [
	#include <linux/fs.h>
], [
	struct inode *inode __attribute__ ((unused));

	inode = NULL;
	inode->i_op->permission(NULL, 0);
], [
	AC_DEFINE(HAVE_INODE_PERMISION_2ARGS, 1,
		[inode_operations->permission has two args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct inode *inode __attribute__ ((unused));

	inode = NULL;
	inode->i_op->permission(NULL, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct inode *inode __attribute__ ((unused));

	inode = NULL;
	inode->i_op->permission(NULL, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_INODE_PERMISION_2ARGS$])
m4trace:configure.ac:25: -1- LC_RADIX_EXCEPTION_ENTRY
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([radix_tree_exceptional_entry exist], [radix_tree_exceptional_entry], [
	#include <linux/radix-tree.h>
], [
	radix_tree_exceptional_entry(NULL);
], [
	AC_DEFINE(HAVE_RADIX_EXCEPTION_ENTRY, 1,
		[radix_tree_exceptional_entry exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/radix-tree.h>
], [
	radix_tree_exceptional_entry(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/radix-tree.h>
]], [[
	radix_tree_exceptional_entry(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_RADIX_EXCEPTION_ENTRY$])
m4trace:configure.ac:25: -1- LC_HAVE_LOOP_CTL_GET_FREE
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX/include/linux/loop.h], [
	LB_CHECK_COMPILE([if have 'HAVE_LOOP_CTL_GET_FREE'],
	LOOP_CTL_GET_FREE, [
		#include <linux/loop.h>
	],[
		int i;

		i = LOOP_CTL_GET_FREE;
	],[
		AC_DEFINE(HAVE_LOOP_CTL_GET_FREE, 1,
			[LOOP_CTL_GET_FREE exist])
	])
], [
	AC_DEFINE(HAVE_LOOP_CTL_GET_FREE, 1,
		[kernel has LOOP_CTL_GET_FREE])
])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if have 'HAVE_LOOP_CTL_GET_FREE'], [LOOP_CTL_GET_FREE], [
		#include <linux/loop.h>
	], [
		int i;

		i = LOOP_CTL_GET_FREE;
	], [
		AC_DEFINE(HAVE_LOOP_CTL_GET_FREE, 1,
			[LOOP_CTL_GET_FREE exist])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/loop.h>
	], [
		int i;

		i = LOOP_CTL_GET_FREE;
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/loop.h>
	]], [[
		int i;

		i = LOOP_CTL_GET_FREE;
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LOOP_CTL_GET_FREE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LOOP_CTL_GET_FREE$])
m4trace:configure.ac:25: -1- LC_HAVE_VOID_MAKE_REQUEST_FN
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'request_queue.make_request_fn' returns void but not int], [make_request_fn_void], [
	#include <linux/blkdev.h>
], [
	int ret;
	make_request_fn *mrf;
	ret = mrf(NULL, NULL);
], [], [
	AC_DEFINE(HAVE_VOID_MAKE_REQUEST_FN, 1,
		[request_queue.make_request_fn returns void but not int])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/blkdev.h>
], [
	int ret;
	make_request_fn *mrf;
	ret = mrf(NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/blkdev.h>
]], [[
	int ret;
	make_request_fn *mrf;
	ret = mrf(NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_VOID_MAKE_REQUEST_FN$])
m4trace:configure.ac:25: -1- LC_HAVE_PROTECT_I_NLINK
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'inode->i_nlink' is protected from direct modification], [inode_i_nlink_protected], [
	#include <linux/fs.h>
], [
	struct inode i;
	set_nlink(&i, 1);
], [
	AC_DEFINE(HAVE_PROTECT_I_NLINK, 1,
		[inode->i_nlink is protected from direct modification])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct inode i;
	set_nlink(&i, 1);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct inode i;
	set_nlink(&i, 1);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_PROTECT_I_NLINK$])
m4trace:configure.ac:25: -1- LC_HAVE_MIGRATE_HEADER
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX/include/linux/migrate.h], [
	AC_DEFINE(HAVE_MIGRATE_H, 1,
		[kernel has include/linux/migrate.h])
], [
	LB_CHECK_FILE([$LINUX/include/linux/migrate_mode.h], [
		AC_DEFINE(HAVE_MIGRATE_MODE_H, 1,
			[kernel has include/linux/migrate_mode.h])
	])
])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_MIGRATE_H$])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX/include/linux/migrate_mode.h], [
		AC_DEFINE(HAVE_MIGRATE_MODE_H, 1,
			[kernel has include/linux/migrate_mode.h])
	])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_MIGRATE_MODE_H$])
m4trace:configure.ac:25: -1- LC_MIGRATEPAGE_4ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'address_space_operations.migratepage' has 4 args], [address_space_ops_migratepage_4args], [
	#include <linux/fs.h>
#ifdef HAVE_MIGRATE_H
	#include <linux/migrate.h>
#elif defined(HAVE_MIGRATE_MODE_H)
	#include <linux/migrate_mode.h>
#endif
], [
	struct address_space_operations aops;
	aops.migratepage(NULL, NULL, NULL, MIGRATE_ASYNC);
], [
	AC_DEFINE(HAVE_MIGRATEPAGE_4ARGS, 1,
		[address_space_operations.migratepage has 4 args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
#ifdef HAVE_MIGRATE_H
	#include <linux/migrate.h>
#elif defined(HAVE_MIGRATE_MODE_H)
	#include <linux/migrate_mode.h>
#endif
], [
	struct address_space_operations aops;
	aops.migratepage(NULL, NULL, NULL, MIGRATE_ASYNC);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
#ifdef HAVE_MIGRATE_H
	#include <linux/migrate.h>
#elif defined(HAVE_MIGRATE_MODE_H)
	#include <linux/migrate_mode.h>
#endif
]], [[
	struct address_space_operations aops;
	aops.migratepage(NULL, NULL, NULL, MIGRATE_ASYNC);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_MIGRATEPAGE_4ARGS$])
m4trace:configure.ac:25: -1- LC_SUPEROPS_USE_DENTRY
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'super_operations' use 'dentry' as parameter], [super_ops_dentry], [
	#include <linux/fs.h>
	int show_options(struct seq_file *seq, struct dentry *root) {
		return 0;
	}
], [
	struct super_operations ops;
	ops.show_options = show_options;
], [
	AC_DEFINE(HAVE_SUPEROPS_USE_DENTRY, 1,
		[super_operations use dentry as parameter])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	int show_options(struct seq_file *seq, struct dentry *root) {
		return 0;
	}
], [
	struct super_operations ops;
	ops.show_options = show_options;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	int show_options(struct seq_file *seq, struct dentry *root) {
		return 0;
	}
]], [[
	struct super_operations ops;
	ops.show_options = show_options;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SUPEROPS_USE_DENTRY$])
m4trace:configure.ac:25: -1- LC_INODEOPS_USE_UMODE_T
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'inode_operations' use 'umode_t' as parameter], [inode_ops_umode_t], [
	#include <linux/fs.h>
	#include <linux/types.h>
	int my_mknod(struct inode *dir, struct dentry *dchild,
		     umode_t mode, dev_t dev)
	{
		return 0;
	}
], [
	struct inode_operations ops;
	ops.mknod = my_mknod;
], [
	AC_DEFINE(HAVE_INODEOPS_USE_UMODE_T, 1,
		[inode_operations use umode_t as parameter])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include <linux/types.h>
	int my_mknod(struct inode *dir, struct dentry *dchild,
		     umode_t mode, dev_t dev)
	{
		return 0;
	}
], [
	struct inode_operations ops;
	ops.mknod = my_mknod;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include <linux/types.h>
	int my_mknod(struct inode *dir, struct dentry *dchild,
		     umode_t mode, dev_t dev)
	{
		return 0;
	}
]], [[
	struct inode_operations ops;
	ops.mknod = my_mknod;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_INODEOPS_USE_UMODE_T$])
m4trace:configure.ac:25: -1- LC_HAVE_CACHE_REGISTER
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if have 'cache_register'], [cache_register], [
	#include <linux/sunrpc/cache.h>
], [
	cache_register(NULL);
], [
	AC_DEFINE(HAVE_CACHE_REGISTER, 1,
		[have cache_register])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/sunrpc/cache.h>
], [
	cache_register(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/sunrpc/cache.h>
]], [[
	cache_register(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_CACHE_REGISTER$])
m4trace:configure.ac:25: -1- LC_HAVE_D_MAKE_ROOT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if have 'd_make_root'], [d_make_root], [
	#include <linux/fs.h>
], [
	d_make_root((struct inode *)NULL);
], [
	AC_DEFINE(HAVE_D_MAKE_ROOT, 1,
		[have d_make_root])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	d_make_root((struct inode *)NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	d_make_root((struct inode *)NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_D_MAKE_ROOT$])
m4trace:configure.ac:25: -1- LC_KMAP_ATOMIC_HAS_1ARG
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'kmap_atomic' has only 1 argument], [kmap_atomic_1arg], [
	#include <linux/highmem.h>
], [
	kmap_atomic(NULL);
], [
	AC_DEFINE(HAVE_KMAP_ATOMIC_HAS_1ARG, 1,
		[have kmap_atomic has only 1 argument])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/highmem.h>
], [
	kmap_atomic(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/highmem.h>
]], [[
	kmap_atomic(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KMAP_ATOMIC_HAS_1ARG$])
m4trace:configure.ac:25: -1- LC_HAVE_CLEAR_INODE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if have 'clear_inode'], [clear_inode], [
	#include <linux/fs.h>
], [
	clear_inode((struct inode *)NULL);
], [
	AC_DEFINE(HAVE_CLEAR_INODE, 1,
		[have clear_inode])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	clear_inode((struct inode *)NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	clear_inode((struct inode *)NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_CLEAR_INODE$])
m4trace:configure.ac:25: -1- LC_HAVE_ENCODE_FH_PARENT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'encode_fh' have parent inode as parameter], [encode_fh_parent_inode], [
	#include <linux/exportfs.h>
	#include <linux/fs.h>
	#include <linux/types.h>
	int ll_encode_fh(struct inode *i, __u32 *a, int *b, struct inode *p)
	{
		return 0;
	}
], [
	struct export_operations exp_op;
	exp_op.encode_fh = ll_encode_fh;
], [
	AC_DEFINE(HAVE_ENCODE_FH_PARENT, 1,
		[have parent inode as parameter])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/exportfs.h>
	#include <linux/fs.h>
	#include <linux/types.h>
	int ll_encode_fh(struct inode *i, __u32 *a, int *b, struct inode *p)
	{
		return 0;
	}
], [
	struct export_operations exp_op;
	exp_op.encode_fh = ll_encode_fh;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/exportfs.h>
	#include <linux/fs.h>
	#include <linux/types.h>
	int ll_encode_fh(struct inode *i, __u32 *a, int *b, struct inode *p)
	{
		return 0;
	}
]], [[
	struct export_operations exp_op;
	exp_op.encode_fh = ll_encode_fh;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_ENCODE_FH_PARENT$])
m4trace:configure.ac:25: -1- LC_FILE_LLSEEK_SIZE_5ARG
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has 'generic_file_llseek_size' with 5 args], [generic_file_llseek_size_5args], [
	#include <linux/fs.h>
], [
	generic_file_llseek_size(NULL, 0, 0, 0, 0);
], [
	AC_DEFINE(HAVE_FILE_LLSEEK_SIZE_5ARGS, 1,
		[kernel has generic_file_llseek_size with 5 args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	generic_file_llseek_size(NULL, 0, 0, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	generic_file_llseek_size(NULL, 0, 0, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FILE_LLSEEK_SIZE_5ARGS$])
m4trace:configure.ac:25: -1- LC_DATA_FOR_LLITE_IS_LIST
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'i_dentry/d_alias' uses 'list'], [i_dentry_d_alias_list], [
	#include <linux/fs.h>
], [
	struct inode inode;
	INIT_LIST_HEAD(&inode.i_dentry);
], [
	AC_DEFINE(DATA_FOR_LLITE_IS_LIST, 1,
		[both i_dentry/d_alias uses list])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct inode inode;
	INIT_LIST_HEAD(&inode.i_dentry);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct inode inode;
	INIT_LIST_HEAD(&inode.i_dentry);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DATA_FOR_LLITE_IS_LIST$])
m4trace:configure.ac:25: -1- LC_DENTRY_OPEN_USE_PATH
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dentry_open' uses 'struct path' as first argument], [dentry_open_path], [
	#include <linux/fs.h>
	#include <linux/path.h>
], [
	struct path path;
	dentry_open(&path, 0, NULL);
], [
	AC_DEFINE(HAVE_DENTRY_OPEN_USE_PATH, 1,
		[dentry_open uses struct path as first argument])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include <linux/path.h>
], [
	struct path path;
	dentry_open(&path, 0, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include <linux/path.h>
]], [[
	struct path path;
	dentry_open(&path, 0, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DENTRY_OPEN_USE_PATH$])
m4trace:configure.ac:25: -1- LC_HAVE_IOP_ATOMIC_OPEN
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'iop' has 'atomic_open'], [inode_ops_atomic_open], [
	#include <linux/fs.h>
], [
	struct inode_operations iop;
	iop.atomic_open = NULL;
], [
	AC_DEFINE(HAVE_IOP_ATOMIC_OPEN, 1,
		[have iop atomic_open])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct inode_operations iop;
	iop.atomic_open = NULL;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct inode_operations iop;
	iop.atomic_open = NULL;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_IOP_ATOMIC_OPEN$])
m4trace:configure.ac:25: -1- LC_HAVE_POSIXACL_USER_NS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'posix_acl_to_xattr' takes 'struct user_namespace'], [posix_acl_to_xattr_user_namespace], [
	#include <linux/fs.h>
	#include <linux/posix_acl_xattr.h>
], [
	posix_acl_to_xattr((struct user_namespace *)NULL, NULL, NULL, 0);
], [
	AC_DEFINE(HAVE_POSIXACL_USER_NS, 1,
		[posix_acl_to_xattr takes struct user_namespace])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include <linux/posix_acl_xattr.h>
], [
	posix_acl_to_xattr((struct user_namespace *)NULL, NULL, NULL, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include <linux/posix_acl_xattr.h>
]], [[
	posix_acl_to_xattr((struct user_namespace *)NULL, NULL, NULL, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_POSIXACL_USER_NS$])
m4trace:configure.ac:25: -1- LC_HAVE_FILE_F_INODE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'struct file' has member 'f_inode'], [file_f_inode], [
	#include <linux/fs.h>
], [
	((struct file *)0)->f_inode = NULL;
], [
	AC_DEFINE(HAVE_FILE_F_INODE, 1,
		[struct file has member f_inode])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	((struct file *)0)->f_inode = NULL;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	((struct file *)0)->f_inode = NULL;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FILE_F_INODE$])
m4trace:configure.ac:25: -1- LC_HAVE_SUNRPC_UPCALL_HAS_3ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'sunrpc_cache_pipe_upcall' takes 3 args], [sunrpc_cache_pipe_upcall_3args], [
	#include <linux/sunrpc/cache.h>
], [
	sunrpc_cache_pipe_upcall(NULL, NULL, NULL);
], [
	AC_DEFINE(HAVE_SUNRPC_UPCALL_HAS_3ARGS, 1,
		[sunrpc_cache_pipe_upcall takes 3 args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/sunrpc/cache.h>
], [
	sunrpc_cache_pipe_upcall(NULL, NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/sunrpc/cache.h>
]], [[
	sunrpc_cache_pipe_upcall(NULL, NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SUNRPC_UPCALL_HAS_3ARGS$])
m4trace:configure.ac:25: -1- LC_HAVE_HLIST_FOR_EACH_3ARG
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'hlist_for_each_entry' has 3 args], [hlist_for_each_entry_3args], [
	#include <linux/list.h>
	#include <linux/fs.h>
], [
	struct hlist_head *head = NULL;
	struct inode *inode;

	hlist_for_each_entry(inode, head, i_hash) {
		continue;
	}
], [
	AC_DEFINE(HAVE_HLIST_FOR_EACH_3ARG, 1,
		[hlist_for_each_entry has 3 args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/list.h>
	#include <linux/fs.h>
], [
	struct hlist_head *head = NULL;
	struct inode *inode;

	hlist_for_each_entry(inode, head, i_hash) {
		continue;
	}
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/list.h>
	#include <linux/fs.h>
]], [[
	struct hlist_head *head = NULL;
	struct inode *inode;

	hlist_for_each_entry(inode, head, i_hash) {
		continue;
	}
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_HLIST_FOR_EACH_3ARG$])
m4trace:configure.ac:25: -1- LC_HAVE_BIO_END_SECTOR
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'bio_end_sector' is defined], [bio_end_sector], [
	#include <linux/bio.h>
], [
	struct bio bio;

	bio_end_sector(&bio);
], [
	AC_DEFINE(HAVE_BIO_END_SECTOR, 1,
		  [bio_end_sector is defined])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/bio.h>
], [
	struct bio bio;

	bio_end_sector(&bio);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/bio.h>
]], [[
	struct bio bio;

	bio_end_sector(&bio);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_BIO_END_SECTOR$])
m4trace:configure.ac:25: -1- LC_BLKDEV_RELEASE_RETURN_INT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'block_device_operations' release returns 'int'], [block_device_ops_release_return_int], [
	#include <linux/blkdev.h>
], [
	struct block_device_operations fops;
	int i __attribute__ ((unused));

	i = fops.release(NULL, 0);
], [
	AC_DEFINE(HAVE_BLKDEV_RELEASE_RETURN_INT, 1,
		[block device release returns int])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/blkdev.h>
], [
	struct block_device_operations fops;
	int i __attribute__ ((unused));

	i = fops.release(NULL, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/blkdev.h>
]], [[
	struct block_device_operations fops;
	int i __attribute__ ((unused));

	i = fops.release(NULL, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_BLKDEV_RELEASE_RETURN_INT$])
m4trace:configure.ac:25: -1- LC_HAVE_REMOVE_PROC_SUBTREE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'remove_proc_subtree' is defined], [remove_proc_subtree], [
	#include <linux/proc_fs.h>
], [
	remove_proc_subtree(NULL, NULL);
], [
	AC_DEFINE(HAVE_REMOVE_PROC_SUBTREE, 1,
		  [remove_proc_subtree is defined])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/proc_fs.h>
], [
	remove_proc_subtree(NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/proc_fs.h>
]], [[
	remove_proc_subtree(NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_REMOVE_PROC_SUBTREE$])
m4trace:configure.ac:25: -1- LC_HAVE_PROC_REMOVE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'proc_remove' is defined], [proc_remove], [
	#include <linux/proc_fs.h>
], [
	proc_remove(NULL);
], [
	AC_DEFINE(HAVE_PROC_REMOVE, 1,
		  [proc_remove is defined])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/proc_fs.h>
], [
	proc_remove(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/proc_fs.h>
]], [[
	proc_remove(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_PROC_REMOVE$])
m4trace:configure.ac:25: -1- LC_INVALIDATE_RANGE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'address_space_operations.invalidatepage' requires 3 arguments], [address_space_ops_invalidatepage_3args], [
	#include <linux/fs.h>
], [
	struct address_space_operations a_ops;
	a_ops.invalidatepage(NULL, 0, 0);
], [
	AC_DEFINE(HAVE_INVALIDATE_RANGE, 1,
		[address_space_operations.invalidatepage needs 3 arguments])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct address_space_operations a_ops;
	a_ops.invalidatepage(NULL, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct address_space_operations a_ops;
	a_ops.invalidatepage(NULL, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_INVALIDATE_RANGE$])
m4trace:configure.ac:25: -1- LC_HAVE_DIR_CONTEXT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dir_context' exist], [dir_context], [
	#include <linux/fs.h>
], [
	struct dir_context ctx;
	ctx.pos = 0;
], [
	AC_DEFINE(HAVE_DIR_CONTEXT, 1,
		[dir_context exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct dir_context ctx;
	ctx.pos = 0;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct dir_context ctx;
	ctx.pos = 0;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DIR_CONTEXT$])
m4trace:configure.ac:25: -1- LC_D_COMPARE_5ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'd_compare' taken 5 arguments], [d_compare_5args], [
	#include <linux/dcache.h>
], [
	((struct dentry_operations*)0)->d_compare(NULL,NULL,0,NULL,NULL);
], [
	AC_DEFINE(HAVE_D_COMPARE_5ARGS, 1,
		[d_compare need 5 arguments])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/dcache.h>
], [
	((struct dentry_operations*)0)->d_compare(NULL,NULL,0,NULL,NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/dcache.h>
]], [[
	((struct dentry_operations*)0)->d_compare(NULL,NULL,0,NULL,NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_D_COMPARE_5ARGS$])
m4trace:configure.ac:25: -1- LC_HAVE_DCOUNT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'd_count' exist], [d_count], [
	#include <linux/dcache.h>
], [
	struct dentry de;
	d_count(&de);
], [
	AC_DEFINE(HAVE_D_COUNT, 1,
		[d_count exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/dcache.h>
], [
	struct dentry de;
	d_count(&de);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/dcache.h>
]], [[
	struct dentry de;
	d_count(&de);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_D_COUNT$])
m4trace:configure.ac:25: -1- LC_HAVE_DENTRY_D_U_D_ALIAS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if list 'dentry.d_u.d_alias' exist], [d_alias], [
		#include <linux/list.h>
		#include <linux/dcache.h>
	], [
		struct dentry de;
		INIT_LIST_HEAD(&de.d_u.d_alias);
	], [
		AC_DEFINE(HAVE_DENTRY_D_U_D_ALIAS, 1,
			[list dentry.d_u.d_alias exist])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/list.h>
		#include <linux/dcache.h>
	], [
		struct dentry de;
		INIT_LIST_HEAD(&de.d_u.d_alias);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/list.h>
		#include <linux/dcache.h>
	]], [[
		struct dentry de;
		INIT_LIST_HEAD(&de.d_u.d_alias);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DENTRY_D_U_D_ALIAS$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if hlist 'dentry.d_u.d_alias' exist], [d_alias], [
		#include <linux/list.h>
		#include <linux/dcache.h>
	], [
		struct dentry de;
		INIT_HLIST_NODE(&de.d_u.d_alias);
	], [
		AC_DEFINE(HAVE_DENTRY_D_U_D_ALIAS, 1,
			[hlist dentry.d_u.d_alias exist])
	])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
		#include <linux/list.h>
		#include <linux/dcache.h>
	], [
		struct dentry de;
		INIT_HLIST_NODE(&de.d_u.d_alias);
	], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
		#include <linux/list.h>
		#include <linux/dcache.h>
	]], [[
		struct dentry de;
		INIT_HLIST_NODE(&de.d_u.d_alias);
	]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DENTRY_D_U_D_ALIAS$])
m4trace:configure.ac:25: -1- LC_HAVE_DENTRY_D_CHILD
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'dentry.d_child' exist], [d_child], [
	#include <linux/list.h>
	#include <linux/dcache.h>
], [
	struct dentry de;
	INIT_LIST_HEAD(&de.d_child);
], [
	AC_DEFINE(HAVE_DENTRY_D_CHILD, 1,
		[dentry.d_child exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/list.h>
	#include <linux/dcache.h>
], [
	struct dentry de;
	INIT_LIST_HEAD(&de.d_child);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/list.h>
	#include <linux/dcache.h>
]], [[
	struct dentry de;
	INIT_LIST_HEAD(&de.d_child);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DENTRY_D_CHILD$])
m4trace:configure.ac:25: -1- LC_OLDSIZE_TRUNCATE_PAGECACHE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'truncate_pagecache' with 'old_size' parameter], [truncate_pagecache_old_size], [
	#include <linux/mm.h>
], [
	truncate_pagecache(NULL, 0, 0);
], [
	AC_DEFINE(HAVE_OLDSIZE_TRUNCATE_PAGECACHE, 1,
		[with oldsize])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/mm.h>
], [
	truncate_pagecache(NULL, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/mm.h>
]], [[
	truncate_pagecache(NULL, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_OLDSIZE_TRUNCATE_PAGECACHE$])
m4trace:configure.ac:25: -1- LC_KIOCB_KI_LEFT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'struct kiocb' with 'ki_left' member], [kiocb_ki_left], [
	#include <linux/aio.h>
], [
	((struct kiocb*)0)->ki_left = 0;
], [
	AC_DEFINE(HAVE_KIOCB_KI_LEFT, 1,
		[ki_left exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/aio.h>
], [
	((struct kiocb*)0)->ki_left = 0;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/aio.h>
]], [[
	((struct kiocb*)0)->ki_left = 0;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KIOCB_KI_LEFT$])
m4trace:configure.ac:25: -1- LC_VFS_RENAME_5ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has 'vfs_rename' with 5 args], [vfs_rename_5args], [
	#include <linux/fs.h>
], [
	vfs_rename(NULL, NULL, NULL, NULL, NULL);
], [
	AC_DEFINE(HAVE_VFS_RENAME_5ARGS, 1,
		[kernel has vfs_rename with 5 args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	vfs_rename(NULL, NULL, NULL, NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	vfs_rename(NULL, NULL, NULL, NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_VFS_RENAME_5ARGS$])
m4trace:configure.ac:25: -1- LC_VFS_UNLINK_3ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has 'vfs_unlink' with 3 args], [vfs_unlink_3args], [
	#include <linux/fs.h>
], [
	vfs_unlink(NULL, NULL, NULL);
], [
	AC_DEFINE(HAVE_VFS_UNLINK_3ARGS, 1,
		[kernel has vfs_unlink with 3 args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	vfs_unlink(NULL, NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	vfs_unlink(NULL, NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_VFS_UNLINK_3ARGS$])
m4trace:configure.ac:25: -1- LC_HAVE_BVEC_ITER
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has struct bvec_iter], [have_bvec_iter], [
	#include <linux/bio.h>
], [
	struct bvec_iter iter;
	iter.bi_bvec_done = 0;
], [
	AC_DEFINE(HAVE_BVEC_ITER, 1,
		[kernel has struct bvec_iter])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/bio.h>
], [
	struct bvec_iter iter;
	iter.bi_bvec_done = 0;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/bio.h>
]], [[
	struct bvec_iter iter;
	iter.bi_bvec_done = 0;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_BVEC_ITER$])
m4trace:configure.ac:25: -1- LC_HAVE_TRUNCATE_IPAGES_FINAL
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has truncate_inode_pages_final], [truncate_ipages_final], [
	#include <linux/mm.h>
], [
	truncate_inode_pages_final(NULL);
], [
	AC_DEFINE(HAVE_TRUNCATE_INODE_PAGES_FINAL, 1,
		[kernel has truncate_inode_pages_final])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/mm.h>
], [
	truncate_inode_pages_final(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/mm.h>
]], [[
	truncate_inode_pages_final(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_TRUNCATE_INODE_PAGES_FINAL$])
m4trace:configure.ac:25: -1- LC_VFS_RENAME_6ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has 'vfs_rename' with 6 args], [vfs_rename_6args], [
	#include <linux/fs.h>
], [
	vfs_rename(NULL, NULL, NULL, NULL, NULL, NULL);
], [
	AC_DEFINE(HAVE_VFS_RENAME_6ARGS, 1,
		[kernel has vfs_rename with 6 args])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	vfs_rename(NULL, NULL, NULL, NULL, NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	vfs_rename(NULL, NULL, NULL, NULL, NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_VFS_RENAME_6ARGS$])
m4trace:configure.ac:25: -1- LC_DIRECTIO_USE_ITER
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if direct IO uses iov_iter], [direct_io_iter], [
	#include <linux/fs.h>
], [
	struct address_space_operations ops;
	struct iov_iter *iter = NULL;
	loff_t offset = 0;

	ops.direct_IO(0, NULL, iter, offset);
], [
	AC_DEFINE(HAVE_DIRECTIO_ITER, 1,
		[direct IO uses iov_iter])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct address_space_operations ops;
	struct iov_iter *iter = NULL;
	loff_t offset = 0;

	ops.direct_IO(0, NULL, iter, offset);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct address_space_operations ops;
	struct iov_iter *iter = NULL;
	loff_t offset = 0;

	ops.direct_IO(0, NULL, iter, offset);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DIRECTIO_ITER$])
m4trace:configure.ac:25: -1- LC_HAVE_IOV_ITER_INIT_DIRECTION
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'iov_iter_init' takes a tag], [iter_init], [
	#include <linux/uio.h>
	#include <linux/fs.h>
], [
	const struct iovec *iov = NULL;

	iov_iter_init(NULL, READ, iov, 1, 0);
], [
	AC_DEFINE(HAVE_IOV_ITER_INIT_DIRECTION, 1,
		[iov_iter_init handles directional tag])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/uio.h>
	#include <linux/fs.h>
], [
	const struct iovec *iov = NULL;

	iov_iter_init(NULL, READ, iov, 1, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/uio.h>
	#include <linux/fs.h>
]], [[
	const struct iovec *iov = NULL;

	iov_iter_init(NULL, READ, iov, 1, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_IOV_ITER_INIT_DIRECTION$])
m4trace:configure.ac:25: -1- LC_HAVE_FILE_OPERATIONS_READ_WRITE_ITER
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'file_operations.[read|write]_iter' exist], [file_function_iter], [
	#include <linux/fs.h>
], [
	((struct file_operations *)NULL)->read_iter(NULL, NULL);
	((struct file_operations *)NULL)->write_iter(NULL, NULL);
], [
	AC_DEFINE(HAVE_FILE_OPERATIONS_READ_WRITE_ITER, 1,
		[file_operations.[read|write]_iter functions exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	((struct file_operations *)NULL)->read_iter(NULL, NULL);
	((struct file_operations *)NULL)->write_iter(NULL, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	((struct file_operations *)NULL)->read_iter(NULL, NULL);
	((struct file_operations *)NULL)->write_iter(NULL, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FILE_OPERATIONS_READ_WRITE_ITER$])
m4trace:configure.ac:25: -1- LC_KEY_MATCH_DATA
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if struct key_match field exist], [key_match], [
	#include <linux/key-type.h>
], [
	struct key_match_data data;
], [
	AC_DEFINE(HAVE_KEY_MATCH_DATA, 1,
		[struct key_match_data exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/key-type.h>
], [
	struct key_match_data data;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/key-type.h>
]], [[
	struct key_match_data data;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KEY_MATCH_DATA$])
m4trace:configure.ac:25: -1- LC_PERCPU_COUNTER_INIT
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if percpu_counter_init uses GFP_* flag as argument], [percpu_counter_init], [
	#include <linux/percpu_counter.h>
], [
	percpu_counter_init(NULL, 0, GFP_KERNEL);
], [
	AC_DEFINE(HAVE_PERCPU_COUNTER_INIT_GFP_FLAG, 1,
		[percpu_counter_init uses GFP_* flag])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/percpu_counter.h>
], [
	percpu_counter_init(NULL, 0, GFP_KERNEL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/percpu_counter.h>
]], [[
	percpu_counter_init(NULL, 0, GFP_KERNEL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_PERCPU_COUNTER_INIT_GFP_FLAG$])
m4trace:configure.ac:25: -1- LC_NFS_FILLDIR_USE_CTX
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if filldir_t uses struct dir_context], [filldir_ctx], [
	#include <linux/fs.h>
], [
	int filldir(struct dir_context *ctx, const char* name,
		    int i, loff_t off, u64 tmp, unsigned temp)
	{
		return 0;
	}

	struct dir_context ctx = {
		.actor = filldir,
	};

	ctx.actor(NULL, "test", 0, (loff_t) 0, 0, 0);
], [
	AC_DEFINE(HAVE_FILLDIR_USE_CTX, 1,
		[filldir_t needs struct dir_context as argument])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	int filldir(struct dir_context *ctx, const char* name,
		    int i, loff_t off, u64 tmp, unsigned temp)
	{
		return 0;
	}

	struct dir_context ctx = {
		.actor = filldir,
	};

	ctx.actor(NULL, "test", 0, (loff_t) 0, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	int filldir(struct dir_context *ctx, const char* name,
		    int i, loff_t off, u64 tmp, unsigned temp)
	{
		return 0;
	}

	struct dir_context ctx = {
		.actor = filldir,
	};

	ctx.actor(NULL, "test", 0, (loff_t) 0, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_FILLDIR_USE_CTX$])
m4trace:configure.ac:25: -1- LC_KIOCB_HAS_NBYTES
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if struct kiocb has ki_nbytes field], [ki_nbytes], [
	#include <linux/fs.h>
], [
	struct kiocb iocb;

	iocb.ki_nbytes = 0;
], [
	AC_DEFINE(HAVE_KI_NBYTES, 1, [ki_nbytes field exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct kiocb iocb;

	iocb.ki_nbytes = 0;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct kiocb iocb;

	iocb.ki_nbytes = 0;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_KI_NBYTES$])
m4trace:configure.ac:25: -1- LC_BACKING_DEV_INFO_REMOVAL
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if struct address_space has backing_dev_info], [backing_dev_info], [
	#include <linux/fs.h>
], [
	struct address_space mapping;

	mapping.backing_dev_info = NULL;
], [
	AC_DEFINE(HAVE_BACKING_DEV_INFO, 1, [backing_dev_info exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
], [
	struct address_space mapping;

	mapping.backing_dev_info = NULL;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
]], [[
	struct address_space mapping;

	mapping.backing_dev_info = NULL;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_BACKING_DEV_INFO$])
m4trace:configure.ac:25: -1- LC_HAVE_BDI_CAP_MAP_COPY
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if have 'BDI_CAP_MAP_COPY'], [bdi_cap_map_copy], [
	#include <linux/backing-dev.h>
], [
	struct backing_dev_info info;

	info.capabilities = BDI_CAP_MAP_COPY;
], [
	AC_DEFINE(HAVE_BDI_CAP_MAP_COPY, 1,
		[BDI_CAP_MAP_COPY exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/backing-dev.h>
], [
	struct backing_dev_info info;

	info.capabilities = BDI_CAP_MAP_COPY;
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/backing-dev.h>
]], [[
	struct backing_dev_info info;

	info.capabilities = BDI_CAP_MAP_COPY;
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_BDI_CAP_MAP_COPY$])
m4trace:configure.ac:25: -1- LC_CANCEL_DIRTY_PAGE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if cancel_dirty_page still exist], [cancel_dirty_page], [
	#include <linux/mm.h>
], [
	cancel_dirty_page(NULL, PAGE_SIZE);
], [
	AC_DEFINE(HAVE_CANCEL_DIRTY_PAGE, 1,
		[cancel_dirty_page is still available])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/mm.h>
], [
	cancel_dirty_page(NULL, PAGE_SIZE);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/mm.h>
]], [[
	cancel_dirty_page(NULL, PAGE_SIZE);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_CANCEL_DIRTY_PAGE$])
m4trace:configure.ac:25: -1- LC_IOV_ITER_RW
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if iov_iter_rw exist], [iov_iter_rw], [
	#include <linux/fs.h>
	#include <linux/uio.h>
], [
	struct iov_iter *iter = NULL;

	iov_iter_rw(iter);
], [
	AC_DEFINE(HAVE_IOV_ITER_RW, 1,
		[iov_iter_rw exist])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include <linux/uio.h>
], [
	struct iov_iter *iter = NULL;

	iov_iter_rw(iter);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include <linux/uio.h>
]], [[
	struct iov_iter *iter = NULL;

	iov_iter_rw(iter);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_IOV_ITER_RW$])
m4trace:configure.ac:25: -1- LC_HAVE_SYNC_READ_WRITE
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([new_sync_read], [fs/read_write.c], [AC_DEFINE(HAVE_SYNC_READ_WRITE, 1,
			[new_sync_[read|write] is exported by the kernel])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SYNC_READ_WRITE$])
m4trace:configure.ac:25: -1- LC_NEW_CANCEL_DIRTY_PAGE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if cancel_dirty_page with one argument exist], [new_cancel_dirty_page], [
	#include <linux/mm.h>
], [
	cancel_dirty_page(NULL);
], [
	AC_DEFINE(HAVE_NEW_CANCEL_DIRTY_PAGE, 1,
		[cancel_dirty_page with one arguement is available])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/mm.h>
], [
	cancel_dirty_page(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/mm.h>
]], [[
	cancel_dirty_page(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_NEW_CANCEL_DIRTY_PAGE$])
m4trace:configure.ac:25: -1- LC_BIO_ENDIO_USES_ONE_ARG
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'bio_endio' with one argument exist], [bio_endio], [
	#include <linux/bio.h>
], [
	bio_endio(NULL);
], [
	AC_DEFINE(HAVE_BIO_ENDIO_USES_ONE_ARG, 1,
		[bio_endio takes only one argument])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/bio.h>
], [
	bio_endio(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/bio.h>
]], [[
	bio_endio(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_BIO_ENDIO_USES_ONE_ARG$])
m4trace:configure.ac:25: -1- LC_SYMLINK_OPS_USE_NAMEIDATA
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if symlink inode operations have struct nameidata argument], [symlink_use_nameidata], [
	#include <linux/namei.h>
	#include <linux/fs.h>
], [
	struct nameidata *nd = NULL;

	((struct inode_operations *)0)->follow_link(NULL, nd);
	((struct inode_operations *)0)->put_link(NULL, nd, NULL);
], [
	AC_DEFINE(HAVE_SYMLINK_OPS_USE_NAMEIDATA, 1,
		[symlink inode operations need struct nameidata argument])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/namei.h>
	#include <linux/fs.h>
], [
	struct nameidata *nd = NULL;

	((struct inode_operations *)0)->follow_link(NULL, nd);
	((struct inode_operations *)0)->put_link(NULL, nd, NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/namei.h>
	#include <linux/fs.h>
]], [[
	struct nameidata *nd = NULL;

	((struct inode_operations *)0)->follow_link(NULL, nd);
	((struct inode_operations *)0)->put_link(NULL, nd, NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SYMLINK_OPS_USE_NAMEIDATA$])
m4trace:configure.ac:25: -1- LC_FUNC_DEV_SET_RDONLY
m4trace:configure.ac:25: -1- LB_CHECK_EXPORT([dev_set_rdonly], [block/ll_rw_block.c block/blk-core.c], [AC_DEFINE(HAVE_DEV_SET_RDONLY, 1,
		[kernel exports dev_set_rdonly])], [AC_MSG_WARN([kernel missing dev_set_rdonly patch for testing])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DEV_SET_RDONLY$])
m4trace:configure.ac:25: -1- LC_STACK_SIZE
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if stack size is at least 8k], [stack_size_8k], [
	#include <linux/thread_info.h>
], [
	#if THREAD_SIZE < 8192
	#error "stack size < 8192"
	#endif
], [], [AC_MSG_ERROR([

Lustre requires that Linux is configured with at least a 8KB stack.
])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/thread_info.h>
], [
	#if THREAD_SIZE < 8192
	#error "stack size < 8192"
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/thread_info.h>
]], [[
	#if THREAD_SIZE < 8192
	#error "stack size < 8192"
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LC_QUOTA64
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if kernel has 64-bit quota limits support], [quota64], [
	#include <linux/kernel.h>
	#include <linux/fs.h>
	#if defined(HAVE_FS_QUOTA_QUOTAIO_H)
	#include <quota/quotaio_v2.h>
	struct v2r1_disk_dqblk dqblk_r1;
	#else
	#include <linux/quota.h>
	int ver = QFMT_VFS_V1;
	#endif
], [], [
	AC_DEFINE(HAVE_QUOTA64, 1, [have quota64])
], [
	LB_CHECK_FILE([$LINUX/include/linux/lustre_version.h],
		[AC_MSG_ERROR([You have got no 64-bit kernel quota support.])])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/kernel.h>
	#include <linux/fs.h>
	#if defined(HAVE_FS_QUOTA_QUOTAIO_H)
	#include <quota/quotaio_v2.h>
	struct v2r1_disk_dqblk dqblk_r1;
	#else
	#include <linux/quota.h>
	int ver = QFMT_VFS_V1;
	#endif
], [], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/kernel.h>
	#include <linux/fs.h>
	#if defined(HAVE_FS_QUOTA_QUOTAIO_H)
	#include <quota/quotaio_v2.h>
	struct v2r1_disk_dqblk dqblk_r1;
	#else
	#include <linux/quota.h>
	int ver = QFMT_VFS_V1;
	#endif
]], [[]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_QUOTA64$])
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$LINUX/include/linux/lustre_version.h], [AC_MSG_ERROR([You have got no 64-bit kernel quota support.])])
m4trace:configure.ac:25: -1- LC_QUOTA_CONFIG
m4trace:configure.ac:25: -1- LB_CHECK_CONFIG_IM([QUOTA], [], [AC_MSG_ERROR([

Lustre quota requires that CONFIG_QUOTA is enabled in your kernel.
])])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel was built with CONFIG_QUOTA in or as module], [config_im_QUOTA], [
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_QUOTA) || defined(CONFIG_QUOTA_MODULE))
	#error CONFIG_QUOTA and CONFIG_QUOTA_MODULE not #defined
	#endif
], [], [AC_MSG_ERROR([

Lustre quota requires that CONFIG_QUOTA is enabled in your kernel.
])])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <$AUTOCONF_HDIR/autoconf.h>
], [
	#if !(defined(CONFIG_QUOTA) || defined(CONFIG_QUOTA_MODULE))
	#error CONFIG_QUOTA and CONFIG_QUOTA_MODULE not #defined
	#endif
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <$AUTOCONF_HDIR/autoconf.h>
]], [[
	#if !(defined(CONFIG_QUOTA) || defined(CONFIG_QUOTA_MODULE))
	#error CONFIG_QUOTA and CONFIG_QUOTA_MODULE not #defined
	#endif
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_CONFIG_LDISKFS
m4trace:configure.ac:25: -1- LDISKFS_LINUX_SERIES
m4trace:configure.ac:25: -1- m4_pattern_allow([^LDISKFS_SERIES$])
m4trace:configure.ac:25: -1- LDISKFS_AC_PATCH_PROGRAM
m4trace:configure.ac:25: -1- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
../../lib/autoconf/general.m4:1424: AC_ARG_ENABLE is expanded from...
/home/build/lustre-release/config/lustre-build-ldiskfs.m4:116: LDISKFS_AC_PATCH_PROGRAM is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build-ldiskfs.m4:146: LB_CONFIG_LDISKFS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:472: LB_CONFIG_SERVERS is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^quilt_avail$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^patch_avail$])
m4trace:configure.ac:25: -1- LB_EXT_FREE_BLOCKS_WITH_BUFFER_HEAD
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if 'ext4_free_blocks' needs 'struct buffer_head'], [ext4_free_blocks_with_buffer_head], [
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4.h"
], [
	ext4_free_blocks(NULL, NULL, NULL, 0, 0, 0);
], [
	AC_DEFINE(HAVE_EXT_FREE_BLOCK_WITH_BUFFER_HEAD, 1,
		[ext4_free_blocks do not require struct buffer_head])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4.h"
], [
	ext4_free_blocks(NULL, NULL, NULL, 0, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4.h"
]], [[
	ext4_free_blocks(NULL, NULL, NULL, 0, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_EXT_FREE_BLOCK_WITH_BUFFER_HEAD$])
m4trace:configure.ac:25: -1- LB_EXT_PBLOCK
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if Linux kernel has 'ext_pblock'], [ext_pblock], [
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4_extents.h"
], [
	ext_pblock(NULL);
], [
	AC_DEFINE(HAVE_EXT_PBLOCK, 1, [Linux kernel has ext_pblock])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4_extents.h"
], [
	ext_pblock(NULL);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4_extents.h"
]], [[
	ext_pblock(NULL);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_EXT_PBLOCK$])
m4trace:configure.ac:25: -1- LB_EXT4_JOURNAL_START_3ARGS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if ext4_journal_start takes 3 arguments], [ext4_journal_start], [
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4_jbd2.h"
], [
	ext4_journal_start(NULL, 0, 0);
], [
	AC_DEFINE(JOURNAL_START_HAS_3ARGS, 1, [ext4_journal_start takes 3 arguments])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4_jbd2.h"
], [
	ext4_journal_start(NULL, 0, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4_jbd2.h"
]], [[
	ext4_journal_start(NULL, 0, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^JOURNAL_START_HAS_3ARGS$])
m4trace:configure.ac:25: -1- LB_LDISKFS_MAP_BLOCKS
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if kernel has ext4_map_blocks], [ext4_map_blocks], [
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4.h"
], [
	ext4_map_blocks(NULL, NULL, NULL, 0);
], [
	AC_DEFINE(HAVE_LDISKFS_MAP_BLOCKS, 1, [kernel has ext4_map_blocks])
])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4.h"
], [
	ext4_map_blocks(NULL, NULL, NULL, 0);
], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
	#include <linux/fs.h>
	#include "$EXT4_SRC_DIR/ext4.h"
]], [[
	ext4_map_blocks(NULL, NULL, NULL, 0);
]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LDISKFS_MAP_BLOCKS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_LDISKFS_FS_POSIX_ACL$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_LDISKFS_FS_SECURITY$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_LDISKFS_FS_XATTR$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_LDISKFS_FS_RW$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LDISKFS_SUBDIR$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LDISKFS_OSD$])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([LDISKFS_ENABLED], [test x$enable_ldiskfs = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LDISKFS_ENABLED_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LDISKFS_ENABLED_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([LDISKFS_ENABLED_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([LDISKFS_ENABLED_FALSE])
m4trace:configure.ac:25: -1- LB_CONFIG_ZFS
m4trace:configure.ac:25: -1- LB_SPL
m4trace:configure.ac:25: -1- m4_pattern_allow([^SPL$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SPL_OBJ$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SPL_VERSION$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXTRA_SYMBOLS$])
m4trace:configure.ac:25: -1- LB_ZFS
m4trace:configure.ac:25: -1- m4_pattern_allow([^ZFS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ZFS_OBJ$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ZFS_VERSION$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXTRA_SYMBOLS$])
m4trace:configure.ac:25: -1- LB_ZFS_DEVEL
m4trace:configure.ac:25: -1- LB_ZFS_USER
m4trace:configure.ac:25: -1- m4_pattern_allow([^ZFS_LIBZFS_INCLUDE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ZFS_LIBZFS_LDFLAGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_ZFS_OSD$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if zfs defines dsl_pool_config_enter/exit], [dsl_pool_config_enter], [
			#include <sys/dsl_pool.h>
		], [
			dsl_pool_config_enter(NULL, FTAG);
		], [
			AC_DEFINE(HAVE_DSL_POOL_CONFIG, 1,
				[Have dsl_pool_config_enter/exit in ZFS])
		])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
			#include <sys/dsl_pool.h>
		], [
			dsl_pool_config_enter(NULL, FTAG);
		], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
			#include <sys/dsl_pool.h>
		]], [[
			dsl_pool_config_enter(NULL, FTAG);
		]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DSL_POOL_CONFIG$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if zfs defines dsl_sync_task_do_nowait], [dsl_sync_task_do_nowait], [
			#include <sys/dsl_synctask.h>
		], [
			dsl_sync_task_do_nowait(NULL, NULL, NULL, NULL, NULL, 0, NULL);
		], [
			AC_DEFINE(HAVE_DSL_SYNC_TASK_DO_NOWAIT, 1,
				[Have dsl_sync_task_do_nowait in ZFS])
		])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
			#include <sys/dsl_synctask.h>
		], [
			dsl_sync_task_do_nowait(NULL, NULL, NULL, NULL, NULL, 0, NULL);
		], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
			#include <sys/dsl_synctask.h>
		]], [[
			dsl_sync_task_do_nowait(NULL, NULL, NULL, NULL, NULL, 0, NULL);
		]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_DSL_SYNC_TASK_DO_NOWAIT$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if zfs defines sa_spill_alloc], [sa_spill_alloc], [
			#include <sys/kmem.h>
			#include <sys/sa.h>
		], [
			void *ptr;

			ptr = sa_spill_alloc(KM_SLEEP);
			sa_spill_free(ptr);
		], [
			AC_DEFINE(HAVE_SA_SPILL_ALLOC, 1,
				[Have sa_spill_alloc in ZFS])
		])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
			#include <sys/kmem.h>
			#include <sys/sa.h>
		], [
			void *ptr;

			ptr = sa_spill_alloc(KM_SLEEP);
			sa_spill_free(ptr);
		], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
			#include <sys/kmem.h>
			#include <sys/sa.h>
		]], [[
			void *ptr;

			ptr = sa_spill_alloc(KM_SLEEP);
			sa_spill_free(ptr);
		]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SA_SPILL_ALLOC$])
m4trace:configure.ac:25: -1- LB_CHECK_COMPILE([if zfs defines spa_maxblocksize], [spa_maxblocksize], [
			#include <sys/spa.h>
		], [
			spa_t *spa = NULL;
			int size;

			size = spa_maxblocksize(spa);
		], [
			AC_DEFINE(HAVE_SPA_MAXBLOCKSIZE, 1,
				[Have spa_maxblocksize in ZFS])
		])
m4trace:configure.ac:25: -1- LB_LINUX_TRY_COMPILE([
			#include <sys/spa.h>
		], [
			spa_t *spa = NULL;
			int size;

			size = spa_maxblocksize(spa);
		], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- LB_LINUX_COMPILE_IFELSE([AC_LANG_SOURCE([LB_LANG_PROGRAM([[
			#include <sys/spa.h>
		]], [[
			spa_t *spa = NULL;
			int size;

			size = spa_maxblocksize(spa);
		]])])], [modules], [test -s build/conftest.o], [AS_VAR_SET([lb_compile], [yes])], [AS_VAR_SET([lb_compile], [no])])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SPA_MAXBLOCKSIZE$])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([ZFS_ENABLED], [test "x$enable_zfs" = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ZFS_ENABLED_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^ZFS_ENABLED_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([ZFS_ENABLED_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([ZFS_ENABLED_FALSE])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SERVER_SUPPORT$])
m4trace:configure.ac:25: -1- LC_NODEMAP_PROC_DEBUG
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2240: LC_NODEMAP_PROC_DEBUG is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NODEMAP_PROC_DEBUG$])
m4trace:configure.ac:25: -1- LIBCFS_CONFIG_CDEBUG
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:6: LIBCFS_CONFIG_CDEBUG is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CDEBUG_ENABLED$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:6: LIBCFS_CONFIG_CDEBUG is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CDEBUG_ENTRY_EXIT$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:6: LIBCFS_CONFIG_CDEBUG is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIBCFS_DEBUG$])
m4trace:configure.ac:25: -1- LC_QUOTA
m4trace:configure.ac:25: -1- LC_CONFIG_QUOTA
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2209: LC_CONFIG_QUOTA is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2223: LC_QUOTA is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SYS_QUOTA_H$])
m4trace:configure.ac:25: -1- LB_PATH_SNMP
m4trace:configure.ac:25: -1- LB_CHECK_FILE([$srcdir/snmp/lustre-snmp.c], [SNMP_DIST_SUBDIR="snmp"])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SNMP_DIST_SUBDIR$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SNMP_SUBDIR$])
m4trace:configure.ac:25: -1- LB_PATH_LUSTREIOKIT
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build.m4:174: LB_PATH_LUSTREIOKIT is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LUSTREIOKIT_SUBDIR$])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([BUILD_LUSTREIOKIT], [test "x$enable_iokit" = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILD_LUSTREIOKIT_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILD_LUSTREIOKIT_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BUILD_LUSTREIOKIT_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BUILD_LUSTREIOKIT_FALSE])
m4trace:configure.ac:25: -1- LB_DEFINE_E2FSPROGS_NAMES
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/config/lustre-build-ldiskfs.m4:277: LB_DEFINE_E2FSPROGS_NAMES is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LDISKFSPROGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^E2FSPROGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MKE2FS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DEBUGFS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^TUNE2FS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^E2LABEL$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DUMPE2FS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^E2FSCK$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PFSCK$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^E2FSPROGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MKE2FS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DEBUGFS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^TUNE2FS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^E2LABEL$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DUMPE2FS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^E2FSCK$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PFSCK$])
m4trace:configure.ac:25: -1- LIBCFS_CONFIGURE
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SPINLOCK_T$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:374: LIBCFS_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LIBREADLINE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIBREADLINE$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/libcfs/autoconf/lustre-libcfs.m4:374: LIBCFS_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LIBPTHREAD$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^PTHREAD_LIBS$])
m4trace:configure.ac:25: -1- LN_CONFIGURE
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:564: LN_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_LIBEFENCE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIBEFENCE$])
m4trace:configure.ac:25: -1- LN_CONFIG_MAX_PAYLOAD
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:6: LN_CONFIG_MAX_PAYLOAD is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:564: LN_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_LNET_MAX_PAYLOAD$])
m4trace:configure.ac:25: -1- LN_CONFIG_DLC
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:110: LN_CONFIG_DLC is expanded from...
/home/build/lustre-release/lnet/autoconf/lustre-lnet.m4:564: LN_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^USE_DLC$])
m4trace:configure.ac:25: -1- LC_CONFIGURE
m4trace:configure.ac:25: -1- LC_CONFIG_OBD_BUFFER_SIZE
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:54: LC_CONFIG_OBD_BUFFER_SIZE is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2318: LC_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_LUSTRE_OBD_MAX_IOCTL_BUFFER$])
m4trace:configure.ac:25: -1- LC_MDS_MAX_THREADS
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:113: LC_MDS_MAX_THREADS is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2318: LC_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MDS_MAX_THREADS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_SELINUX$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SELINUX$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2318: LC_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MIN_DF$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2318: LC_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^RANDOM_FAIL_ALLOC$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2318: LC_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_LUSTRE_DEBUG_EXPENSIVE_CHECK$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2318: LC_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^USE_LU_REF$])
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/lustre/autoconf/lustre-core.m4:2318: LC_CONFIGURE is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CONFIG_DEBUG_PAGESTATE_TRACKING$])
m4trace:configure.ac:25: -1- LS_CONFIGURE
m4trace:configure.ac:25: -2- _m4_warn([obsolete], [The macro `AC_HELP_STRING' is obsolete.
You should run autoupdate.], [../../lib/autoconf/general.m4:209: AC_HELP_STRING is expanded from...
/home/build/lustre-release/snmp/autoconf/lustre-snmp.m4:6: LS_CONFIGURE is expanded from...
../../lib/m4sugar/m4sh.m4:505: AS_IF is expanded from...
/home/build/lustre-release/config/lustre-build.m4:627: LB_CONFIGURE is expanded from...
configure.ac:25: the top level])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NET_SNMP_CONFIG$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NET_SNMP_CFLAGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NET_SNMP_LIBS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^agentdir$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^mibdir$])
m4trace:configure.ac:25: -1- LB_CONDITIONALS
m4trace:configure.ac:25: -1- AM_CONDITIONAL([MODULES], [test x$enable_modules = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MODULES_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MODULES_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([MODULES_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([MODULES_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([UTILS], [test x$enable_utils = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^UTILS_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^UTILS_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([UTILS_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([UTILS_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([TESTS], [test x$enable_tests = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^TESTS_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^TESTS_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([TESTS_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([TESTS_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([DOC], [test x$ENABLE_DOC = x1])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DOC_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^DOC_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([DOC_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([DOC_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([MANPAGES], [test x$enable_manpages = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MANPAGES_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MANPAGES_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([MANPAGES_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([MANPAGES_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([LINUX], [test x$lb_target_os = xlinux])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LINUX_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LINUX_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([LINUX_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([LINUX_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([USES_DPKG], [test x$uses_dpkg = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^USES_DPKG_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^USES_DPKG_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([USES_DPKG_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([USES_DPKG_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([USE_QUILT], [test x$use_quilt = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^USE_QUILT_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^USE_QUILT_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([USE_QUILT_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([USE_QUILT_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([RHEL], [test x$RHEL_KERNEL = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^RHEL_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^RHEL_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([RHEL_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([RHEL_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([SUSE], [test x$SUSE_KERNEL = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SUSE_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SUSE_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([SUSE_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([SUSE_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([HAVE_PCLMULQDQ], [test x$target_cpu = "xx86_64" -a x$target_vendor != "xk1om"])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_PCLMULQDQ_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_PCLMULQDQ_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([HAVE_PCLMULQDQ_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([HAVE_PCLMULQDQ_FALSE])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_PCLMULQDQ$])
m4trace:configure.ac:25: -1- LIBCFS_CONDITIONALS
m4trace:configure.ac:25: -1- AM_CONDITIONAL([HAVE_CRC32], [test "x$have_crc32" = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_CRC32_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^HAVE_CRC32_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([HAVE_CRC32_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([HAVE_CRC32_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([NEED_PCLMULQDQ_CRC32], [test "x$have_crc32" = xyes -a "x$enable_crc32_crypto" = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NEED_PCLMULQDQ_CRC32_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NEED_PCLMULQDQ_CRC32_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([NEED_PCLMULQDQ_CRC32_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([NEED_PCLMULQDQ_CRC32_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([NEED_PCLMULQDQ_CRC32C], [test "x$enable_crc32c_crypto" = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NEED_PCLMULQDQ_CRC32C_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^NEED_PCLMULQDQ_CRC32C_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([NEED_PCLMULQDQ_CRC32C_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([NEED_PCLMULQDQ_CRC32C_FALSE])
m4trace:configure.ac:25: -1- LN_CONDITIONALS
m4trace:configure.ac:25: -1- AM_CONDITIONAL([BUILD_O2IBLND], [test x$O2IBLND = "xo2iblnd"])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILD_O2IBLND_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILD_O2IBLND_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BUILD_O2IBLND_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BUILD_O2IBLND_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([BUILD_GNILND], [test x$GNILND  = "xgnilnd"])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILD_GNILND_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILD_GNILND_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BUILD_GNILND_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BUILD_GNILND_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([BUILD_DLC], [test x$USE_DLC = "xyes"])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILD_DLC_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BUILD_DLC_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BUILD_DLC_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BUILD_DLC_FALSE])
m4trace:configure.ac:25: -1- LC_CONDITIONALS
m4trace:configure.ac:25: -1- AM_CONDITIONAL([MPITESTS], [test x$enable_mpitests = xyes], [Build MPI Tests])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MPITESTS_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MPITESTS_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([MPITESTS_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([MPITESTS_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([CLIENT], [test x$enable_client = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CLIENT_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^CLIENT_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([CLIENT_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([CLIENT_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([SERVER], [test x$enable_server = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SERVER_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SERVER_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([SERVER_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([SERVER_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([SPLIT], [test x$enable_split = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SPLIT_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^SPLIT_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([SPLIT_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([SPLIT_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([BLKID], [test x$ac_cv_header_blkid_blkid_h = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BLKID_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^BLKID_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BLKID_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([BLKID_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([EXT2FS_DEVEL], [test x$ac_cv_header_ext2fs_ext2fs_h = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXT2FS_DEVEL_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXT2FS_DEVEL_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([EXT2FS_DEVEL_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([EXT2FS_DEVEL_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([GSS], [test x$enable_gss = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^GSS_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^GSS_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([GSS_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([GSS_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([GSS_KEYRING], [test x$enable_gss_keyring = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^GSS_KEYRING_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^GSS_KEYRING_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([GSS_KEYRING_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([GSS_KEYRING_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([GSS_PIPEFS], [test x$enable_gss_pipefs = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^GSS_PIPEFS_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^GSS_PIPEFS_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([GSS_PIPEFS_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([GSS_PIPEFS_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([LIBPTHREAD], [test x$enable_libpthread = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIBPTHREAD_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIBPTHREAD_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([LIBPTHREAD_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([LIBPTHREAD_FALSE])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([LLITE_LLOOP], [test x$enable_llite_lloop_module = xyes])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LLITE_LLOOP_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LLITE_LLOOP_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([LLITE_LLOOP_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([LLITE_LLOOP_FALSE])
m4trace:configure.ac:25: -1- LB_CONFIG_HEADERS
m4trace:configure.ac:25: -1- m4_pattern_allow([^EXTRA_KCFLAGS$])
m4trace:configure.ac:25: -1- LIBCFS_CONFIG_FILES
m4trace:configure.ac:25: -1- LB_CONFIG_FILES
m4trace:configure.ac:25: -1- LN_CONFIG_FILES
m4trace:configure.ac:25: -1- LC_CONFIG_FILES
m4trace:configure.ac:25: -1- LS_CONFIG_FILES
m4trace:configure.ac:25: -1- m4_pattern_allow([^ac_configure_args$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^MOSTLYCLEANFILES$])
m4trace:configure.ac:25: -1- LB_CONFIG_RPMBUILD_OPTIONS
m4trace:configure.ac:25: -1- m4_pattern_allow([^RPMBUILD_BINARY_ARGS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LIB@&t@OBJS$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^LTLIBOBJS$])
m4trace:configure.ac:25: -1- AM_CONDITIONAL([am__EXEEXT], [test -n "$EXEEXT"])
m4trace:configure.ac:25: -1- m4_pattern_allow([^am__EXEEXT_TRUE$])
m4trace:configure.ac:25: -1- m4_pattern_allow([^am__EXEEXT_FALSE$])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_TRUE])
m4trace:configure.ac:25: -1- _AM_SUBST_NOTMAKE([am__EXEEXT_FALSE])
m4trace:configure.ac:25: -1- _AC_AM_CONFIG_HEADER_HOOK(["$ac_file"])
m4trace:configure.ac:25: -1- _AM_OUTPUT_DEPENDENCY_COMMANDS
m4trace:configure.ac:25: -1- _LT_PROG_LTMAIN
